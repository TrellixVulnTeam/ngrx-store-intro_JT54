{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Scheduler = function () {\n  function Scheduler(SchedulerAction, now) {\n    if (now === void 0) {\n      now = Scheduler.now;\n    }\n\n    this.SchedulerAction = SchedulerAction;\n    this.now = now;\n  }\n\n  Scheduler.prototype.schedule = function (work, delay, state) {\n    if (delay === void 0) {\n      delay = 0;\n    }\n\n    return new this.SchedulerAction(this, work).schedule(state, delay);\n  };\n\n  Scheduler.now = function () {\n    return Date.now();\n  };\n\n  return Scheduler;\n}();\n\nexports.Scheduler = Scheduler; //# sourceMappingURL=Scheduler.js.map","map":{"version":3,"sources":["/Users/volodymyrmaliarov/Projects/ngRxIntro/ngrx-store-intro/node_modules/rxjs/internal/Scheduler.js"],"names":["Object","defineProperty","exports","value","Scheduler","SchedulerAction","now","prototype","schedule","work","delay","state","Date"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,SAAS,GAAI,YAAY;AACzB,WAASA,SAAT,CAAmBC,eAAnB,EAAoCC,GAApC,EAAyC;AACrC,QAAIA,GAAG,KAAK,KAAK,CAAjB,EAAoB;AAAEA,MAAAA,GAAG,GAAGF,SAAS,CAACE,GAAhB;AAAsB;;AAC5C,SAAKD,eAAL,GAAuBA,eAAvB;AACA,SAAKC,GAAL,GAAWA,GAAX;AACH;;AACDF,EAAAA,SAAS,CAACG,SAAV,CAAoBC,QAApB,GAA+B,UAAUC,IAAV,EAAgBC,KAAhB,EAAuBC,KAAvB,EAA8B;AACzD,QAAID,KAAK,KAAK,KAAK,CAAnB,EAAsB;AAAEA,MAAAA,KAAK,GAAG,CAAR;AAAY;;AACpC,WAAO,IAAI,KAAKL,eAAT,CAAyB,IAAzB,EAA+BI,IAA/B,EAAqCD,QAArC,CAA8CG,KAA9C,EAAqDD,KAArD,CAAP;AACH,GAHD;;AAIAN,EAAAA,SAAS,CAACE,GAAV,GAAgB,YAAY;AAAE,WAAOM,IAAI,CAACN,GAAL,EAAP;AAAoB,GAAlD;;AACA,SAAOF,SAAP;AACH,CAZgB,EAAjB;;AAaAF,OAAO,CAACE,SAAR,GAAoBA,SAApB,C,CACA","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Scheduler = (function () {\n    function Scheduler(SchedulerAction, now) {\n        if (now === void 0) { now = Scheduler.now; }\n        this.SchedulerAction = SchedulerAction;\n        this.now = now;\n    }\n    Scheduler.prototype.schedule = function (work, delay, state) {\n        if (delay === void 0) { delay = 0; }\n        return new this.SchedulerAction(this, work).schedule(state, delay);\n    };\n    Scheduler.now = function () { return Date.now(); };\n    return Scheduler;\n}());\nexports.Scheduler = Scheduler;\n//# sourceMappingURL=Scheduler.js.map"]},"metadata":{},"sourceType":"script"}