{"ast":null,"code":"import _toConsumableArray from \"/Users/volodymyrmaliarov/Projects/ngRxIntro/ngrx-store-intro/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _assertThisInitialized from \"/Users/volodymyrmaliarov/Projects/ngRxIntro/ngrx-store-intro/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"/Users/volodymyrmaliarov/Projects/ngRxIntro/ngrx-store-intro/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/volodymyrmaliarov/Projects/ngRxIntro/ngrx-store-intro/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/volodymyrmaliarov/Projects/ngRxIntro/ngrx-store-intro/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/volodymyrmaliarov/Projects/ngRxIntro/ngrx-store-intro/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"/Users/volodymyrmaliarov/Projects/ngRxIntro/ngrx-store-intro/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/volodymyrmaliarov/Projects/ngRxIntro/ngrx-store-intro/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { ComponentPortal, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { ɵɵdefineInjectable, Injectable, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, NgZone, Input, Output, Optional, SkipSelf, InjectionToken, ChangeDetectorRef, Inject, ViewChild, forwardRef, Directive, ViewContainerRef, Attribute, ContentChild, InjectFlags, Injector, Self, TemplateRef, NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialog, MatDialogModule } from '@angular/material/dialog';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { DateAdapter, MAT_DATE_FORMATS, mixinColor, ErrorStateMatcher, mixinErrorState, MatCommonModule } from '@angular/material/core';\nimport { Subject, Subscription, merge, of } from 'rxjs';\nimport { ESCAPE, hasModifierKey, SPACE, ENTER, PAGE_DOWN, PAGE_UP, END, HOME, DOWN_ARROW, UP_ARROW, RIGHT_ARROW, LEFT_ARROW, BACKSPACE } from '@angular/cdk/keycodes';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { take, startWith, filter } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceStringArray } from '@angular/cdk/coercion';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, Validators, NgControl, NgForm, FormGroupDirective, ControlContainer } from '@angular/forms';\nimport { MatFormField, MAT_FORM_FIELD, MatFormFieldControl } from '@angular/material/form-field';\nimport { MAT_INPUT_VALUE_ACCESSOR } from '@angular/material/input';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** @docs-private */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/material/button';\nimport * as ɵngcc5 from '@angular/cdk/a11y';\nimport * as ɵngcc6 from '@angular/cdk/portal';\nimport * as ɵngcc7 from '@angular/material/dialog';\nimport * as ɵngcc8 from '@angular/cdk/overlay';\nimport * as ɵngcc9 from '@angular/material/form-field';\nimport * as ɵngcc10 from '@angular/forms';\nvar _c0 = [\"mat-calendar-body\", \"\"];\n\nfunction MatCalendarBody_tr_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tr\", 2);\n    ɵngcc0.ɵɵelementStart(1, \"td\", 3);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵstyleProp(\"padding-top\", ctx_r0._cellPadding)(\"padding-bottom\", ctx_r0._cellPadding);\n    ɵngcc0.ɵɵattribute(\"colspan\", ctx_r0.numCols);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r0.label, \" \");\n  }\n}\n\nfunction MatCalendarBody_tr_1_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 7);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵstyleProp(\"padding-top\", ctx_r4._cellPadding)(\"padding-bottom\", ctx_r4._cellPadding);\n    ɵngcc0.ɵɵattribute(\"colspan\", ctx_r4._firstRowOffset);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r4._firstRowOffset >= ctx_r4.labelMinRequiredCells ? ctx_r4.label : \"\", \" \");\n  }\n}\n\nfunction MatCalendarBody_tr_1_td_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r9 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"td\", 8);\n    ɵngcc0.ɵɵlistener(\"click\", function MatCalendarBody_tr_1_td_2_Template_td_click_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r9);\n      var item_r6 = ctx.$implicit;\n      var ctx_r8 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r8._cellClicked(item_r6, $event);\n    });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 9);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(3, \"div\", 10);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var item_r6 = ctx.$implicit;\n    var colIndex_r7 = ctx.index;\n    var rowIndex_r3 = ɵngcc0.ɵɵnextContext().index;\n    var ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"width\", ctx_r5._cellWidth)(\"padding-top\", ctx_r5._cellPadding)(\"padding-bottom\", ctx_r5._cellPadding);\n    ɵngcc0.ɵɵclassProp(\"mat-calendar-body-disabled\", !item_r6.enabled)(\"mat-calendar-body-active\", ctx_r5._isActiveCell(rowIndex_r3, colIndex_r7))(\"mat-calendar-body-range-start\", ctx_r5._isRangeStart(item_r6.compareValue))(\"mat-calendar-body-range-end\", ctx_r5._isRangeEnd(item_r6.compareValue))(\"mat-calendar-body-in-range\", ctx_r5._isInRange(item_r6.compareValue))(\"mat-calendar-body-comparison-bridge-start\", ctx_r5._isComparisonBridgeStart(item_r6.compareValue, rowIndex_r3, colIndex_r7))(\"mat-calendar-body-comparison-bridge-end\", ctx_r5._isComparisonBridgeEnd(item_r6.compareValue, rowIndex_r3, colIndex_r7))(\"mat-calendar-body-comparison-start\", ctx_r5._isComparisonStart(item_r6.compareValue))(\"mat-calendar-body-comparison-end\", ctx_r5._isComparisonEnd(item_r6.compareValue))(\"mat-calendar-body-in-comparison-range\", ctx_r5._isInComparisonRange(item_r6.compareValue))(\"mat-calendar-body-preview-start\", ctx_r5._isPreviewStart(item_r6.compareValue))(\"mat-calendar-body-preview-end\", ctx_r5._isPreviewEnd(item_r6.compareValue))(\"mat-calendar-body-in-preview\", ctx_r5._isInPreview(item_r6.compareValue));\n    ɵngcc0.ɵɵproperty(\"ngClass\", item_r6.cssClasses)(\"tabindex\", ctx_r5._isActiveCell(rowIndex_r3, colIndex_r7) ? 0 : -1);\n    ɵngcc0.ɵɵattribute(\"data-mat-row\", rowIndex_r3)(\"data-mat-col\", colIndex_r7)(\"aria-label\", item_r6.ariaLabel)(\"aria-disabled\", !item_r6.enabled || null)(\"aria-selected\", ctx_r5._isSelected(item_r6.compareValue));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"mat-calendar-body-selected\", ctx_r5._isSelected(item_r6.compareValue))(\"mat-calendar-body-comparison-identical\", ctx_r5._isComparisonIdentical(item_r6.compareValue))(\"mat-calendar-body-today\", ctx_r5.todayValue === item_r6.compareValue);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", item_r6.displayValue, \" \");\n  }\n}\n\nfunction MatCalendarBody_tr_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tr\", 4);\n    ɵngcc0.ɵɵtemplate(1, MatCalendarBody_tr_1_td_1_Template, 2, 6, \"td\", 5);\n    ɵngcc0.ɵɵtemplate(2, MatCalendarBody_tr_1_td_2_Template, 4, 46, \"td\", 6);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var row_r2 = ctx.$implicit;\n    var rowIndex_r3 = ctx.index;\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", rowIndex_r3 === 0 && ctx_r1._firstRowOffset);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", row_r2);\n  }\n}\n\nfunction MatMonthView_th_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\", 5);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var day_r1 = ctx.$implicit;\n    ɵngcc0.ɵɵattribute(\"aria-label\", day_r1.long);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(day_r1.narrow);\n  }\n}\n\nvar _c1 = [\"*\"];\n\nfunction MatCalendar_ng_template_0_Template(rf, ctx) {}\n\nfunction MatCalendar_mat_month_view_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r5 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"mat-month-view\", 5);\n    ɵngcc0.ɵɵlistener(\"activeDateChange\", function MatCalendar_mat_month_view_2_Template_mat_month_view_activeDateChange_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      var ctx_r4 = ɵngcc0.ɵɵnextContext();\n      return ctx_r4.activeDate = $event;\n    })(\"_userSelection\", function MatCalendar_mat_month_view_2_Template_mat_month_view__userSelection_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      var ctx_r6 = ɵngcc0.ɵɵnextContext();\n      return ctx_r6._dateSelected($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"activeDate\", ctx_r1.activeDate)(\"selected\", ctx_r1.selected)(\"dateFilter\", ctx_r1.dateFilter)(\"maxDate\", ctx_r1.maxDate)(\"minDate\", ctx_r1.minDate)(\"dateClass\", ctx_r1.dateClass)(\"comparisonStart\", ctx_r1.comparisonStart)(\"comparisonEnd\", ctx_r1.comparisonEnd);\n  }\n}\n\nfunction MatCalendar_mat_year_view_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r8 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"mat-year-view\", 6);\n    ɵngcc0.ɵɵlistener(\"activeDateChange\", function MatCalendar_mat_year_view_3_Template_mat_year_view_activeDateChange_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r8);\n      var ctx_r7 = ɵngcc0.ɵɵnextContext();\n      return ctx_r7.activeDate = $event;\n    })(\"monthSelected\", function MatCalendar_mat_year_view_3_Template_mat_year_view_monthSelected_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r8);\n      var ctx_r9 = ɵngcc0.ɵɵnextContext();\n      return ctx_r9._monthSelectedInYearView($event);\n    })(\"selectedChange\", function MatCalendar_mat_year_view_3_Template_mat_year_view_selectedChange_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r8);\n      var ctx_r10 = ɵngcc0.ɵɵnextContext();\n      return ctx_r10._goToDateInView($event, \"month\");\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"activeDate\", ctx_r2.activeDate)(\"selected\", ctx_r2.selected)(\"dateFilter\", ctx_r2.dateFilter)(\"maxDate\", ctx_r2.maxDate)(\"minDate\", ctx_r2.minDate)(\"dateClass\", ctx_r2.dateClass);\n  }\n}\n\nfunction MatCalendar_mat_multi_year_view_4_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r12 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"mat-multi-year-view\", 7);\n    ɵngcc0.ɵɵlistener(\"activeDateChange\", function MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_activeDateChange_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r12);\n      var ctx_r11 = ɵngcc0.ɵɵnextContext();\n      return ctx_r11.activeDate = $event;\n    })(\"yearSelected\", function MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_yearSelected_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r12);\n      var ctx_r13 = ɵngcc0.ɵɵnextContext();\n      return ctx_r13._yearSelectedInMultiYearView($event);\n    })(\"selectedChange\", function MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_selectedChange_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r12);\n      var ctx_r14 = ɵngcc0.ɵɵnextContext();\n      return ctx_r14._goToDateInView($event, \"year\");\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"activeDate\", ctx_r3.activeDate)(\"selected\", ctx_r3.selected)(\"dateFilter\", ctx_r3.dateFilter)(\"maxDate\", ctx_r3.maxDate)(\"minDate\", ctx_r3.minDate)(\"dateClass\", ctx_r3.dateClass);\n  }\n}\n\nfunction MatDatepickerContent_ng_template_2_Template(rf, ctx) {}\n\nvar _c2 = [\"button\"];\n\nfunction MatDatepickerToggle__svg_svg_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(0, \"svg\", 3);\n    ɵngcc0.ɵɵelement(1, \"path\", 4);\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nvar _c3 = [[[\"\", \"matDatepickerToggleIcon\", \"\"]]];\nvar _c4 = [\"[matDatepickerToggleIcon]\"];\nvar _c5 = [[[\"input\", \"matStartDate\", \"\"]], [[\"input\", \"matEndDate\", \"\"]]];\nvar _c6 = [\"input[matStartDate]\", \"input[matEndDate]\"];\n\nfunction MatDatepickerActions_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n    ɵngcc0.ɵɵprojection(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction createMissingDateImplError(provider) {\n  return Error(\"MatDatepicker: No provider found for \".concat(provider, \". You must import one of the following \") + \"modules at your application root: MatNativeDateModule, MatMomentDateModule, or provide a \" + \"custom implementation.\");\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Datepicker data that requires internationalization. */\n\n\nvar MatDatepickerIntl = /*#__PURE__*/function () {\n  function MatDatepickerIntl() {\n    _classCallCheck(this, MatDatepickerIntl);\n\n    /**\n     * Stream that emits whenever the labels here are changed. Use this to notify\n     * components if the labels have changed after initialization.\n     */\n    this.changes = new Subject();\n    /** A label for the calendar popup (used by screen readers). */\n\n    this.calendarLabel = 'Calendar';\n    /** A label for the button used to open the calendar popup (used by screen readers). */\n\n    this.openCalendarLabel = 'Open calendar';\n    /** Label for the button used to close the calendar popup. */\n\n    this.closeCalendarLabel = 'Close calendar';\n    /** A label for the previous month button (used by screen readers). */\n\n    this.prevMonthLabel = 'Previous month';\n    /** A label for the next month button (used by screen readers). */\n\n    this.nextMonthLabel = 'Next month';\n    /** A label for the previous year button (used by screen readers). */\n\n    this.prevYearLabel = 'Previous year';\n    /** A label for the next year button (used by screen readers). */\n\n    this.nextYearLabel = 'Next year';\n    /** A label for the previous multi-year button (used by screen readers). */\n\n    this.prevMultiYearLabel = 'Previous 20 years';\n    /** A label for the next multi-year button (used by screen readers). */\n\n    this.nextMultiYearLabel = 'Next 20 years';\n    /** A label for the 'switch to month view' button (used by screen readers). */\n\n    this.switchToMonthViewLabel = 'Choose date';\n    /** A label for the 'switch to year view' button (used by screen readers). */\n\n    this.switchToMultiYearViewLabel = 'Choose month and year';\n  }\n  /** Formats a range of years. */\n\n\n  _createClass(MatDatepickerIntl, [{\n    key: \"formatYearRange\",\n    value: function formatYearRange(start, end) {\n      return \"\".concat(start, \" \\u2013 \").concat(end);\n    }\n  }]);\n\n  return MatDatepickerIntl;\n}();\n\nMatDatepickerIntl.ɵfac = function MatDatepickerIntl_Factory(t) {\n  return new (t || MatDatepickerIntl)();\n};\n\nMatDatepickerIntl.ɵprov = ɵɵdefineInjectable({\n  factory: function MatDatepickerIntl_Factory() {\n    return new MatDatepickerIntl();\n  },\n  token: MatDatepickerIntl,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerIntl, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * An internal class that represents the data corresponding to a single calendar cell.\n * @docs-private\n */\n\n\nvar MatCalendarCell = /*#__PURE__*/_createClass(function MatCalendarCell(value, displayValue, ariaLabel, enabled) {\n  var cssClasses = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n  var compareValue = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : value;\n  var rawValue = arguments.length > 6 ? arguments[6] : undefined;\n\n  _classCallCheck(this, MatCalendarCell);\n\n  this.value = value;\n  this.displayValue = displayValue;\n  this.ariaLabel = ariaLabel;\n  this.enabled = enabled;\n  this.cssClasses = cssClasses;\n  this.compareValue = compareValue;\n  this.rawValue = rawValue;\n});\n/**\n * An internal component used to display calendar data in a table.\n * @docs-private\n */\n\n\nvar MatCalendarBody = /*#__PURE__*/function () {\n  function MatCalendarBody(_elementRef, _ngZone) {\n    var _this = this;\n\n    _classCallCheck(this, MatCalendarBody);\n\n    this._elementRef = _elementRef;\n    this._ngZone = _ngZone;\n    /** The number of columns in the table. */\n\n    this.numCols = 7;\n    /** The cell number of the active cell in the table. */\n\n    this.activeCell = 0;\n    /** Whether a range is being selected. */\n\n    this.isRange = false;\n    /**\n     * The aspect ratio (width / height) to use for the cells in the table. This aspect ratio will be\n     * maintained even as the table resizes.\n     */\n\n    this.cellAspectRatio = 1;\n    /** Start of the preview range. */\n\n    this.previewStart = null;\n    /** End of the preview range. */\n\n    this.previewEnd = null;\n    /** Emits when a new value is selected. */\n\n    this.selectedValueChange = new EventEmitter();\n    /** Emits when the preview has changed as a result of a user action. */\n\n    this.previewChange = new EventEmitter();\n    /**\n     * Event handler for when the user enters an element\n     * inside the calendar body (e.g. by hovering in or focus).\n     */\n\n    this._enterHandler = function (event) {\n      if (_this._skipNextFocus && event.type === 'focus') {\n        _this._skipNextFocus = false;\n        return;\n      } // We only need to hit the zone when we're selecting a range.\n\n\n      if (event.target && _this.isRange) {\n        var cell = _this._getCellFromElement(event.target);\n\n        if (cell) {\n          _this._ngZone.run(function () {\n            return _this.previewChange.emit({\n              value: cell.enabled ? cell : null,\n              event: event\n            });\n          });\n        }\n      }\n    };\n    /**\n     * Event handler for when the user's pointer leaves an element\n     * inside the calendar body (e.g. by hovering out or blurring).\n     */\n\n\n    this._leaveHandler = function (event) {\n      // We only need to hit the zone when we're selecting a range.\n      if (_this.previewEnd !== null && _this.isRange) {\n        // Only reset the preview end value when leaving cells. This looks better, because\n        // we have a gap between the cells and the rows and we don't want to remove the\n        // range just for it to show up again when the user moves a few pixels to the side.\n        if (event.target && isTableCell(event.target)) {\n          _this._ngZone.run(function () {\n            return _this.previewChange.emit({\n              value: null,\n              event: event\n            });\n          });\n        }\n      }\n    };\n\n    _ngZone.runOutsideAngular(function () {\n      var element = _elementRef.nativeElement;\n      element.addEventListener('mouseenter', _this._enterHandler, true);\n      element.addEventListener('focus', _this._enterHandler, true);\n      element.addEventListener('mouseleave', _this._leaveHandler, true);\n      element.addEventListener('blur', _this._leaveHandler, true);\n    });\n  }\n  /** Called when a cell is clicked. */\n\n\n  _createClass(MatCalendarBody, [{\n    key: \"_cellClicked\",\n    value: function _cellClicked(cell, event) {\n      if (cell.enabled) {\n        this.selectedValueChange.emit({\n          value: cell.value,\n          event: event\n        });\n      }\n    }\n    /** Returns whether a cell should be marked as selected. */\n\n  }, {\n    key: \"_isSelected\",\n    value: function _isSelected(value) {\n      return this.startValue === value || this.endValue === value;\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var columnChanges = changes['numCols'];\n      var rows = this.rows,\n          numCols = this.numCols;\n\n      if (changes['rows'] || columnChanges) {\n        this._firstRowOffset = rows && rows.length && rows[0].length ? numCols - rows[0].length : 0;\n      }\n\n      if (changes['cellAspectRatio'] || columnChanges || !this._cellPadding) {\n        this._cellPadding = \"\".concat(50 * this.cellAspectRatio / numCols, \"%\");\n      }\n\n      if (columnChanges || !this._cellWidth) {\n        this._cellWidth = \"\".concat(100 / numCols, \"%\");\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      var element = this._elementRef.nativeElement;\n      element.removeEventListener('mouseenter', this._enterHandler, true);\n      element.removeEventListener('focus', this._enterHandler, true);\n      element.removeEventListener('mouseleave', this._leaveHandler, true);\n      element.removeEventListener('blur', this._leaveHandler, true);\n    }\n    /** Returns whether a cell is active. */\n\n  }, {\n    key: \"_isActiveCell\",\n    value: function _isActiveCell(rowIndex, colIndex) {\n      var cellNumber = rowIndex * this.numCols + colIndex; // Account for the fact that the first row may not have as many cells.\n\n      if (rowIndex) {\n        cellNumber -= this._firstRowOffset;\n      }\n\n      return cellNumber == this.activeCell;\n    }\n    /** Focuses the active cell after the microtask queue is empty. */\n\n  }, {\n    key: \"_focusActiveCell\",\n    value: function _focusActiveCell() {\n      var _this2 = this;\n\n      var movePreview = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      this._ngZone.runOutsideAngular(function () {\n        _this2._ngZone.onStable.pipe(take(1)).subscribe(function () {\n          var activeCell = _this2._elementRef.nativeElement.querySelector('.mat-calendar-body-active');\n\n          if (activeCell) {\n            if (!movePreview) {\n              _this2._skipNextFocus = true;\n            }\n\n            activeCell.focus();\n          }\n        });\n      });\n    }\n    /** Gets whether a value is the start of the main range. */\n\n  }, {\n    key: \"_isRangeStart\",\n    value: function _isRangeStart(value) {\n      return isStart(value, this.startValue, this.endValue);\n    }\n    /** Gets whether a value is the end of the main range. */\n\n  }, {\n    key: \"_isRangeEnd\",\n    value: function _isRangeEnd(value) {\n      return isEnd(value, this.startValue, this.endValue);\n    }\n    /** Gets whether a value is within the currently-selected range. */\n\n  }, {\n    key: \"_isInRange\",\n    value: function _isInRange(value) {\n      return isInRange(value, this.startValue, this.endValue, this.isRange);\n    }\n    /** Gets whether a value is the start of the comparison range. */\n\n  }, {\n    key: \"_isComparisonStart\",\n    value: function _isComparisonStart(value) {\n      return isStart(value, this.comparisonStart, this.comparisonEnd);\n    }\n    /** Whether the cell is a start bridge cell between the main and comparison ranges. */\n\n  }, {\n    key: \"_isComparisonBridgeStart\",\n    value: function _isComparisonBridgeStart(value, rowIndex, colIndex) {\n      if (!this._isComparisonStart(value) || this._isRangeStart(value) || !this._isInRange(value)) {\n        return false;\n      }\n\n      var previousCell = this.rows[rowIndex][colIndex - 1];\n\n      if (!previousCell) {\n        var previousRow = this.rows[rowIndex - 1];\n        previousCell = previousRow && previousRow[previousRow.length - 1];\n      }\n\n      return previousCell && !this._isRangeEnd(previousCell.compareValue);\n    }\n    /** Whether the cell is an end bridge cell between the main and comparison ranges. */\n\n  }, {\n    key: \"_isComparisonBridgeEnd\",\n    value: function _isComparisonBridgeEnd(value, rowIndex, colIndex) {\n      if (!this._isComparisonEnd(value) || this._isRangeEnd(value) || !this._isInRange(value)) {\n        return false;\n      }\n\n      var nextCell = this.rows[rowIndex][colIndex + 1];\n\n      if (!nextCell) {\n        var nextRow = this.rows[rowIndex + 1];\n        nextCell = nextRow && nextRow[0];\n      }\n\n      return nextCell && !this._isRangeStart(nextCell.compareValue);\n    }\n    /** Gets whether a value is the end of the comparison range. */\n\n  }, {\n    key: \"_isComparisonEnd\",\n    value: function _isComparisonEnd(value) {\n      return isEnd(value, this.comparisonStart, this.comparisonEnd);\n    }\n    /** Gets whether a value is within the current comparison range. */\n\n  }, {\n    key: \"_isInComparisonRange\",\n    value: function _isInComparisonRange(value) {\n      return isInRange(value, this.comparisonStart, this.comparisonEnd, this.isRange);\n    }\n    /**\n     * Gets whether a value is the same as the start and end of the comparison range.\n     * For context, the functions that we use to determine whether something is the start/end of\n     * a range don't allow for the start and end to be on the same day, because we'd have to use\n     * much more specific CSS selectors to style them correctly in all scenarios. This is fine for\n     * the regular range, because when it happens, the selected styles take over and still show where\n     * the range would've been, however we don't have these selected styles for a comparison range.\n     * This function is used to apply a class that serves the same purpose as the one for selected\n     * dates, but it only applies in the context of a comparison range.\n     */\n\n  }, {\n    key: \"_isComparisonIdentical\",\n    value: function _isComparisonIdentical(value) {\n      // Note that we don't need to null check the start/end\n      // here, because the `value` will always be defined.\n      return this.comparisonStart === this.comparisonEnd && value === this.comparisonStart;\n    }\n    /** Gets whether a value is the start of the preview range. */\n\n  }, {\n    key: \"_isPreviewStart\",\n    value: function _isPreviewStart(value) {\n      return isStart(value, this.previewStart, this.previewEnd);\n    }\n    /** Gets whether a value is the end of the preview range. */\n\n  }, {\n    key: \"_isPreviewEnd\",\n    value: function _isPreviewEnd(value) {\n      return isEnd(value, this.previewStart, this.previewEnd);\n    }\n    /** Gets whether a value is inside the preview range. */\n\n  }, {\n    key: \"_isInPreview\",\n    value: function _isInPreview(value) {\n      return isInRange(value, this.previewStart, this.previewEnd, this.isRange);\n    }\n    /** Finds the MatCalendarCell that corresponds to a DOM node. */\n\n  }, {\n    key: \"_getCellFromElement\",\n    value: function _getCellFromElement(element) {\n      var cell;\n\n      if (isTableCell(element)) {\n        cell = element;\n      } else if (isTableCell(element.parentNode)) {\n        cell = element.parentNode;\n      }\n\n      if (cell) {\n        var row = cell.getAttribute('data-mat-row');\n        var col = cell.getAttribute('data-mat-col');\n\n        if (row && col) {\n          return this.rows[parseInt(row)][parseInt(col)];\n        }\n      }\n\n      return null;\n    }\n  }]);\n\n  return MatCalendarBody;\n}();\n\nMatCalendarBody.ɵfac = function MatCalendarBody_Factory(t) {\n  return new (t || MatCalendarBody)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n};\n\nMatCalendarBody.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: MatCalendarBody,\n  selectors: [[\"\", \"mat-calendar-body\", \"\"]],\n  hostAttrs: [\"role\", \"grid\", \"aria-readonly\", \"true\", 1, \"mat-calendar-body\"],\n  inputs: {\n    numCols: \"numCols\",\n    activeCell: \"activeCell\",\n    isRange: \"isRange\",\n    cellAspectRatio: \"cellAspectRatio\",\n    previewStart: \"previewStart\",\n    previewEnd: \"previewEnd\",\n    label: \"label\",\n    rows: \"rows\",\n    todayValue: \"todayValue\",\n    startValue: \"startValue\",\n    endValue: \"endValue\",\n    labelMinRequiredCells: \"labelMinRequiredCells\",\n    comparisonStart: \"comparisonStart\",\n    comparisonEnd: \"comparisonEnd\"\n  },\n  outputs: {\n    selectedValueChange: \"selectedValueChange\",\n    previewChange: \"previewChange\"\n  },\n  exportAs: [\"matCalendarBody\"],\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  attrs: _c0,\n  decls: 2,\n  vars: 2,\n  consts: [[\"aria-hidden\", \"true\", 4, \"ngIf\"], [\"role\", \"row\", 4, \"ngFor\", \"ngForOf\"], [\"aria-hidden\", \"true\"], [1, \"mat-calendar-body-label\"], [\"role\", \"row\"], [\"aria-hidden\", \"true\", \"class\", \"mat-calendar-body-label\", 3, \"paddingTop\", \"paddingBottom\", 4, \"ngIf\"], [\"role\", \"gridcell\", \"class\", \"mat-calendar-body-cell\", 3, \"ngClass\", \"tabindex\", \"mat-calendar-body-disabled\", \"mat-calendar-body-active\", \"mat-calendar-body-range-start\", \"mat-calendar-body-range-end\", \"mat-calendar-body-in-range\", \"mat-calendar-body-comparison-bridge-start\", \"mat-calendar-body-comparison-bridge-end\", \"mat-calendar-body-comparison-start\", \"mat-calendar-body-comparison-end\", \"mat-calendar-body-in-comparison-range\", \"mat-calendar-body-preview-start\", \"mat-calendar-body-preview-end\", \"mat-calendar-body-in-preview\", \"width\", \"paddingTop\", \"paddingBottom\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"aria-hidden\", \"true\", 1, \"mat-calendar-body-label\"], [\"role\", \"gridcell\", 1, \"mat-calendar-body-cell\", 3, \"ngClass\", \"tabindex\", \"click\"], [1, \"mat-calendar-body-cell-content\", \"mat-focus-indicator\"], [1, \"mat-calendar-body-cell-preview\"]],\n  template: function MatCalendarBody_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, MatCalendarBody_tr_0_Template, 3, 6, \"tr\", 0);\n      ɵngcc0.ɵɵtemplate(1, MatCalendarBody_tr_1_Template, 3, 2, \"tr\", 1);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx._firstRowOffset < ctx.labelMinRequiredCells);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.rows);\n    }\n  },\n  directives: [ɵngcc1.NgIf, ɵngcc1.NgForOf, ɵngcc1.NgClass],\n  styles: [\".mat-calendar-body{min-width:224px}.mat-calendar-body-label{height:0;line-height:0;text-align:left;padding-left:4.7142857143%;padding-right:4.7142857143%}.mat-calendar-body-cell{position:relative;height:0;line-height:0;text-align:center;outline:none;cursor:pointer}.mat-calendar-body-cell::before,.mat-calendar-body-cell::after,.mat-calendar-body-cell-preview{content:\\\"\\\";position:absolute;top:5%;left:0;z-index:0;box-sizing:border-box;height:90%;width:100%}.mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-start::after,.mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,.mat-calendar-body-comparison-start::after,.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:5%;width:95%;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,[dir=rtl] .mat-calendar-body-comparison-start::after,[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:0;border-radius:0;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,.mat-calendar-body-comparison-end::after,.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}[dir=rtl] .mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,[dir=rtl] .mat-calendar-body-comparison-end::after,[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{left:5%;border-radius:0;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-comparison-bridge-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-bridge-end.mat-calendar-body-range-start::after{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end.mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-end.mat-calendar-body-range-start::after{width:90%}.mat-calendar-body-in-preview .mat-calendar-body-cell-preview{border-top:dashed 1px;border-bottom:dashed 1px}.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:dashed 1px}[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:0;border-right:dashed 1px}.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:dashed 1px}[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:0;border-left:dashed 1px}.mat-calendar-body-disabled{cursor:default}.cdk-high-contrast-active .mat-calendar-body-disabled{opacity:.5}.mat-calendar-body-cell-content{top:5%;left:5%;z-index:1;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;line-height:1;border-width:1px;border-style:solid;border-radius:999px}.mat-calendar-body-cell-content.mat-focus-indicator{position:absolute}.cdk-high-contrast-active .mat-calendar-body-cell-content{border:none}.mat-datepicker-dialog .mat-dialog-container{position:relative;overflow:visible}.cdk-high-contrast-active .mat-datepicker-popup:not(:empty),.cdk-high-contrast-active .mat-calendar-body-selected{outline:solid 1px}.cdk-high-contrast-active .mat-calendar-body-today{outline:dotted 1px}.cdk-high-contrast-active .cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected),.cdk-high-contrast-active .cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){outline:dotted 2px}[dir=rtl] .mat-calendar-body-label{text-align:right}@media(hover: none){.mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){background-color:transparent}}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nMatCalendarBody.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: NgZone\n  }];\n};\n\nMatCalendarBody.propDecorators = {\n  label: [{\n    type: Input\n  }],\n  rows: [{\n    type: Input\n  }],\n  todayValue: [{\n    type: Input\n  }],\n  startValue: [{\n    type: Input\n  }],\n  endValue: [{\n    type: Input\n  }],\n  labelMinRequiredCells: [{\n    type: Input\n  }],\n  numCols: [{\n    type: Input\n  }],\n  activeCell: [{\n    type: Input\n  }],\n  isRange: [{\n    type: Input\n  }],\n  cellAspectRatio: [{\n    type: Input\n  }],\n  comparisonStart: [{\n    type: Input\n  }],\n  comparisonEnd: [{\n    type: Input\n  }],\n  previewStart: [{\n    type: Input\n  }],\n  previewEnd: [{\n    type: Input\n  }],\n  selectedValueChange: [{\n    type: Output\n  }],\n  previewChange: [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCalendarBody, [{\n    type: Component,\n    args: [{\n      selector: '[mat-calendar-body]',\n      template: \"<!--\\n  If there's not enough space in the first row, create a separate label row. We mark this row as\\n  aria-hidden because we don't want it to be read out as one of the weeks in the month.\\n-->\\n<tr *ngIf=\\\"_firstRowOffset < labelMinRequiredCells\\\" aria-hidden=\\\"true\\\">\\n  <td class=\\\"mat-calendar-body-label\\\"\\n      [attr.colspan]=\\\"numCols\\\"\\n      [style.paddingTop]=\\\"_cellPadding\\\"\\n      [style.paddingBottom]=\\\"_cellPadding\\\">\\n    {{label}}\\n  </td>\\n</tr>\\n\\n<!-- Create the first row separately so we can include a special spacer cell. -->\\n<tr *ngFor=\\\"let row of rows; let rowIndex = index\\\" role=\\\"row\\\">\\n  <!--\\n    We mark this cell as aria-hidden so it doesn't get read out as one of the days in the week.\\n    The aspect ratio of the table cells is maintained by setting the top and bottom padding as a\\n    percentage of the width (a variant of the trick described here:\\n    https://www.w3schools.com/howto/howto_css_aspect_ratio.asp).\\n  -->\\n  <td *ngIf=\\\"rowIndex === 0 && _firstRowOffset\\\"\\n      aria-hidden=\\\"true\\\"\\n      class=\\\"mat-calendar-body-label\\\"\\n      [attr.colspan]=\\\"_firstRowOffset\\\"\\n      [style.paddingTop]=\\\"_cellPadding\\\"\\n      [style.paddingBottom]=\\\"_cellPadding\\\">\\n    {{_firstRowOffset >= labelMinRequiredCells ? label : ''}}\\n  </td>\\n  <td *ngFor=\\\"let item of row; let colIndex = index\\\"\\n      role=\\\"gridcell\\\"\\n      class=\\\"mat-calendar-body-cell\\\"\\n      [ngClass]=\\\"item.cssClasses\\\"\\n      [tabindex]=\\\"_isActiveCell(rowIndex, colIndex) ? 0 : -1\\\"\\n      [attr.data-mat-row]=\\\"rowIndex\\\"\\n      [attr.data-mat-col]=\\\"colIndex\\\"\\n      [class.mat-calendar-body-disabled]=\\\"!item.enabled\\\"\\n      [class.mat-calendar-body-active]=\\\"_isActiveCell(rowIndex, colIndex)\\\"\\n      [class.mat-calendar-body-range-start]=\\\"_isRangeStart(item.compareValue)\\\"\\n      [class.mat-calendar-body-range-end]=\\\"_isRangeEnd(item.compareValue)\\\"\\n      [class.mat-calendar-body-in-range]=\\\"_isInRange(item.compareValue)\\\"\\n      [class.mat-calendar-body-comparison-bridge-start]=\\\"_isComparisonBridgeStart(item.compareValue, rowIndex, colIndex)\\\"\\n      [class.mat-calendar-body-comparison-bridge-end]=\\\"_isComparisonBridgeEnd(item.compareValue, rowIndex, colIndex)\\\"\\n      [class.mat-calendar-body-comparison-start]=\\\"_isComparisonStart(item.compareValue)\\\"\\n      [class.mat-calendar-body-comparison-end]=\\\"_isComparisonEnd(item.compareValue)\\\"\\n      [class.mat-calendar-body-in-comparison-range]=\\\"_isInComparisonRange(item.compareValue)\\\"\\n      [class.mat-calendar-body-preview-start]=\\\"_isPreviewStart(item.compareValue)\\\"\\n      [class.mat-calendar-body-preview-end]=\\\"_isPreviewEnd(item.compareValue)\\\"\\n      [class.mat-calendar-body-in-preview]=\\\"_isInPreview(item.compareValue)\\\"\\n      [attr.aria-label]=\\\"item.ariaLabel\\\"\\n      [attr.aria-disabled]=\\\"!item.enabled || null\\\"\\n      [attr.aria-selected]=\\\"_isSelected(item.compareValue)\\\"\\n      (click)=\\\"_cellClicked(item, $event)\\\"\\n      [style.width]=\\\"_cellWidth\\\"\\n      [style.paddingTop]=\\\"_cellPadding\\\"\\n      [style.paddingBottom]=\\\"_cellPadding\\\">\\n      <div class=\\\"mat-calendar-body-cell-content mat-focus-indicator\\\"\\n        [class.mat-calendar-body-selected]=\\\"_isSelected(item.compareValue)\\\"\\n        [class.mat-calendar-body-comparison-identical]=\\\"_isComparisonIdentical(item.compareValue)\\\"\\n        [class.mat-calendar-body-today]=\\\"todayValue === item.compareValue\\\">\\n        {{item.displayValue}}\\n      </div>\\n      <div class=\\\"mat-calendar-body-cell-preview\\\"></div>\\n  </td>\\n</tr>\\n\",\n      host: {\n        'class': 'mat-calendar-body',\n        'role': 'grid',\n        'aria-readonly': 'true'\n      },\n      exportAs: 'matCalendarBody',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".mat-calendar-body{min-width:224px}.mat-calendar-body-label{height:0;line-height:0;text-align:left;padding-left:4.7142857143%;padding-right:4.7142857143%}.mat-calendar-body-cell{position:relative;height:0;line-height:0;text-align:center;outline:none;cursor:pointer}.mat-calendar-body-cell::before,.mat-calendar-body-cell::after,.mat-calendar-body-cell-preview{content:\\\"\\\";position:absolute;top:5%;left:0;z-index:0;box-sizing:border-box;height:90%;width:100%}.mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-start::after,.mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,.mat-calendar-body-comparison-start::after,.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:5%;width:95%;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,[dir=rtl] .mat-calendar-body-comparison-start::after,[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:0;border-radius:0;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,.mat-calendar-body-comparison-end::after,.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}[dir=rtl] .mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,[dir=rtl] .mat-calendar-body-comparison-end::after,[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{left:5%;border-radius:0;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-comparison-bridge-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-bridge-end.mat-calendar-body-range-start::after{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end.mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-end.mat-calendar-body-range-start::after{width:90%}.mat-calendar-body-in-preview .mat-calendar-body-cell-preview{border-top:dashed 1px;border-bottom:dashed 1px}.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:dashed 1px}[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:0;border-right:dashed 1px}.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:dashed 1px}[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:0;border-left:dashed 1px}.mat-calendar-body-disabled{cursor:default}.cdk-high-contrast-active .mat-calendar-body-disabled{opacity:.5}.mat-calendar-body-cell-content{top:5%;left:5%;z-index:1;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;line-height:1;border-width:1px;border-style:solid;border-radius:999px}.mat-calendar-body-cell-content.mat-focus-indicator{position:absolute}.cdk-high-contrast-active .mat-calendar-body-cell-content{border:none}.mat-datepicker-dialog .mat-dialog-container{position:relative;overflow:visible}.cdk-high-contrast-active .mat-datepicker-popup:not(:empty),.cdk-high-contrast-active .mat-calendar-body-selected{outline:solid 1px}.cdk-high-contrast-active .mat-calendar-body-today{outline:dotted 1px}.cdk-high-contrast-active .cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected),.cdk-high-contrast-active .cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){outline:dotted 2px}[dir=rtl] .mat-calendar-body-label{text-align:right}@media(hover: none){.mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){background-color:transparent}}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, {\n    numCols: [{\n      type: Input\n    }],\n    activeCell: [{\n      type: Input\n    }],\n    isRange: [{\n      type: Input\n    }],\n    cellAspectRatio: [{\n      type: Input\n    }],\n    previewStart: [{\n      type: Input\n    }],\n    previewEnd: [{\n      type: Input\n    }],\n    selectedValueChange: [{\n      type: Output\n    }],\n    previewChange: [{\n      type: Output\n    }],\n    label: [{\n      type: Input\n    }],\n    rows: [{\n      type: Input\n    }],\n    todayValue: [{\n      type: Input\n    }],\n    startValue: [{\n      type: Input\n    }],\n    endValue: [{\n      type: Input\n    }],\n    labelMinRequiredCells: [{\n      type: Input\n    }],\n    comparisonStart: [{\n      type: Input\n    }],\n    comparisonEnd: [{\n      type: Input\n    }]\n  });\n})();\n/** Checks whether a node is a table cell element. */\n\n\nfunction isTableCell(node) {\n  return node.nodeName === 'TD';\n}\n/** Checks whether a value is the start of a range. */\n\n\nfunction isStart(value, start, end) {\n  return end !== null && start !== end && value < end && value === start;\n}\n/** Checks whether a value is the end of a range. */\n\n\nfunction isEnd(value, start, end) {\n  return start !== null && start !== end && value >= start && value === end;\n}\n/** Checks whether a value is inside of a range. */\n\n\nfunction isInRange(value, start, end, rangeEnabled) {\n  return rangeEnabled && start !== null && end !== null && start !== end && value >= start && value <= end;\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** A class representing a range of dates. */\n\n\nvar DateRange = /*#__PURE__*/_createClass(function DateRange(\n/** The start date of the range. */\nstart,\n/** The end date of the range. */\nend) {\n  _classCallCheck(this, DateRange);\n\n  this.start = start;\n  this.end = end;\n});\n/**\n * A selection model containing a date selection.\n * @docs-private\n */\n\n\nvar MatDateSelectionModel = /*#__PURE__*/function () {\n  function MatDateSelectionModel(\n  /** The current selection. */\n  selection, _adapter) {\n    _classCallCheck(this, MatDateSelectionModel);\n\n    this.selection = selection;\n    this._adapter = _adapter;\n    this._selectionChanged = new Subject();\n    /** Emits when the selection has changed. */\n\n    this.selectionChanged = this._selectionChanged;\n    this.selection = selection;\n  }\n  /**\n   * Updates the current selection in the model.\n   * @param value New selection that should be assigned.\n   * @param source Object that triggered the selection change.\n   */\n\n\n  _createClass(MatDateSelectionModel, [{\n    key: \"updateSelection\",\n    value: function updateSelection(value, source) {\n      var oldValue = this.selection;\n      this.selection = value;\n\n      this._selectionChanged.next({\n        selection: value,\n        source: source,\n        oldValue: oldValue\n      });\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._selectionChanged.complete();\n    }\n  }, {\n    key: \"_isValidDateInstance\",\n    value: function _isValidDateInstance(date) {\n      return this._adapter.isDateInstance(date) && this._adapter.isValid(date);\n    }\n    /**\n     * Clones the selection model.\n     * @deprecated To be turned into an abstract method.\n     * @breaking-change 12.0.0\n     */\n\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        throw Error('Not implemented');\n      }\n\n      return null;\n    }\n  }]);\n\n  return MatDateSelectionModel;\n}();\n\nMatDateSelectionModel.ɵfac = function MatDateSelectionModel_Factory(t) {\n  return new (t || MatDateSelectionModel)(ɵngcc0.ɵɵinject(undefined), ɵngcc0.ɵɵinject(ɵngcc2.DateAdapter));\n};\n\nMatDateSelectionModel.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: MatDateSelectionModel,\n  factory: MatDateSelectionModel.ɵfac\n});\n\nMatDateSelectionModel.ctorParameters = function () {\n  return [{\n    type: undefined\n  }, {\n    type: DateAdapter\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDateSelectionModel, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined\n    }, {\n      type: ɵngcc2.DateAdapter\n    }];\n  }, null);\n})();\n/**\n * A selection model that contains a single date.\n * @docs-private\n */\n\n\nvar MatSingleDateSelectionModel = /*#__PURE__*/function (_MatDateSelectionMode) {\n  _inherits(MatSingleDateSelectionModel, _MatDateSelectionMode);\n\n  var _super = _createSuper(MatSingleDateSelectionModel);\n\n  function MatSingleDateSelectionModel(adapter) {\n    _classCallCheck(this, MatSingleDateSelectionModel);\n\n    return _super.call(this, null, adapter);\n  }\n  /**\n   * Adds a date to the current selection. In the case of a single date selection, the added date\n   * simply overwrites the previous selection\n   */\n\n\n  _createClass(MatSingleDateSelectionModel, [{\n    key: \"add\",\n    value: function add(date) {\n      _get(_getPrototypeOf(MatSingleDateSelectionModel.prototype), \"updateSelection\", this).call(this, date, this);\n    }\n    /** Checks whether the current selection is valid. */\n\n  }, {\n    key: \"isValid\",\n    value: function isValid() {\n      return this.selection != null && this._isValidDateInstance(this.selection);\n    }\n    /**\n     * Checks whether the current selection is complete. In the case of a single date selection, this\n     * is true if the current selection is not null.\n     */\n\n  }, {\n    key: \"isComplete\",\n    value: function isComplete() {\n      return this.selection != null;\n    }\n    /** Clones the selection model. */\n\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var clone = new MatSingleDateSelectionModel(this._adapter);\n      clone.updateSelection(this.selection, this);\n      return clone;\n    }\n  }]);\n\n  return MatSingleDateSelectionModel;\n}(MatDateSelectionModel);\n\nMatSingleDateSelectionModel.ɵfac = function MatSingleDateSelectionModel_Factory(t) {\n  return new (t || MatSingleDateSelectionModel)(ɵngcc0.ɵɵinject(ɵngcc2.DateAdapter));\n};\n\nMatSingleDateSelectionModel.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: MatSingleDateSelectionModel,\n  factory: MatSingleDateSelectionModel.ɵfac\n});\n\nMatSingleDateSelectionModel.ctorParameters = function () {\n  return [{\n    type: DateAdapter\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSingleDateSelectionModel, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: ɵngcc2.DateAdapter\n    }];\n  }, null);\n})();\n/**\n * A selection model that contains a date range.\n * @docs-private\n */\n\n\nvar MatRangeDateSelectionModel = /*#__PURE__*/function (_MatDateSelectionMode2) {\n  _inherits(MatRangeDateSelectionModel, _MatDateSelectionMode2);\n\n  var _super2 = _createSuper(MatRangeDateSelectionModel);\n\n  function MatRangeDateSelectionModel(adapter) {\n    _classCallCheck(this, MatRangeDateSelectionModel);\n\n    return _super2.call(this, new DateRange(null, null), adapter);\n  }\n  /**\n   * Adds a date to the current selection. In the case of a date range selection, the added date\n   * fills in the next `null` value in the range. If both the start and the end already have a date,\n   * the selection is reset so that the given date is the new `start` and the `end` is null.\n   */\n\n\n  _createClass(MatRangeDateSelectionModel, [{\n    key: \"add\",\n    value: function add(date) {\n      var _this$selection = this.selection,\n          start = _this$selection.start,\n          end = _this$selection.end;\n\n      if (start == null) {\n        start = date;\n      } else if (end == null) {\n        end = date;\n      } else {\n        start = date;\n        end = null;\n      }\n\n      _get(_getPrototypeOf(MatRangeDateSelectionModel.prototype), \"updateSelection\", this).call(this, new DateRange(start, end), this);\n    }\n    /** Checks whether the current selection is valid. */\n\n  }, {\n    key: \"isValid\",\n    value: function isValid() {\n      var _this$selection2 = this.selection,\n          start = _this$selection2.start,\n          end = _this$selection2.end; // Empty ranges are valid.\n\n      if (start == null && end == null) {\n        return true;\n      } // Complete ranges are only valid if both dates are valid and the start is before the end.\n\n\n      if (start != null && end != null) {\n        return this._isValidDateInstance(start) && this._isValidDateInstance(end) && this._adapter.compareDate(start, end) <= 0;\n      } // Partial ranges are valid if the start/end is valid.\n\n\n      return (start == null || this._isValidDateInstance(start)) && (end == null || this._isValidDateInstance(end));\n    }\n    /**\n     * Checks whether the current selection is complete. In the case of a date range selection, this\n     * is true if the current selection has a non-null `start` and `end`.\n     */\n\n  }, {\n    key: \"isComplete\",\n    value: function isComplete() {\n      return this.selection.start != null && this.selection.end != null;\n    }\n    /** Clones the selection model. */\n\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var clone = new MatRangeDateSelectionModel(this._adapter);\n      clone.updateSelection(this.selection, this);\n      return clone;\n    }\n  }]);\n\n  return MatRangeDateSelectionModel;\n}(MatDateSelectionModel);\n\nMatRangeDateSelectionModel.ɵfac = function MatRangeDateSelectionModel_Factory(t) {\n  return new (t || MatRangeDateSelectionModel)(ɵngcc0.ɵɵinject(ɵngcc2.DateAdapter));\n};\n\nMatRangeDateSelectionModel.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: MatRangeDateSelectionModel,\n  factory: MatRangeDateSelectionModel.ɵfac\n});\n\nMatRangeDateSelectionModel.ctorParameters = function () {\n  return [{\n    type: DateAdapter\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatRangeDateSelectionModel, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: ɵngcc2.DateAdapter\n    }];\n  }, null);\n})();\n/** @docs-private */\n\n\nfunction MAT_SINGLE_DATE_SELECTION_MODEL_FACTORY(parent, adapter) {\n  return parent || new MatSingleDateSelectionModel(adapter);\n}\n/**\n * Used to provide a single selection model to a component.\n * @docs-private\n */\n\n\nvar MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER = {\n  provide: MatDateSelectionModel,\n  deps: [[new Optional(), new SkipSelf(), MatDateSelectionModel], DateAdapter],\n  useFactory: MAT_SINGLE_DATE_SELECTION_MODEL_FACTORY\n};\n/** @docs-private */\n\nfunction MAT_RANGE_DATE_SELECTION_MODEL_FACTORY(parent, adapter) {\n  return parent || new MatRangeDateSelectionModel(adapter);\n}\n/**\n * Used to provide a range selection model to a component.\n * @docs-private\n */\n\n\nvar MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER = {\n  provide: MatDateSelectionModel,\n  deps: [[new Optional(), new SkipSelf(), MatDateSelectionModel], DateAdapter],\n  useFactory: MAT_RANGE_DATE_SELECTION_MODEL_FACTORY\n};\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Injection token used to customize the date range selection behavior. */\n\nvar MAT_DATE_RANGE_SELECTION_STRATEGY = new InjectionToken('MAT_DATE_RANGE_SELECTION_STRATEGY');\n/** Provides the default date range selection behavior. */\n\nvar DefaultMatCalendarRangeStrategy = /*#__PURE__*/function () {\n  function DefaultMatCalendarRangeStrategy(_dateAdapter) {\n    _classCallCheck(this, DefaultMatCalendarRangeStrategy);\n\n    this._dateAdapter = _dateAdapter;\n  }\n\n  _createClass(DefaultMatCalendarRangeStrategy, [{\n    key: \"selectionFinished\",\n    value: function selectionFinished(date, currentRange) {\n      var start = currentRange.start,\n          end = currentRange.end;\n\n      if (start == null) {\n        start = date;\n      } else if (end == null && date && this._dateAdapter.compareDate(date, start) >= 0) {\n        end = date;\n      } else {\n        start = date;\n        end = null;\n      }\n\n      return new DateRange(start, end);\n    }\n  }, {\n    key: \"createPreview\",\n    value: function createPreview(activeDate, currentRange) {\n      var start = null;\n      var end = null;\n\n      if (currentRange.start && !currentRange.end && activeDate) {\n        start = currentRange.start;\n        end = activeDate;\n      }\n\n      return new DateRange(start, end);\n    }\n  }]);\n\n  return DefaultMatCalendarRangeStrategy;\n}();\n\nDefaultMatCalendarRangeStrategy.ɵfac = function DefaultMatCalendarRangeStrategy_Factory(t) {\n  return new (t || DefaultMatCalendarRangeStrategy)(ɵngcc0.ɵɵinject(ɵngcc2.DateAdapter));\n};\n\nDefaultMatCalendarRangeStrategy.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: DefaultMatCalendarRangeStrategy,\n  factory: DefaultMatCalendarRangeStrategy.ɵfac\n});\n\nDefaultMatCalendarRangeStrategy.ctorParameters = function () {\n  return [{\n    type: DateAdapter\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DefaultMatCalendarRangeStrategy, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: ɵngcc2.DateAdapter\n    }];\n  }, null);\n})();\n/** @docs-private */\n\n\nfunction MAT_CALENDAR_RANGE_STRATEGY_PROVIDER_FACTORY(parent, adapter) {\n  return parent || new DefaultMatCalendarRangeStrategy(adapter);\n}\n/** @docs-private */\n\n\nvar MAT_CALENDAR_RANGE_STRATEGY_PROVIDER = {\n  provide: MAT_DATE_RANGE_SELECTION_STRATEGY,\n  deps: [[new Optional(), new SkipSelf(), MAT_DATE_RANGE_SELECTION_STRATEGY], DateAdapter],\n  useFactory: MAT_CALENDAR_RANGE_STRATEGY_PROVIDER_FACTORY\n};\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar DAYS_PER_WEEK = 7;\n/**\n * An internal component used to display a single month in the datepicker.\n * @docs-private\n */\n\nvar MatMonthView = /*#__PURE__*/function () {\n  function MatMonthView(_changeDetectorRef, _dateFormats, _dateAdapter, _dir, _rangeStrategy) {\n    _classCallCheck(this, MatMonthView);\n\n    this._changeDetectorRef = _changeDetectorRef;\n    this._dateFormats = _dateFormats;\n    this._dateAdapter = _dateAdapter;\n    this._dir = _dir;\n    this._rangeStrategy = _rangeStrategy;\n    this._rerenderSubscription = Subscription.EMPTY;\n    /** Emits when a new date is selected. */\n\n    this.selectedChange = new EventEmitter();\n    /** Emits when any date is selected. */\n\n    this._userSelection = new EventEmitter();\n    /** Emits when any date is activated. */\n\n    this.activeDateChange = new EventEmitter();\n\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._dateAdapter) {\n        throw createMissingDateImplError('DateAdapter');\n      }\n\n      if (!this._dateFormats) {\n        throw createMissingDateImplError('MAT_DATE_FORMATS');\n      }\n    }\n\n    this._activeDate = this._dateAdapter.today();\n  }\n  /**\n   * The date to display in this month view (everything other than the month and year is ignored).\n   */\n\n\n  _createClass(MatMonthView, [{\n    key: \"activeDate\",\n    get: function get() {\n      return this._activeDate;\n    },\n    set: function set(value) {\n      var oldActiveDate = this._activeDate;\n\n      var validDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n\n      this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n\n      if (!this._hasSameMonthAndYear(oldActiveDate, this._activeDate)) {\n        this._init();\n      }\n    }\n    /** The currently selected date. */\n\n  }, {\n    key: \"selected\",\n    get: function get() {\n      return this._selected;\n    },\n    set: function set(value) {\n      if (value instanceof DateRange) {\n        this._selected = value;\n      } else {\n        this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n      }\n\n      this._setRanges(this._selected);\n    }\n    /** The minimum selectable date. */\n\n  }, {\n    key: \"minDate\",\n    get: function get() {\n      return this._minDate;\n    },\n    set: function set(value) {\n      this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** The maximum selectable date. */\n\n  }, {\n    key: \"maxDate\",\n    get: function get() {\n      return this._maxDate;\n    },\n    set: function set(value) {\n      this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n  }, {\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      var _this3 = this;\n\n      this._rerenderSubscription = this._dateAdapter.localeChanges.pipe(startWith(null)).subscribe(function () {\n        return _this3._init();\n      });\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var comparisonChange = changes['comparisonStart'] || changes['comparisonEnd'];\n\n      if (comparisonChange && !comparisonChange.firstChange) {\n        this._setRanges(this.selected);\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._rerenderSubscription.unsubscribe();\n    }\n    /** Handles when a new date is selected. */\n\n  }, {\n    key: \"_dateSelected\",\n    value: function _dateSelected(event) {\n      var date = event.value;\n\n      var selectedYear = this._dateAdapter.getYear(this.activeDate);\n\n      var selectedMonth = this._dateAdapter.getMonth(this.activeDate);\n\n      var selectedDate = this._dateAdapter.createDate(selectedYear, selectedMonth, date);\n\n      var rangeStartDate;\n      var rangeEndDate;\n\n      if (this._selected instanceof DateRange) {\n        rangeStartDate = this._getDateInCurrentMonth(this._selected.start);\n        rangeEndDate = this._getDateInCurrentMonth(this._selected.end);\n      } else {\n        rangeStartDate = rangeEndDate = this._getDateInCurrentMonth(this._selected);\n      }\n\n      if (rangeStartDate !== date || rangeEndDate !== date) {\n        this.selectedChange.emit(selectedDate);\n      }\n\n      this._userSelection.emit({\n        value: selectedDate,\n        event: event.event\n      });\n\n      this._previewStart = this._previewEnd = null;\n\n      this._changeDetectorRef.markForCheck();\n    }\n    /** Handles keydown events on the calendar body when calendar is in month view. */\n\n  }, {\n    key: \"_handleCalendarBodyKeydown\",\n    value: function _handleCalendarBodyKeydown(event) {\n      // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n      // disabled ones from being selected. This may not be ideal, we should look into whether\n      // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n      var oldActiveDate = this._activeDate;\n\n      var isRtl = this._isRtl();\n\n      switch (event.keyCode) {\n        case LEFT_ARROW:\n          this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? 1 : -1);\n          break;\n\n        case RIGHT_ARROW:\n          this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? -1 : 1);\n          break;\n\n        case UP_ARROW:\n          this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, -7);\n          break;\n\n        case DOWN_ARROW:\n          this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 7);\n          break;\n\n        case HOME:\n          this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 1 - this._dateAdapter.getDate(this._activeDate));\n          break;\n\n        case END:\n          this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, this._dateAdapter.getNumDaysInMonth(this._activeDate) - this._dateAdapter.getDate(this._activeDate));\n          break;\n\n        case PAGE_UP:\n          this.activeDate = event.altKey ? this._dateAdapter.addCalendarYears(this._activeDate, -1) : this._dateAdapter.addCalendarMonths(this._activeDate, -1);\n          break;\n\n        case PAGE_DOWN:\n          this.activeDate = event.altKey ? this._dateAdapter.addCalendarYears(this._activeDate, 1) : this._dateAdapter.addCalendarMonths(this._activeDate, 1);\n          break;\n\n        case ENTER:\n        case SPACE:\n          if (!this.dateFilter || this.dateFilter(this._activeDate)) {\n            this._dateSelected({\n              value: this._dateAdapter.getDate(this._activeDate),\n              event: event\n            }); // Prevent unexpected default actions such as form submission.\n\n\n            event.preventDefault();\n          }\n\n          return;\n\n        case ESCAPE:\n          // Abort the current range selection if the user presses escape mid-selection.\n          if (this._previewEnd != null && !hasModifierKey(event)) {\n            this._previewStart = this._previewEnd = null;\n            this.selectedChange.emit(null);\n\n            this._userSelection.emit({\n              value: null,\n              event: event\n            });\n\n            event.preventDefault();\n            event.stopPropagation(); // Prevents the overlay from closing.\n          }\n\n          return;\n\n        default:\n          // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n          return;\n      }\n\n      if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n        this.activeDateChange.emit(this.activeDate);\n      }\n\n      this._focusActiveCell(); // Prevent unexpected default actions such as form submission.\n\n\n      event.preventDefault();\n    }\n    /** Initializes this month view. */\n\n  }, {\n    key: \"_init\",\n    value: function _init() {\n      this._setRanges(this.selected);\n\n      this._todayDate = this._getCellCompareValue(this._dateAdapter.today());\n      this._monthLabel = this._dateFormats.display.monthLabel ? this._dateAdapter.format(this.activeDate, this._dateFormats.display.monthLabel) : this._dateAdapter.getMonthNames('short')[this._dateAdapter.getMonth(this.activeDate)].toLocaleUpperCase();\n\n      var firstOfMonth = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), 1);\n\n      this._firstWeekOffset = (DAYS_PER_WEEK + this._dateAdapter.getDayOfWeek(firstOfMonth) - this._dateAdapter.getFirstDayOfWeek()) % DAYS_PER_WEEK;\n\n      this._initWeekdays();\n\n      this._createWeekCells();\n\n      this._changeDetectorRef.markForCheck();\n    }\n    /** Focuses the active cell after the microtask queue is empty. */\n\n  }, {\n    key: \"_focusActiveCell\",\n    value: function _focusActiveCell(movePreview) {\n      this._matCalendarBody._focusActiveCell(movePreview);\n    }\n    /** Called when the user has activated a new cell and the preview needs to be updated. */\n\n  }, {\n    key: \"_previewChanged\",\n    value: function _previewChanged(_ref) {\n      var event = _ref.event,\n          cell = _ref.value;\n\n      if (this._rangeStrategy) {\n        // We can assume that this will be a range, because preview\n        // events aren't fired for single date selections.\n        var _value = cell ? cell.rawValue : null;\n\n        var previewRange = this._rangeStrategy.createPreview(_value, this.selected, event);\n\n        this._previewStart = this._getCellCompareValue(previewRange.start);\n        this._previewEnd = this._getCellCompareValue(previewRange.end); // Note that here we need to use `detectChanges`, rather than `markForCheck`, because\n        // the way `_focusActiveCell` is set up at the moment makes it fire at the wrong time\n        // when navigating one month back using the keyboard which will cause this handler\n        // to throw a \"changed after checked\" error when updating the preview state.\n\n        this._changeDetectorRef.detectChanges();\n      }\n    }\n    /** Initializes the weekdays. */\n\n  }, {\n    key: \"_initWeekdays\",\n    value: function _initWeekdays() {\n      var firstDayOfWeek = this._dateAdapter.getFirstDayOfWeek();\n\n      var narrowWeekdays = this._dateAdapter.getDayOfWeekNames('narrow');\n\n      var longWeekdays = this._dateAdapter.getDayOfWeekNames('long'); // Rotate the labels for days of the week based on the configured first day of the week.\n\n\n      var weekdays = longWeekdays.map(function (long, i) {\n        return {\n          long: long,\n          narrow: narrowWeekdays[i]\n        };\n      });\n      this._weekdays = weekdays.slice(firstDayOfWeek).concat(weekdays.slice(0, firstDayOfWeek));\n    }\n    /** Creates MatCalendarCells for the dates in this month. */\n\n  }, {\n    key: \"_createWeekCells\",\n    value: function _createWeekCells() {\n      var daysInMonth = this._dateAdapter.getNumDaysInMonth(this.activeDate);\n\n      var dateNames = this._dateAdapter.getDateNames();\n\n      this._weeks = [[]];\n\n      for (var i = 0, cell = this._firstWeekOffset; i < daysInMonth; i++, cell++) {\n        if (cell == DAYS_PER_WEEK) {\n          this._weeks.push([]);\n\n          cell = 0;\n        }\n\n        var date = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), i + 1);\n\n        var enabled = this._shouldEnableDate(date);\n\n        var ariaLabel = this._dateAdapter.format(date, this._dateFormats.display.dateA11yLabel);\n\n        var cellClasses = this.dateClass ? this.dateClass(date, 'month') : undefined;\n\n        this._weeks[this._weeks.length - 1].push(new MatCalendarCell(i + 1, dateNames[i], ariaLabel, enabled, cellClasses, this._getCellCompareValue(date), date));\n      }\n    }\n    /** Date filter for the month */\n\n  }, {\n    key: \"_shouldEnableDate\",\n    value: function _shouldEnableDate(date) {\n      return !!date && (!this.minDate || this._dateAdapter.compareDate(date, this.minDate) >= 0) && (!this.maxDate || this._dateAdapter.compareDate(date, this.maxDate) <= 0) && (!this.dateFilter || this.dateFilter(date));\n    }\n    /**\n     * Gets the date in this month that the given Date falls on.\n     * Returns null if the given Date is in another month.\n     */\n\n  }, {\n    key: \"_getDateInCurrentMonth\",\n    value: function _getDateInCurrentMonth(date) {\n      return date && this._hasSameMonthAndYear(date, this.activeDate) ? this._dateAdapter.getDate(date) : null;\n    }\n    /** Checks whether the 2 dates are non-null and fall within the same month of the same year. */\n\n  }, {\n    key: \"_hasSameMonthAndYear\",\n    value: function _hasSameMonthAndYear(d1, d2) {\n      return !!(d1 && d2 && this._dateAdapter.getMonth(d1) == this._dateAdapter.getMonth(d2) && this._dateAdapter.getYear(d1) == this._dateAdapter.getYear(d2));\n    }\n    /** Gets the value that will be used to one cell to another. */\n\n  }, {\n    key: \"_getCellCompareValue\",\n    value: function _getCellCompareValue(date) {\n      if (date) {\n        // We use the time since the Unix epoch to compare dates in this view, rather than the\n        // cell values, because we need to support ranges that span across multiple months/years.\n        var year = this._dateAdapter.getYear(date);\n\n        var month = this._dateAdapter.getMonth(date);\n\n        var day = this._dateAdapter.getDate(date);\n\n        return new Date(year, month, day).getTime();\n      }\n\n      return null;\n    }\n    /** Determines whether the user has the RTL layout direction. */\n\n  }, {\n    key: \"_isRtl\",\n    value: function _isRtl() {\n      return this._dir && this._dir.value === 'rtl';\n    }\n    /** Sets the current range based on a model value. */\n\n  }, {\n    key: \"_setRanges\",\n    value: function _setRanges(selectedValue) {\n      if (selectedValue instanceof DateRange) {\n        this._rangeStart = this._getCellCompareValue(selectedValue.start);\n        this._rangeEnd = this._getCellCompareValue(selectedValue.end);\n        this._isRange = true;\n      } else {\n        this._rangeStart = this._rangeEnd = this._getCellCompareValue(selectedValue);\n        this._isRange = false;\n      }\n\n      this._comparisonRangeStart = this._getCellCompareValue(this.comparisonStart);\n      this._comparisonRangeEnd = this._getCellCompareValue(this.comparisonEnd);\n    }\n  }]);\n\n  return MatMonthView;\n}();\n\nMatMonthView.ɵfac = function MatMonthView_Factory(t) {\n  return new (t || MatMonthView)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_RANGE_SELECTION_STRATEGY, 8));\n};\n\nMatMonthView.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: MatMonthView,\n  selectors: [[\"mat-month-view\"]],\n  viewQuery: function MatMonthView_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(MatCalendarBody, 1);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._matCalendarBody = _t.first);\n    }\n  },\n  inputs: {\n    activeDate: \"activeDate\",\n    selected: \"selected\",\n    minDate: \"minDate\",\n    maxDate: \"maxDate\",\n    dateFilter: \"dateFilter\",\n    dateClass: \"dateClass\",\n    comparisonStart: \"comparisonStart\",\n    comparisonEnd: \"comparisonEnd\"\n  },\n  outputs: {\n    selectedChange: \"selectedChange\",\n    _userSelection: \"_userSelection\",\n    activeDateChange: \"activeDateChange\"\n  },\n  exportAs: [\"matMonthView\"],\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 7,\n  vars: 13,\n  consts: [[\"role\", \"presentation\", 1, \"mat-calendar-table\"], [1, \"mat-calendar-table-header\"], [\"scope\", \"col\", 4, \"ngFor\", \"ngForOf\"], [\"colspan\", \"7\", \"aria-hidden\", \"true\", 1, \"mat-calendar-table-header-divider\"], [\"mat-calendar-body\", \"\", 3, \"label\", \"rows\", \"todayValue\", \"startValue\", \"endValue\", \"comparisonStart\", \"comparisonEnd\", \"previewStart\", \"previewEnd\", \"isRange\", \"labelMinRequiredCells\", \"activeCell\", \"selectedValueChange\", \"previewChange\", \"keydown\"], [\"scope\", \"col\"]],\n  template: function MatMonthView_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"table\", 0);\n      ɵngcc0.ɵɵelementStart(1, \"thead\", 1);\n      ɵngcc0.ɵɵelementStart(2, \"tr\");\n      ɵngcc0.ɵɵtemplate(3, MatMonthView_th_3_Template, 2, 2, \"th\", 2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(4, \"tr\");\n      ɵngcc0.ɵɵelement(5, \"th\", 3);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(6, \"tbody\", 4);\n      ɵngcc0.ɵɵlistener(\"selectedValueChange\", function MatMonthView_Template_tbody_selectedValueChange_6_listener($event) {\n        return ctx._dateSelected($event);\n      })(\"previewChange\", function MatMonthView_Template_tbody_previewChange_6_listener($event) {\n        return ctx._previewChanged($event);\n      })(\"keydown\", function MatMonthView_Template_tbody_keydown_6_listener($event) {\n        return ctx._handleCalendarBodyKeydown($event);\n      });\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._weekdays);\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵproperty(\"label\", ctx._monthLabel)(\"rows\", ctx._weeks)(\"todayValue\", ctx._todayDate)(\"startValue\", ctx._rangeStart)(\"endValue\", ctx._rangeEnd)(\"comparisonStart\", ctx._comparisonRangeStart)(\"comparisonEnd\", ctx._comparisonRangeEnd)(\"previewStart\", ctx._previewStart)(\"previewEnd\", ctx._previewEnd)(\"isRange\", ctx._isRange)(\"labelMinRequiredCells\", 3)(\"activeCell\", ctx._dateAdapter.getDate(ctx.activeDate) - 1);\n    }\n  },\n  directives: [ɵngcc1.NgForOf, MatCalendarBody],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nMatMonthView.ctorParameters = function () {\n  return [{\n    type: ChangeDetectorRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_DATE_FORMATS]\n    }]\n  }, {\n    type: DateAdapter,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: Directionality,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [MAT_DATE_RANGE_SELECTION_STRATEGY]\n    }, {\n      type: Optional\n    }]\n  }];\n};\n\nMatMonthView.propDecorators = {\n  activeDate: [{\n    type: Input\n  }],\n  selected: [{\n    type: Input\n  }],\n  minDate: [{\n    type: Input\n  }],\n  maxDate: [{\n    type: Input\n  }],\n  dateFilter: [{\n    type: Input\n  }],\n  dateClass: [{\n    type: Input\n  }],\n  comparisonStart: [{\n    type: Input\n  }],\n  comparisonEnd: [{\n    type: Input\n  }],\n  selectedChange: [{\n    type: Output\n  }],\n  _userSelection: [{\n    type: Output\n  }],\n  activeDateChange: [{\n    type: Output\n  }],\n  _matCalendarBody: [{\n    type: ViewChild,\n    args: [MatCalendarBody]\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMonthView, [{\n    type: Component,\n    args: [{\n      selector: 'mat-month-view',\n      template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"presentation\\\">\\n  <thead class=\\\"mat-calendar-table-header\\\">\\n    <tr>\\n      <th scope=\\\"col\\\" *ngFor=\\\"let day of _weekdays\\\" [attr.aria-label]=\\\"day.long\\\">{{day.narrow}}</th>\\n    </tr>\\n    <tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"7\\\" aria-hidden=\\\"true\\\"></th></tr>\\n  </thead>\\n  <tbody mat-calendar-body\\n         [label]=\\\"_monthLabel\\\"\\n         [rows]=\\\"_weeks\\\"\\n         [todayValue]=\\\"_todayDate!\\\"\\n         [startValue]=\\\"_rangeStart!\\\"\\n         [endValue]=\\\"_rangeEnd!\\\"\\n         [comparisonStart]=\\\"_comparisonRangeStart\\\"\\n         [comparisonEnd]=\\\"_comparisonRangeEnd\\\"\\n         [previewStart]=\\\"_previewStart\\\"\\n         [previewEnd]=\\\"_previewEnd\\\"\\n         [isRange]=\\\"_isRange\\\"\\n         [labelMinRequiredCells]=\\\"3\\\"\\n         [activeCell]=\\\"_dateAdapter.getDate(activeDate) - 1\\\"\\n         (selectedValueChange)=\\\"_dateSelected($event)\\\"\\n         (previewChange)=\\\"_previewChanged($event)\\\"\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\n  </tbody>\\n</table>\\n\",\n      exportAs: 'matMonthView',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_DATE_FORMATS]\n      }]\n    }, {\n      type: ɵngcc2.DateAdapter,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: ɵngcc3.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_DATE_RANGE_SELECTION_STRATEGY]\n      }, {\n        type: Optional\n      }]\n    }];\n  }, {\n    selectedChange: [{\n      type: Output\n    }],\n    _userSelection: [{\n      type: Output\n    }],\n    activeDateChange: [{\n      type: Output\n    }],\n    activeDate: [{\n      type: Input\n    }],\n    selected: [{\n      type: Input\n    }],\n    minDate: [{\n      type: Input\n    }],\n    maxDate: [{\n      type: Input\n    }],\n    dateFilter: [{\n      type: Input\n    }],\n    dateClass: [{\n      type: Input\n    }],\n    comparisonStart: [{\n      type: Input\n    }],\n    comparisonEnd: [{\n      type: Input\n    }],\n    _matCalendarBody: [{\n      type: ViewChild,\n      args: [MatCalendarBody]\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar yearsPerPage = 24;\nvar yearsPerRow = 4;\n/**\n * An internal component used to display a year selector in the datepicker.\n * @docs-private\n */\n\nvar MatMultiYearView = /*#__PURE__*/function () {\n  function MatMultiYearView(_changeDetectorRef, _dateAdapter, _dir) {\n    _classCallCheck(this, MatMultiYearView);\n\n    this._changeDetectorRef = _changeDetectorRef;\n    this._dateAdapter = _dateAdapter;\n    this._dir = _dir;\n    this._rerenderSubscription = Subscription.EMPTY;\n    /** Emits when a new year is selected. */\n\n    this.selectedChange = new EventEmitter();\n    /** Emits the selected year. This doesn't imply a change on the selected date */\n\n    this.yearSelected = new EventEmitter();\n    /** Emits when any date is activated. */\n\n    this.activeDateChange = new EventEmitter();\n\n    if (!this._dateAdapter && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n\n    this._activeDate = this._dateAdapter.today();\n  }\n  /** The date to display in this multi-year view (everything other than the year is ignored). */\n\n\n  _createClass(MatMultiYearView, [{\n    key: \"activeDate\",\n    get: function get() {\n      return this._activeDate;\n    },\n    set: function set(value) {\n      var oldActiveDate = this._activeDate;\n\n      var validDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n\n      this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n\n      if (!isSameMultiYearView(this._dateAdapter, oldActiveDate, this._activeDate, this.minDate, this.maxDate)) {\n        this._init();\n      }\n    }\n    /** The currently selected date. */\n\n  }, {\n    key: \"selected\",\n    get: function get() {\n      return this._selected;\n    },\n    set: function set(value) {\n      if (value instanceof DateRange) {\n        this._selected = value;\n      } else {\n        this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n      }\n\n      this._setSelectedYear(value);\n    }\n    /** The minimum selectable date. */\n\n  }, {\n    key: \"minDate\",\n    get: function get() {\n      return this._minDate;\n    },\n    set: function set(value) {\n      this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** The maximum selectable date. */\n\n  }, {\n    key: \"maxDate\",\n    get: function get() {\n      return this._maxDate;\n    },\n    set: function set(value) {\n      this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n  }, {\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      var _this4 = this;\n\n      this._rerenderSubscription = this._dateAdapter.localeChanges.pipe(startWith(null)).subscribe(function () {\n        return _this4._init();\n      });\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._rerenderSubscription.unsubscribe();\n    }\n    /** Initializes this multi-year view. */\n\n  }, {\n    key: \"_init\",\n    value: function _init() {\n      var _this5 = this;\n\n      this._todayYear = this._dateAdapter.getYear(this._dateAdapter.today()); // We want a range years such that we maximize the number of\n      // enabled dates visible at once. This prevents issues where the minimum year\n      // is the last item of a page OR the maximum year is the first item of a page.\n      // The offset from the active year to the \"slot\" for the starting year is the\n      // *actual* first rendered year in the multi-year view.\n\n      var activeYear = this._dateAdapter.getYear(this._activeDate);\n\n      var minYearOfPage = activeYear - getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate);\n      this._years = [];\n\n      for (var i = 0, row = []; i < yearsPerPage; i++) {\n        row.push(minYearOfPage + i);\n\n        if (row.length == yearsPerRow) {\n          this._years.push(row.map(function (year) {\n            return _this5._createCellForYear(year);\n          }));\n\n          row = [];\n        }\n      }\n\n      this._changeDetectorRef.markForCheck();\n    }\n    /** Handles when a new year is selected. */\n\n  }, {\n    key: \"_yearSelected\",\n    value: function _yearSelected(event) {\n      var year = event.value;\n      this.yearSelected.emit(this._dateAdapter.createDate(year, 0, 1));\n\n      var month = this._dateAdapter.getMonth(this.activeDate);\n\n      var daysInMonth = this._dateAdapter.getNumDaysInMonth(this._dateAdapter.createDate(year, month, 1));\n\n      this.selectedChange.emit(this._dateAdapter.createDate(year, month, Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n    }\n    /** Handles keydown events on the calendar body when calendar is in multi-year view. */\n\n  }, {\n    key: \"_handleCalendarBodyKeydown\",\n    value: function _handleCalendarBodyKeydown(event) {\n      var oldActiveDate = this._activeDate;\n\n      var isRtl = this._isRtl();\n\n      switch (event.keyCode) {\n        case LEFT_ARROW:\n          this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? 1 : -1);\n          break;\n\n        case RIGHT_ARROW:\n          this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? -1 : 1);\n          break;\n\n        case UP_ARROW:\n          this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -yearsPerRow);\n          break;\n\n        case DOWN_ARROW:\n          this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerRow);\n          break;\n\n        case HOME:\n          this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate));\n          break;\n\n        case END:\n          this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerPage - getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate) - 1);\n          break;\n\n        case PAGE_UP:\n          this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -yearsPerPage * 10 : -yearsPerPage);\n          break;\n\n        case PAGE_DOWN:\n          this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? yearsPerPage * 10 : yearsPerPage);\n          break;\n\n        case ENTER:\n        case SPACE:\n          this._yearSelected({\n            value: this._dateAdapter.getYear(this._activeDate),\n            event: event\n          });\n\n          break;\n\n        default:\n          // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n          return;\n      }\n\n      if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n        this.activeDateChange.emit(this.activeDate);\n      }\n\n      this._focusActiveCell(); // Prevent unexpected default actions such as form submission.\n\n\n      event.preventDefault();\n    }\n  }, {\n    key: \"_getActiveCell\",\n    value: function _getActiveCell() {\n      return getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate);\n    }\n    /** Focuses the active cell after the microtask queue is empty. */\n\n  }, {\n    key: \"_focusActiveCell\",\n    value: function _focusActiveCell() {\n      this._matCalendarBody._focusActiveCell();\n    }\n    /** Creates an MatCalendarCell for the given year. */\n\n  }, {\n    key: \"_createCellForYear\",\n    value: function _createCellForYear(year) {\n      var date = this._dateAdapter.createDate(year, 0, 1);\n\n      var yearName = this._dateAdapter.getYearName(date);\n\n      var cellClasses = this.dateClass ? this.dateClass(date, 'multi-year') : undefined;\n      return new MatCalendarCell(year, yearName, yearName, this._shouldEnableYear(year), cellClasses);\n    }\n    /** Whether the given year is enabled. */\n\n  }, {\n    key: \"_shouldEnableYear\",\n    value: function _shouldEnableYear(year) {\n      // disable if the year is greater than maxDate lower than minDate\n      if (year === undefined || year === null || this.maxDate && year > this._dateAdapter.getYear(this.maxDate) || this.minDate && year < this._dateAdapter.getYear(this.minDate)) {\n        return false;\n      } // enable if it reaches here and there's no filter defined\n\n\n      if (!this.dateFilter) {\n        return true;\n      }\n\n      var firstOfYear = this._dateAdapter.createDate(year, 0, 1); // If any date in the year is enabled count the year as enabled.\n\n\n      for (var date = firstOfYear; this._dateAdapter.getYear(date) == year; date = this._dateAdapter.addCalendarDays(date, 1)) {\n        if (this.dateFilter(date)) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n    /** Determines whether the user has the RTL layout direction. */\n\n  }, {\n    key: \"_isRtl\",\n    value: function _isRtl() {\n      return this._dir && this._dir.value === 'rtl';\n    }\n    /** Sets the currently-highlighted year based on a model value. */\n\n  }, {\n    key: \"_setSelectedYear\",\n    value: function _setSelectedYear(value) {\n      this._selectedYear = null;\n\n      if (value instanceof DateRange) {\n        var displayValue = value.start || value.end;\n\n        if (displayValue) {\n          this._selectedYear = this._dateAdapter.getYear(displayValue);\n        }\n      } else if (value) {\n        this._selectedYear = this._dateAdapter.getYear(value);\n      }\n    }\n  }]);\n\n  return MatMultiYearView;\n}();\n\nMatMultiYearView.ɵfac = function MatMultiYearView_Factory(t) {\n  return new (t || MatMultiYearView)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8));\n};\n\nMatMultiYearView.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: MatMultiYearView,\n  selectors: [[\"mat-multi-year-view\"]],\n  viewQuery: function MatMultiYearView_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(MatCalendarBody, 1);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._matCalendarBody = _t.first);\n    }\n  },\n  inputs: {\n    activeDate: \"activeDate\",\n    selected: \"selected\",\n    minDate: \"minDate\",\n    maxDate: \"maxDate\",\n    dateFilter: \"dateFilter\",\n    dateClass: \"dateClass\"\n  },\n  outputs: {\n    selectedChange: \"selectedChange\",\n    yearSelected: \"yearSelected\",\n    activeDateChange: \"activeDateChange\"\n  },\n  exportAs: [\"matMultiYearView\"],\n  decls: 5,\n  vars: 7,\n  consts: [[\"role\", \"presentation\", 1, \"mat-calendar-table\"], [1, \"mat-calendar-table-header\"], [\"colspan\", \"4\", 1, \"mat-calendar-table-header-divider\"], [\"mat-calendar-body\", \"\", 3, \"rows\", \"todayValue\", \"startValue\", \"endValue\", \"numCols\", \"cellAspectRatio\", \"activeCell\", \"selectedValueChange\", \"keydown\"]],\n  template: function MatMultiYearView_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"table\", 0);\n      ɵngcc0.ɵɵelementStart(1, \"thead\", 1);\n      ɵngcc0.ɵɵelementStart(2, \"tr\");\n      ɵngcc0.ɵɵelement(3, \"th\", 2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(4, \"tbody\", 3);\n      ɵngcc0.ɵɵlistener(\"selectedValueChange\", function MatMultiYearView_Template_tbody_selectedValueChange_4_listener($event) {\n        return ctx._yearSelected($event);\n      })(\"keydown\", function MatMultiYearView_Template_tbody_keydown_4_listener($event) {\n        return ctx._handleCalendarBodyKeydown($event);\n      });\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(4);\n      ɵngcc0.ɵɵproperty(\"rows\", ctx._years)(\"todayValue\", ctx._todayYear)(\"startValue\", ctx._selectedYear)(\"endValue\", ctx._selectedYear)(\"numCols\", 4)(\"cellAspectRatio\", 4 / 7)(\"activeCell\", ctx._getActiveCell());\n    }\n  },\n  directives: [MatCalendarBody],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nMatMultiYearView.ctorParameters = function () {\n  return [{\n    type: ChangeDetectorRef\n  }, {\n    type: DateAdapter,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: Directionality,\n    decorators: [{\n      type: Optional\n    }]\n  }];\n};\n\nMatMultiYearView.propDecorators = {\n  activeDate: [{\n    type: Input\n  }],\n  selected: [{\n    type: Input\n  }],\n  minDate: [{\n    type: Input\n  }],\n  maxDate: [{\n    type: Input\n  }],\n  dateFilter: [{\n    type: Input\n  }],\n  dateClass: [{\n    type: Input\n  }],\n  selectedChange: [{\n    type: Output\n  }],\n  yearSelected: [{\n    type: Output\n  }],\n  activeDateChange: [{\n    type: Output\n  }],\n  _matCalendarBody: [{\n    type: ViewChild,\n    args: [MatCalendarBody]\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMultiYearView, [{\n    type: Component,\n    args: [{\n      selector: 'mat-multi-year-view',\n      template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"presentation\\\">\\n  <thead class=\\\"mat-calendar-table-header\\\">\\n    <tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"4\\\"></th></tr>\\n  </thead>\\n  <tbody mat-calendar-body\\n         [rows]=\\\"_years\\\"\\n         [todayValue]=\\\"_todayYear\\\"\\n         [startValue]=\\\"_selectedYear!\\\"\\n         [endValue]=\\\"_selectedYear!\\\"\\n         [numCols]=\\\"4\\\"\\n         [cellAspectRatio]=\\\"4 / 7\\\"\\n         [activeCell]=\\\"_getActiveCell()\\\"\\n         (selectedValueChange)=\\\"_yearSelected($event)\\\"\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\n  </tbody>\\n</table>\\n\",\n      exportAs: 'matMultiYearView',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc2.DateAdapter,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: ɵngcc3.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    selectedChange: [{\n      type: Output\n    }],\n    yearSelected: [{\n      type: Output\n    }],\n    activeDateChange: [{\n      type: Output\n    }],\n    activeDate: [{\n      type: Input\n    }],\n    selected: [{\n      type: Input\n    }],\n    minDate: [{\n      type: Input\n    }],\n    maxDate: [{\n      type: Input\n    }],\n    dateFilter: [{\n      type: Input\n    }],\n    dateClass: [{\n      type: Input\n    }],\n    _matCalendarBody: [{\n      type: ViewChild,\n      args: [MatCalendarBody]\n    }]\n  });\n})();\n\nfunction isSameMultiYearView(dateAdapter, date1, date2, minDate, maxDate) {\n  var year1 = dateAdapter.getYear(date1);\n  var year2 = dateAdapter.getYear(date2);\n  var startingYear = getStartingYear(dateAdapter, minDate, maxDate);\n  return Math.floor((year1 - startingYear) / yearsPerPage) === Math.floor((year2 - startingYear) / yearsPerPage);\n}\n/**\n * When the multi-year view is first opened, the active year will be in view.\n * So we compute how many years are between the active year and the *slot* where our\n * \"startingYear\" will render when paged into view.\n */\n\n\nfunction getActiveOffset(dateAdapter, activeDate, minDate, maxDate) {\n  var activeYear = dateAdapter.getYear(activeDate);\n  return euclideanModulo(activeYear - getStartingYear(dateAdapter, minDate, maxDate), yearsPerPage);\n}\n/**\n * We pick a \"starting\" year such that either the maximum year would be at the end\n * or the minimum year would be at the beginning of a page.\n */\n\n\nfunction getStartingYear(dateAdapter, minDate, maxDate) {\n  var startingYear = 0;\n\n  if (maxDate) {\n    var maxYear = dateAdapter.getYear(maxDate);\n    startingYear = maxYear - yearsPerPage + 1;\n  } else if (minDate) {\n    startingYear = dateAdapter.getYear(minDate);\n  }\n\n  return startingYear;\n}\n/** Gets remainder that is non-negative, even if first number is negative */\n\n\nfunction euclideanModulo(a, b) {\n  return (a % b + b) % b;\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * An internal component used to display a single year in the datepicker.\n * @docs-private\n */\n\n\nvar MatYearView = /*#__PURE__*/function () {\n  function MatYearView(_changeDetectorRef, _dateFormats, _dateAdapter, _dir) {\n    _classCallCheck(this, MatYearView);\n\n    this._changeDetectorRef = _changeDetectorRef;\n    this._dateFormats = _dateFormats;\n    this._dateAdapter = _dateAdapter;\n    this._dir = _dir;\n    this._rerenderSubscription = Subscription.EMPTY;\n    /** Emits when a new month is selected. */\n\n    this.selectedChange = new EventEmitter();\n    /** Emits the selected month. This doesn't imply a change on the selected date */\n\n    this.monthSelected = new EventEmitter();\n    /** Emits when any date is activated. */\n\n    this.activeDateChange = new EventEmitter();\n\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._dateAdapter) {\n        throw createMissingDateImplError('DateAdapter');\n      }\n\n      if (!this._dateFormats) {\n        throw createMissingDateImplError('MAT_DATE_FORMATS');\n      }\n    }\n\n    this._activeDate = this._dateAdapter.today();\n  }\n  /** The date to display in this year view (everything other than the year is ignored). */\n\n\n  _createClass(MatYearView, [{\n    key: \"activeDate\",\n    get: function get() {\n      return this._activeDate;\n    },\n    set: function set(value) {\n      var oldActiveDate = this._activeDate;\n\n      var validDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n\n      this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n\n      if (this._dateAdapter.getYear(oldActiveDate) !== this._dateAdapter.getYear(this._activeDate)) {\n        this._init();\n      }\n    }\n    /** The currently selected date. */\n\n  }, {\n    key: \"selected\",\n    get: function get() {\n      return this._selected;\n    },\n    set: function set(value) {\n      if (value instanceof DateRange) {\n        this._selected = value;\n      } else {\n        this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n      }\n\n      this._setSelectedMonth(value);\n    }\n    /** The minimum selectable date. */\n\n  }, {\n    key: \"minDate\",\n    get: function get() {\n      return this._minDate;\n    },\n    set: function set(value) {\n      this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** The maximum selectable date. */\n\n  }, {\n    key: \"maxDate\",\n    get: function get() {\n      return this._maxDate;\n    },\n    set: function set(value) {\n      this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n  }, {\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      var _this6 = this;\n\n      this._rerenderSubscription = this._dateAdapter.localeChanges.pipe(startWith(null)).subscribe(function () {\n        return _this6._init();\n      });\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._rerenderSubscription.unsubscribe();\n    }\n    /** Handles when a new month is selected. */\n\n  }, {\n    key: \"_monthSelected\",\n    value: function _monthSelected(event) {\n      var month = event.value;\n\n      var normalizedDate = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1);\n\n      this.monthSelected.emit(normalizedDate);\n\n      var daysInMonth = this._dateAdapter.getNumDaysInMonth(normalizedDate);\n\n      this.selectedChange.emit(this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n    }\n    /** Handles keydown events on the calendar body when calendar is in year view. */\n\n  }, {\n    key: \"_handleCalendarBodyKeydown\",\n    value: function _handleCalendarBodyKeydown(event) {\n      // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n      // disabled ones from being selected. This may not be ideal, we should look into whether\n      // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n      var oldActiveDate = this._activeDate;\n\n      var isRtl = this._isRtl();\n\n      switch (event.keyCode) {\n        case LEFT_ARROW:\n          this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? 1 : -1);\n          break;\n\n        case RIGHT_ARROW:\n          this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? -1 : 1);\n          break;\n\n        case UP_ARROW:\n          this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -4);\n          break;\n\n        case DOWN_ARROW:\n          this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 4);\n          break;\n\n        case HOME:\n          this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -this._dateAdapter.getMonth(this._activeDate));\n          break;\n\n        case END:\n          this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 11 - this._dateAdapter.getMonth(this._activeDate));\n          break;\n\n        case PAGE_UP:\n          this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -10 : -1);\n          break;\n\n        case PAGE_DOWN:\n          this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? 10 : 1);\n          break;\n\n        case ENTER:\n        case SPACE:\n          this._monthSelected({\n            value: this._dateAdapter.getMonth(this._activeDate),\n            event: event\n          });\n\n          break;\n\n        default:\n          // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n          return;\n      }\n\n      if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n        this.activeDateChange.emit(this.activeDate);\n      }\n\n      this._focusActiveCell(); // Prevent unexpected default actions such as form submission.\n\n\n      event.preventDefault();\n    }\n    /** Initializes this year view. */\n\n  }, {\n    key: \"_init\",\n    value: function _init() {\n      var _this7 = this;\n\n      this._setSelectedMonth(this.selected);\n\n      this._todayMonth = this._getMonthInCurrentYear(this._dateAdapter.today());\n      this._yearLabel = this._dateAdapter.getYearName(this.activeDate);\n\n      var monthNames = this._dateAdapter.getMonthNames('short'); // First row of months only contains 5 elements so we can fit the year label on the same row.\n\n\n      this._months = [[0, 1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11]].map(function (row) {\n        return row.map(function (month) {\n          return _this7._createCellForMonth(month, monthNames[month]);\n        });\n      });\n\n      this._changeDetectorRef.markForCheck();\n    }\n    /** Focuses the active cell after the microtask queue is empty. */\n\n  }, {\n    key: \"_focusActiveCell\",\n    value: function _focusActiveCell() {\n      this._matCalendarBody._focusActiveCell();\n    }\n    /**\n     * Gets the month in this year that the given Date falls on.\n     * Returns null if the given Date is in another year.\n     */\n\n  }, {\n    key: \"_getMonthInCurrentYear\",\n    value: function _getMonthInCurrentYear(date) {\n      return date && this._dateAdapter.getYear(date) == this._dateAdapter.getYear(this.activeDate) ? this._dateAdapter.getMonth(date) : null;\n    }\n    /** Creates an MatCalendarCell for the given month. */\n\n  }, {\n    key: \"_createCellForMonth\",\n    value: function _createCellForMonth(month, monthName) {\n      var date = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1);\n\n      var ariaLabel = this._dateAdapter.format(date, this._dateFormats.display.monthYearA11yLabel);\n\n      var cellClasses = this.dateClass ? this.dateClass(date, 'year') : undefined;\n      return new MatCalendarCell(month, monthName.toLocaleUpperCase(), ariaLabel, this._shouldEnableMonth(month), cellClasses);\n    }\n    /** Whether the given month is enabled. */\n\n  }, {\n    key: \"_shouldEnableMonth\",\n    value: function _shouldEnableMonth(month) {\n      var activeYear = this._dateAdapter.getYear(this.activeDate);\n\n      if (month === undefined || month === null || this._isYearAndMonthAfterMaxDate(activeYear, month) || this._isYearAndMonthBeforeMinDate(activeYear, month)) {\n        return false;\n      }\n\n      if (!this.dateFilter) {\n        return true;\n      }\n\n      var firstOfMonth = this._dateAdapter.createDate(activeYear, month, 1); // If any date in the month is enabled count the month as enabled.\n\n\n      for (var date = firstOfMonth; this._dateAdapter.getMonth(date) == month; date = this._dateAdapter.addCalendarDays(date, 1)) {\n        if (this.dateFilter(date)) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n    /**\n     * Tests whether the combination month/year is after this.maxDate, considering\n     * just the month and year of this.maxDate\n     */\n\n  }, {\n    key: \"_isYearAndMonthAfterMaxDate\",\n    value: function _isYearAndMonthAfterMaxDate(year, month) {\n      if (this.maxDate) {\n        var maxYear = this._dateAdapter.getYear(this.maxDate);\n\n        var maxMonth = this._dateAdapter.getMonth(this.maxDate);\n\n        return year > maxYear || year === maxYear && month > maxMonth;\n      }\n\n      return false;\n    }\n    /**\n     * Tests whether the combination month/year is before this.minDate, considering\n     * just the month and year of this.minDate\n     */\n\n  }, {\n    key: \"_isYearAndMonthBeforeMinDate\",\n    value: function _isYearAndMonthBeforeMinDate(year, month) {\n      if (this.minDate) {\n        var minYear = this._dateAdapter.getYear(this.minDate);\n\n        var minMonth = this._dateAdapter.getMonth(this.minDate);\n\n        return year < minYear || year === minYear && month < minMonth;\n      }\n\n      return false;\n    }\n    /** Determines whether the user has the RTL layout direction. */\n\n  }, {\n    key: \"_isRtl\",\n    value: function _isRtl() {\n      return this._dir && this._dir.value === 'rtl';\n    }\n    /** Sets the currently-selected month based on a model value. */\n\n  }, {\n    key: \"_setSelectedMonth\",\n    value: function _setSelectedMonth(value) {\n      if (value instanceof DateRange) {\n        this._selectedMonth = this._getMonthInCurrentYear(value.start) || this._getMonthInCurrentYear(value.end);\n      } else {\n        this._selectedMonth = this._getMonthInCurrentYear(value);\n      }\n    }\n  }]);\n\n  return MatYearView;\n}();\n\nMatYearView.ɵfac = function MatYearView_Factory(t) {\n  return new (t || MatYearView)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8));\n};\n\nMatYearView.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: MatYearView,\n  selectors: [[\"mat-year-view\"]],\n  viewQuery: function MatYearView_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(MatCalendarBody, 1);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._matCalendarBody = _t.first);\n    }\n  },\n  inputs: {\n    activeDate: \"activeDate\",\n    selected: \"selected\",\n    minDate: \"minDate\",\n    maxDate: \"maxDate\",\n    dateFilter: \"dateFilter\",\n    dateClass: \"dateClass\"\n  },\n  outputs: {\n    selectedChange: \"selectedChange\",\n    monthSelected: \"monthSelected\",\n    activeDateChange: \"activeDateChange\"\n  },\n  exportAs: [\"matYearView\"],\n  decls: 5,\n  vars: 9,\n  consts: [[\"role\", \"presentation\", 1, \"mat-calendar-table\"], [1, \"mat-calendar-table-header\"], [\"colspan\", \"4\", 1, \"mat-calendar-table-header-divider\"], [\"mat-calendar-body\", \"\", 3, \"label\", \"rows\", \"todayValue\", \"startValue\", \"endValue\", \"labelMinRequiredCells\", \"numCols\", \"cellAspectRatio\", \"activeCell\", \"selectedValueChange\", \"keydown\"]],\n  template: function MatYearView_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"table\", 0);\n      ɵngcc0.ɵɵelementStart(1, \"thead\", 1);\n      ɵngcc0.ɵɵelementStart(2, \"tr\");\n      ɵngcc0.ɵɵelement(3, \"th\", 2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(4, \"tbody\", 3);\n      ɵngcc0.ɵɵlistener(\"selectedValueChange\", function MatYearView_Template_tbody_selectedValueChange_4_listener($event) {\n        return ctx._monthSelected($event);\n      })(\"keydown\", function MatYearView_Template_tbody_keydown_4_listener($event) {\n        return ctx._handleCalendarBodyKeydown($event);\n      });\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(4);\n      ɵngcc0.ɵɵproperty(\"label\", ctx._yearLabel)(\"rows\", ctx._months)(\"todayValue\", ctx._todayMonth)(\"startValue\", ctx._selectedMonth)(\"endValue\", ctx._selectedMonth)(\"labelMinRequiredCells\", 2)(\"numCols\", 4)(\"cellAspectRatio\", 4 / 7)(\"activeCell\", ctx._dateAdapter.getMonth(ctx.activeDate));\n    }\n  },\n  directives: [MatCalendarBody],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nMatYearView.ctorParameters = function () {\n  return [{\n    type: ChangeDetectorRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_DATE_FORMATS]\n    }]\n  }, {\n    type: DateAdapter,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: Directionality,\n    decorators: [{\n      type: Optional\n    }]\n  }];\n};\n\nMatYearView.propDecorators = {\n  activeDate: [{\n    type: Input\n  }],\n  selected: [{\n    type: Input\n  }],\n  minDate: [{\n    type: Input\n  }],\n  maxDate: [{\n    type: Input\n  }],\n  dateFilter: [{\n    type: Input\n  }],\n  dateClass: [{\n    type: Input\n  }],\n  selectedChange: [{\n    type: Output\n  }],\n  monthSelected: [{\n    type: Output\n  }],\n  activeDateChange: [{\n    type: Output\n  }],\n  _matCalendarBody: [{\n    type: ViewChild,\n    args: [MatCalendarBody]\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatYearView, [{\n    type: Component,\n    args: [{\n      selector: 'mat-year-view',\n      template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"presentation\\\">\\n  <thead class=\\\"mat-calendar-table-header\\\">\\n    <tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"4\\\"></th></tr>\\n  </thead>\\n  <tbody mat-calendar-body\\n         [label]=\\\"_yearLabel\\\"\\n         [rows]=\\\"_months\\\"\\n         [todayValue]=\\\"_todayMonth!\\\"\\n         [startValue]=\\\"_selectedMonth!\\\"\\n         [endValue]=\\\"_selectedMonth!\\\"\\n         [labelMinRequiredCells]=\\\"2\\\"\\n         [numCols]=\\\"4\\\"\\n         [cellAspectRatio]=\\\"4 / 7\\\"\\n         [activeCell]=\\\"_dateAdapter.getMonth(activeDate)\\\"\\n         (selectedValueChange)=\\\"_monthSelected($event)\\\"\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\n  </tbody>\\n</table>\\n\",\n      exportAs: 'matYearView',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_DATE_FORMATS]\n      }]\n    }, {\n      type: ɵngcc2.DateAdapter,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: ɵngcc3.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    selectedChange: [{\n      type: Output\n    }],\n    monthSelected: [{\n      type: Output\n    }],\n    activeDateChange: [{\n      type: Output\n    }],\n    activeDate: [{\n      type: Input\n    }],\n    selected: [{\n      type: Input\n    }],\n    minDate: [{\n      type: Input\n    }],\n    maxDate: [{\n      type: Input\n    }],\n    dateFilter: [{\n      type: Input\n    }],\n    dateClass: [{\n      type: Input\n    }],\n    _matCalendarBody: [{\n      type: ViewChild,\n      args: [MatCalendarBody]\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Counter used to generate unique IDs. */\n\n\nvar uniqueId = 0;\n/** Default header for MatCalendar */\n\nvar MatCalendarHeader = /*#__PURE__*/function () {\n  function MatCalendarHeader(_intl, calendar, _dateAdapter, _dateFormats, changeDetectorRef) {\n    _classCallCheck(this, MatCalendarHeader);\n\n    this._intl = _intl;\n    this.calendar = calendar;\n    this._dateAdapter = _dateAdapter;\n    this._dateFormats = _dateFormats;\n    this._buttonDescriptionId = \"mat-calendar-button-\".concat(uniqueId++);\n    this.calendar.stateChanges.subscribe(function () {\n      return changeDetectorRef.markForCheck();\n    });\n  }\n  /** The label for the current calendar view. */\n\n\n  _createClass(MatCalendarHeader, [{\n    key: \"periodButtonText\",\n    get: function get() {\n      if (this.calendar.currentView == 'month') {\n        return this._dateAdapter.format(this.calendar.activeDate, this._dateFormats.display.monthYearLabel).toLocaleUpperCase();\n      }\n\n      if (this.calendar.currentView == 'year') {\n        return this._dateAdapter.getYearName(this.calendar.activeDate);\n      } // The offset from the active year to the \"slot\" for the starting year is the\n      // *actual* first rendered year in the multi-year view, and the last year is\n      // just yearsPerPage - 1 away.\n\n\n      var activeYear = this._dateAdapter.getYear(this.calendar.activeDate);\n\n      var minYearOfPage = activeYear - getActiveOffset(this._dateAdapter, this.calendar.activeDate, this.calendar.minDate, this.calendar.maxDate);\n      var maxYearOfPage = minYearOfPage + yearsPerPage - 1;\n\n      var minYearName = this._dateAdapter.getYearName(this._dateAdapter.createDate(minYearOfPage, 0, 1));\n\n      var maxYearName = this._dateAdapter.getYearName(this._dateAdapter.createDate(maxYearOfPage, 0, 1));\n\n      return this._intl.formatYearRange(minYearName, maxYearName);\n    }\n  }, {\n    key: \"periodButtonLabel\",\n    get: function get() {\n      return this.calendar.currentView == 'month' ? this._intl.switchToMultiYearViewLabel : this._intl.switchToMonthViewLabel;\n    }\n    /** The label for the previous button. */\n\n  }, {\n    key: \"prevButtonLabel\",\n    get: function get() {\n      return {\n        'month': this._intl.prevMonthLabel,\n        'year': this._intl.prevYearLabel,\n        'multi-year': this._intl.prevMultiYearLabel\n      }[this.calendar.currentView];\n    }\n    /** The label for the next button. */\n\n  }, {\n    key: \"nextButtonLabel\",\n    get: function get() {\n      return {\n        'month': this._intl.nextMonthLabel,\n        'year': this._intl.nextYearLabel,\n        'multi-year': this._intl.nextMultiYearLabel\n      }[this.calendar.currentView];\n    }\n    /** Handles user clicks on the period label. */\n\n  }, {\n    key: \"currentPeriodClicked\",\n    value: function currentPeriodClicked() {\n      this.calendar.currentView = this.calendar.currentView == 'month' ? 'multi-year' : 'month';\n    }\n    /** Handles user clicks on the previous button. */\n\n  }, {\n    key: \"previousClicked\",\n    value: function previousClicked() {\n      this.calendar.activeDate = this.calendar.currentView == 'month' ? this._dateAdapter.addCalendarMonths(this.calendar.activeDate, -1) : this._dateAdapter.addCalendarYears(this.calendar.activeDate, this.calendar.currentView == 'year' ? -1 : -yearsPerPage);\n    }\n    /** Handles user clicks on the next button. */\n\n  }, {\n    key: \"nextClicked\",\n    value: function nextClicked() {\n      this.calendar.activeDate = this.calendar.currentView == 'month' ? this._dateAdapter.addCalendarMonths(this.calendar.activeDate, 1) : this._dateAdapter.addCalendarYears(this.calendar.activeDate, this.calendar.currentView == 'year' ? 1 : yearsPerPage);\n    }\n    /** Whether the previous period button is enabled. */\n\n  }, {\n    key: \"previousEnabled\",\n    value: function previousEnabled() {\n      if (!this.calendar.minDate) {\n        return true;\n      }\n\n      return !this.calendar.minDate || !this._isSameView(this.calendar.activeDate, this.calendar.minDate);\n    }\n    /** Whether the next period button is enabled. */\n\n  }, {\n    key: \"nextEnabled\",\n    value: function nextEnabled() {\n      return !this.calendar.maxDate || !this._isSameView(this.calendar.activeDate, this.calendar.maxDate);\n    }\n    /** Whether the two dates represent the same view in the current view mode (month or year). */\n\n  }, {\n    key: \"_isSameView\",\n    value: function _isSameView(date1, date2) {\n      if (this.calendar.currentView == 'month') {\n        return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2) && this._dateAdapter.getMonth(date1) == this._dateAdapter.getMonth(date2);\n      }\n\n      if (this.calendar.currentView == 'year') {\n        return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2);\n      } // Otherwise we are in 'multi-year' view.\n\n\n      return isSameMultiYearView(this._dateAdapter, date1, date2, this.calendar.minDate, this.calendar.maxDate);\n    }\n  }]);\n\n  return MatCalendarHeader;\n}();\n\nMatCalendarHeader.ɵfac = function MatCalendarHeader_Factory(t) {\n  return new (t || MatCalendarHeader)(ɵngcc0.ɵɵdirectiveInject(MatDatepickerIntl), ɵngcc0.ɵɵdirectiveInject(forwardRef(function () {\n    return MatCalendar;\n  })), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\n\nMatCalendarHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: MatCalendarHeader,\n  selectors: [[\"mat-calendar-header\"]],\n  exportAs: [\"matCalendarHeader\"],\n  ngContentSelectors: _c1,\n  decls: 10,\n  vars: 10,\n  consts: [[1, \"mat-calendar-header\"], [1, \"mat-calendar-controls\"], [\"mat-button\", \"\", \"type\", \"button\", \"cdkAriaLive\", \"polite\", 1, \"mat-calendar-period-button\", 3, \"click\"], [1, \"mat-calendar-arrow\"], [1, \"mat-calendar-spacer\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-calendar-previous-button\", 3, \"disabled\", \"click\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-calendar-next-button\", 3, \"disabled\", \"click\"]],\n  template: function MatCalendarHeader_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n      ɵngcc0.ɵɵelementStart(2, \"button\", 2);\n      ɵngcc0.ɵɵlistener(\"click\", function MatCalendarHeader_Template_button_click_2_listener() {\n        return ctx.currentPeriodClicked();\n      });\n      ɵngcc0.ɵɵelementStart(3, \"span\");\n      ɵngcc0.ɵɵtext(4);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelement(5, \"div\", 3);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelement(6, \"div\", 4);\n      ɵngcc0.ɵɵprojection(7);\n      ɵngcc0.ɵɵelementStart(8, \"button\", 5);\n      ɵngcc0.ɵɵlistener(\"click\", function MatCalendarHeader_Template_button_click_8_listener() {\n        return ctx.previousClicked();\n      });\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(9, \"button\", 6);\n      ɵngcc0.ɵɵlistener(\"click\", function MatCalendarHeader_Template_button_click_9_listener() {\n        return ctx.nextClicked();\n      });\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵattribute(\"aria-label\", ctx.periodButtonLabel)(\"aria-describedby\", ctx._buttonDescriptionId);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵattribute(\"id\", ctx._buttonDescriptionId);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵtextInterpolate(ctx.periodButtonText);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵclassProp(\"mat-calendar-invert\", ctx.calendar.currentView !== \"month\");\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵproperty(\"disabled\", !ctx.previousEnabled());\n      ɵngcc0.ɵɵattribute(\"aria-label\", ctx.prevButtonLabel);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"disabled\", !ctx.nextEnabled());\n      ɵngcc0.ɵɵattribute(\"aria-label\", ctx.nextButtonLabel);\n    }\n  },\n  directives: [ɵngcc4.MatButton, ɵngcc5.CdkAriaLive],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nMatCalendarHeader.ctorParameters = function () {\n  return [{\n    type: MatDatepickerIntl\n  }, {\n    type: MatCalendar,\n    decorators: [{\n      type: Inject,\n      args: [forwardRef(function () {\n        return MatCalendar;\n      })]\n    }]\n  }, {\n    type: DateAdapter,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_DATE_FORMATS]\n    }]\n  }, {\n    type: ChangeDetectorRef\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCalendarHeader, [{\n    type: Component,\n    args: [{\n      selector: 'mat-calendar-header',\n      template: \"<div class=\\\"mat-calendar-header\\\">\\n  <div class=\\\"mat-calendar-controls\\\">\\n    <button mat-button type=\\\"button\\\" class=\\\"mat-calendar-period-button\\\"\\n            (click)=\\\"currentPeriodClicked()\\\" [attr.aria-label]=\\\"periodButtonLabel\\\"\\n            [attr.aria-describedby]=\\\"_buttonDescriptionId\\\"\\n            cdkAriaLive=\\\"polite\\\">\\n      <span [attr.id]=\\\"_buttonDescriptionId\\\">{{periodButtonText}}</span>\\n      <div class=\\\"mat-calendar-arrow\\\"\\n           [class.mat-calendar-invert]=\\\"calendar.currentView !== 'month'\\\"></div>\\n    </button>\\n\\n    <div class=\\\"mat-calendar-spacer\\\"></div>\\n\\n    <ng-content></ng-content>\\n\\n    <button mat-icon-button type=\\\"button\\\" class=\\\"mat-calendar-previous-button\\\"\\n            [disabled]=\\\"!previousEnabled()\\\" (click)=\\\"previousClicked()\\\"\\n            [attr.aria-label]=\\\"prevButtonLabel\\\">\\n    </button>\\n\\n    <button mat-icon-button type=\\\"button\\\" class=\\\"mat-calendar-next-button\\\"\\n            [disabled]=\\\"!nextEnabled()\\\" (click)=\\\"nextClicked()\\\"\\n            [attr.aria-label]=\\\"nextButtonLabel\\\">\\n    </button>\\n  </div>\\n</div>\\n\",\n      exportAs: 'matCalendarHeader',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: MatDatepickerIntl\n    }, {\n      type: MatCalendar,\n      decorators: [{\n        type: Inject,\n        args: [forwardRef(function () {\n          return MatCalendar;\n        })]\n      }]\n    }, {\n      type: ɵngcc2.DateAdapter,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_DATE_FORMATS]\n      }]\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, null);\n})();\n/**\n * A calendar that is used as part of the datepicker.\n * @docs-private\n */\n\n\nvar MatCalendar = /*#__PURE__*/function () {\n  function MatCalendar(_intl, _dateAdapter, _dateFormats, _changeDetectorRef) {\n    var _this8 = this;\n\n    _classCallCheck(this, MatCalendar);\n\n    this._dateAdapter = _dateAdapter;\n    this._dateFormats = _dateFormats;\n    this._changeDetectorRef = _changeDetectorRef;\n    /**\n     * Used for scheduling that focus should be moved to the active cell on the next tick.\n     * We need to schedule it, rather than do it immediately, because we have to wait\n     * for Angular to re-evaluate the view children.\n     */\n\n    this._moveFocusOnNextTick = false;\n    /** Whether the calendar should be started in month or year view. */\n\n    this.startView = 'month';\n    /** Emits when the currently selected date changes. */\n\n    this.selectedChange = new EventEmitter();\n    /**\n     * Emits the year chosen in multiyear view.\n     * This doesn't imply a change on the selected date.\n     */\n\n    this.yearSelected = new EventEmitter();\n    /**\n     * Emits the month chosen in year view.\n     * This doesn't imply a change on the selected date.\n     */\n\n    this.monthSelected = new EventEmitter();\n    /**\n     * Emits when the current view changes.\n     */\n\n    this.viewChanged = new EventEmitter(true);\n    /** Emits when any date is selected. */\n\n    this._userSelection = new EventEmitter();\n    /**\n     * Emits whenever there is a state change that the header may need to respond to.\n     */\n\n    this.stateChanges = new Subject();\n\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._dateAdapter) {\n        throw createMissingDateImplError('DateAdapter');\n      }\n\n      if (!this._dateFormats) {\n        throw createMissingDateImplError('MAT_DATE_FORMATS');\n      }\n    }\n\n    this._intlChanges = _intl.changes.subscribe(function () {\n      _changeDetectorRef.markForCheck();\n\n      _this8.stateChanges.next();\n    });\n  }\n  /** A date representing the period (month or year) to start the calendar in. */\n\n\n  _createClass(MatCalendar, [{\n    key: \"startAt\",\n    get: function get() {\n      return this._startAt;\n    },\n    set: function set(value) {\n      this._startAt = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** The currently selected date. */\n\n  }, {\n    key: \"selected\",\n    get: function get() {\n      return this._selected;\n    },\n    set: function set(value) {\n      if (value instanceof DateRange) {\n        this._selected = value;\n      } else {\n        this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n      }\n    }\n    /** The minimum selectable date. */\n\n  }, {\n    key: \"minDate\",\n    get: function get() {\n      return this._minDate;\n    },\n    set: function set(value) {\n      this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** The maximum selectable date. */\n\n  }, {\n    key: \"maxDate\",\n    get: function get() {\n      return this._maxDate;\n    },\n    set: function set(value) {\n      this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The current active date. This determines which time period is shown and which date is\n     * highlighted when using keyboard navigation.\n     */\n\n  }, {\n    key: \"activeDate\",\n    get: function get() {\n      return this._clampedActiveDate;\n    },\n    set: function set(value) {\n      this._clampedActiveDate = this._dateAdapter.clampDate(value, this.minDate, this.maxDate);\n      this.stateChanges.next();\n\n      this._changeDetectorRef.markForCheck();\n    }\n    /** Whether the calendar is in month view. */\n\n  }, {\n    key: \"currentView\",\n    get: function get() {\n      return this._currentView;\n    },\n    set: function set(value) {\n      var viewChangedResult = this._currentView !== value ? value : null;\n      this._currentView = value;\n      this._moveFocusOnNextTick = true;\n\n      this._changeDetectorRef.markForCheck();\n\n      if (viewChangedResult) {\n        this.viewChanged.emit(viewChangedResult);\n      }\n    }\n  }, {\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      this._calendarHeaderPortal = new ComponentPortal(this.headerComponent || MatCalendarHeader);\n      this.activeDate = this.startAt || this._dateAdapter.today(); // Assign to the private property since we don't want to move focus on init.\n\n      this._currentView = this.startView;\n    }\n  }, {\n    key: \"ngAfterViewChecked\",\n    value: function ngAfterViewChecked() {\n      if (this._moveFocusOnNextTick) {\n        this._moveFocusOnNextTick = false;\n        this.focusActiveCell();\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._intlChanges.unsubscribe();\n\n      this.stateChanges.complete();\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var change = changes['minDate'] || changes['maxDate'] || changes['dateFilter'];\n\n      if (change && !change.firstChange) {\n        var view = this._getCurrentViewComponent();\n\n        if (view) {\n          // We need to `detectChanges` manually here, because the `minDate`, `maxDate` etc. are\n          // passed down to the view via data bindings which won't be up-to-date when we call `_init`.\n          this._changeDetectorRef.detectChanges();\n\n          view._init();\n        }\n      }\n\n      this.stateChanges.next();\n    }\n  }, {\n    key: \"focusActiveCell\",\n    value: function focusActiveCell() {\n      this._getCurrentViewComponent()._focusActiveCell(false);\n    }\n    /** Updates today's date after an update of the active date */\n\n  }, {\n    key: \"updateTodaysDate\",\n    value: function updateTodaysDate() {\n      var currentView = this.currentView;\n      var view;\n\n      if (currentView === 'month') {\n        view = this.monthView;\n      } else if (currentView === 'year') {\n        view = this.yearView;\n      } else {\n        view = this.multiYearView;\n      }\n\n      view._init();\n    }\n    /** Handles date selection in the month view. */\n\n  }, {\n    key: \"_dateSelected\",\n    value: function _dateSelected(event) {\n      var date = event.value;\n\n      if (this.selected instanceof DateRange || date && !this._dateAdapter.sameDate(date, this.selected)) {\n        this.selectedChange.emit(date);\n      }\n\n      this._userSelection.emit(event);\n    }\n    /** Handles year selection in the multiyear view. */\n\n  }, {\n    key: \"_yearSelectedInMultiYearView\",\n    value: function _yearSelectedInMultiYearView(normalizedYear) {\n      this.yearSelected.emit(normalizedYear);\n    }\n    /** Handles month selection in the year view. */\n\n  }, {\n    key: \"_monthSelectedInYearView\",\n    value: function _monthSelectedInYearView(normalizedMonth) {\n      this.monthSelected.emit(normalizedMonth);\n    }\n    /** Handles year/month selection in the multi-year/year views. */\n\n  }, {\n    key: \"_goToDateInView\",\n    value: function _goToDateInView(date, view) {\n      this.activeDate = date;\n      this.currentView = view;\n    }\n    /** Returns the component instance that corresponds to the current calendar view. */\n\n  }, {\n    key: \"_getCurrentViewComponent\",\n    value: function _getCurrentViewComponent() {\n      return this.monthView || this.yearView || this.multiYearView;\n    }\n  }]);\n\n  return MatCalendar;\n}();\n\nMatCalendar.ɵfac = function MatCalendar_Factory(t) {\n  return new (t || MatCalendar)(ɵngcc0.ɵɵdirectiveInject(MatDatepickerIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\n\nMatCalendar.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: MatCalendar,\n  selectors: [[\"mat-calendar\"]],\n  viewQuery: function MatCalendar_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(MatMonthView, 1);\n      ɵngcc0.ɵɵviewQuery(MatYearView, 1);\n      ɵngcc0.ɵɵviewQuery(MatMultiYearView, 1);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.monthView = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.yearView = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.multiYearView = _t.first);\n    }\n  },\n  hostAttrs: [1, \"mat-calendar\"],\n  inputs: {\n    startView: \"startView\",\n    startAt: \"startAt\",\n    selected: \"selected\",\n    minDate: \"minDate\",\n    maxDate: \"maxDate\",\n    headerComponent: \"headerComponent\",\n    dateFilter: \"dateFilter\",\n    dateClass: \"dateClass\",\n    comparisonStart: \"comparisonStart\",\n    comparisonEnd: \"comparisonEnd\"\n  },\n  outputs: {\n    selectedChange: \"selectedChange\",\n    yearSelected: \"yearSelected\",\n    monthSelected: \"monthSelected\",\n    viewChanged: \"viewChanged\",\n    _userSelection: \"_userSelection\"\n  },\n  exportAs: [\"matCalendar\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER]), ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 5,\n  vars: 5,\n  consts: [[3, \"cdkPortalOutlet\"], [\"cdkMonitorSubtreeFocus\", \"\", \"tabindex\", \"-1\", 1, \"mat-calendar-content\", 3, \"ngSwitch\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\", \"comparisonStart\", \"comparisonEnd\", \"activeDateChange\", \"_userSelection\", 4, \"ngSwitchCase\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\", \"activeDateChange\", \"monthSelected\", \"selectedChange\", 4, \"ngSwitchCase\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\", \"activeDateChange\", \"yearSelected\", \"selectedChange\", 4, \"ngSwitchCase\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\", \"comparisonStart\", \"comparisonEnd\", \"activeDateChange\", \"_userSelection\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\", \"activeDateChange\", \"monthSelected\", \"selectedChange\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\", \"activeDateChange\", \"yearSelected\", \"selectedChange\"]],\n  template: function MatCalendar_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, MatCalendar_ng_template_0_Template, 0, 0, \"ng-template\", 0);\n      ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n      ɵngcc0.ɵɵtemplate(2, MatCalendar_mat_month_view_2_Template, 1, 8, \"mat-month-view\", 2);\n      ɵngcc0.ɵɵtemplate(3, MatCalendar_mat_year_view_3_Template, 1, 6, \"mat-year-view\", 3);\n      ɵngcc0.ɵɵtemplate(4, MatCalendar_mat_multi_year_view_4_Template, 1, 6, \"mat-multi-year-view\", 4);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", ctx._calendarHeaderPortal);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.currentView);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"month\");\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"year\");\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"multi-year\");\n    }\n  },\n  directives: [ɵngcc6.CdkPortalOutlet, ɵngcc5.CdkMonitorFocus, ɵngcc1.NgSwitch, ɵngcc1.NgSwitchCase, MatMonthView, MatYearView, MatMultiYearView],\n  styles: [\".mat-calendar{display:block}.mat-calendar-header{padding:8px 8px 0 8px}.mat-calendar-content{padding:0 8px 8px 8px;outline:none}.mat-calendar-controls{display:flex;margin:5% calc(33% / 7 - 16px)}.mat-calendar-controls .mat-icon-button:hover .mat-button-focus-overlay{opacity:.04}.mat-calendar-spacer{flex:1 1 auto}.mat-calendar-period-button{min-width:0}.mat-calendar-arrow{display:inline-block;width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top-width:5px;border-top-style:solid;margin:0 0 0 5px;vertical-align:middle}.mat-calendar-arrow.mat-calendar-invert{transform:rotate(180deg)}[dir=rtl] .mat-calendar-arrow{margin:0 5px 0 0}.mat-calendar-previous-button,.mat-calendar-next-button{position:relative}.mat-calendar-previous-button::after,.mat-calendar-next-button::after{top:0;left:0;right:0;bottom:0;position:absolute;content:\\\"\\\";margin:15.5px;border:0 solid currentColor;border-top-width:2px}[dir=rtl] .mat-calendar-previous-button,[dir=rtl] .mat-calendar-next-button{transform:rotate(180deg)}.mat-calendar-previous-button::after{border-left-width:2px;transform:translateX(2px) rotate(-45deg)}.mat-calendar-next-button::after{border-right-width:2px;transform:translateX(-2px) rotate(45deg)}.mat-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mat-calendar-table-header th{text-align:center;padding:0 0 8px 0}.mat-calendar-table-header-divider{position:relative;height:1px}.mat-calendar-table-header-divider::after{content:\\\"\\\";position:absolute;top:0;left:-8px;right:-8px;height:1px}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nMatCalendar.ctorParameters = function () {\n  return [{\n    type: MatDatepickerIntl\n  }, {\n    type: DateAdapter,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_DATE_FORMATS]\n    }]\n  }, {\n    type: ChangeDetectorRef\n  }];\n};\n\nMatCalendar.propDecorators = {\n  headerComponent: [{\n    type: Input\n  }],\n  startAt: [{\n    type: Input\n  }],\n  startView: [{\n    type: Input\n  }],\n  selected: [{\n    type: Input\n  }],\n  minDate: [{\n    type: Input\n  }],\n  maxDate: [{\n    type: Input\n  }],\n  dateFilter: [{\n    type: Input\n  }],\n  dateClass: [{\n    type: Input\n  }],\n  comparisonStart: [{\n    type: Input\n  }],\n  comparisonEnd: [{\n    type: Input\n  }],\n  selectedChange: [{\n    type: Output\n  }],\n  yearSelected: [{\n    type: Output\n  }],\n  monthSelected: [{\n    type: Output\n  }],\n  viewChanged: [{\n    type: Output\n  }],\n  _userSelection: [{\n    type: Output\n  }],\n  monthView: [{\n    type: ViewChild,\n    args: [MatMonthView]\n  }],\n  yearView: [{\n    type: ViewChild,\n    args: [MatYearView]\n  }],\n  multiYearView: [{\n    type: ViewChild,\n    args: [MatMultiYearView]\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCalendar, [{\n    type: Component,\n    args: [{\n      selector: 'mat-calendar',\n      template: \"<ng-template [cdkPortalOutlet]=\\\"_calendarHeaderPortal\\\"></ng-template>\\n\\n<div class=\\\"mat-calendar-content\\\" [ngSwitch]=\\\"currentView\\\" cdkMonitorSubtreeFocus tabindex=\\\"-1\\\">\\n  <mat-month-view\\n      *ngSwitchCase=\\\"'month'\\\"\\n      [(activeDate)]=\\\"activeDate\\\"\\n      [selected]=\\\"selected\\\"\\n      [dateFilter]=\\\"dateFilter\\\"\\n      [maxDate]=\\\"maxDate\\\"\\n      [minDate]=\\\"minDate\\\"\\n      [dateClass]=\\\"dateClass\\\"\\n      [comparisonStart]=\\\"comparisonStart\\\"\\n      [comparisonEnd]=\\\"comparisonEnd\\\"\\n      (_userSelection)=\\\"_dateSelected($event)\\\">\\n  </mat-month-view>\\n\\n  <mat-year-view\\n      *ngSwitchCase=\\\"'year'\\\"\\n      [(activeDate)]=\\\"activeDate\\\"\\n      [selected]=\\\"selected\\\"\\n      [dateFilter]=\\\"dateFilter\\\"\\n      [maxDate]=\\\"maxDate\\\"\\n      [minDate]=\\\"minDate\\\"\\n      [dateClass]=\\\"dateClass\\\"\\n      (monthSelected)=\\\"_monthSelectedInYearView($event)\\\"\\n      (selectedChange)=\\\"_goToDateInView($event, 'month')\\\">\\n  </mat-year-view>\\n\\n  <mat-multi-year-view\\n      *ngSwitchCase=\\\"'multi-year'\\\"\\n      [(activeDate)]=\\\"activeDate\\\"\\n      [selected]=\\\"selected\\\"\\n      [dateFilter]=\\\"dateFilter\\\"\\n      [maxDate]=\\\"maxDate\\\"\\n      [minDate]=\\\"minDate\\\"\\n      [dateClass]=\\\"dateClass\\\"\\n      (yearSelected)=\\\"_yearSelectedInMultiYearView($event)\\\"\\n      (selectedChange)=\\\"_goToDateInView($event, 'year')\\\">\\n  </mat-multi-year-view>\\n</div>\\n\",\n      host: {\n        'class': 'mat-calendar'\n      },\n      exportAs: 'matCalendar',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER],\n      styles: [\".mat-calendar{display:block}.mat-calendar-header{padding:8px 8px 0 8px}.mat-calendar-content{padding:0 8px 8px 8px;outline:none}.mat-calendar-controls{display:flex;margin:5% calc(33% / 7 - 16px)}.mat-calendar-controls .mat-icon-button:hover .mat-button-focus-overlay{opacity:.04}.mat-calendar-spacer{flex:1 1 auto}.mat-calendar-period-button{min-width:0}.mat-calendar-arrow{display:inline-block;width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top-width:5px;border-top-style:solid;margin:0 0 0 5px;vertical-align:middle}.mat-calendar-arrow.mat-calendar-invert{transform:rotate(180deg)}[dir=rtl] .mat-calendar-arrow{margin:0 5px 0 0}.mat-calendar-previous-button,.mat-calendar-next-button{position:relative}.mat-calendar-previous-button::after,.mat-calendar-next-button::after{top:0;left:0;right:0;bottom:0;position:absolute;content:\\\"\\\";margin:15.5px;border:0 solid currentColor;border-top-width:2px}[dir=rtl] .mat-calendar-previous-button,[dir=rtl] .mat-calendar-next-button{transform:rotate(180deg)}.mat-calendar-previous-button::after{border-left-width:2px;transform:translateX(2px) rotate(-45deg)}.mat-calendar-next-button::after{border-right-width:2px;transform:translateX(-2px) rotate(45deg)}.mat-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mat-calendar-table-header th{text-align:center;padding:0 0 8px 0}.mat-calendar-table-header-divider{position:relative;height:1px}.mat-calendar-table-header-divider::after{content:\\\"\\\";position:absolute;top:0;left:-8px;right:-8px;height:1px}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: MatDatepickerIntl\n    }, {\n      type: ɵngcc2.DateAdapter,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_DATE_FORMATS]\n      }]\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    startView: [{\n      type: Input\n    }],\n    selectedChange: [{\n      type: Output\n    }],\n    yearSelected: [{\n      type: Output\n    }],\n    monthSelected: [{\n      type: Output\n    }],\n    viewChanged: [{\n      type: Output\n    }],\n    _userSelection: [{\n      type: Output\n    }],\n    startAt: [{\n      type: Input\n    }],\n    selected: [{\n      type: Input\n    }],\n    minDate: [{\n      type: Input\n    }],\n    maxDate: [{\n      type: Input\n    }],\n    headerComponent: [{\n      type: Input\n    }],\n    dateFilter: [{\n      type: Input\n    }],\n    dateClass: [{\n      type: Input\n    }],\n    comparisonStart: [{\n      type: Input\n    }],\n    comparisonEnd: [{\n      type: Input\n    }],\n    monthView: [{\n      type: ViewChild,\n      args: [MatMonthView]\n    }],\n    yearView: [{\n      type: ViewChild,\n      args: [MatYearView]\n    }],\n    multiYearView: [{\n      type: ViewChild,\n      args: [MatMultiYearView]\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Animations used by the Material datepicker.\n * @docs-private\n */\n\n\nvar matDatepickerAnimations = {\n  /** Transforms the height of the datepicker's calendar. */\n  transformPanel: trigger('transformPanel', [state('void', style({\n    opacity: 0,\n    transform: 'scale(1, 0.8)'\n  })), transition('void => enter', animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({\n    opacity: 1,\n    transform: 'scale(1, 1)'\n  }))), transition('* => void', animate('100ms linear', style({\n    opacity: 0\n  })))]),\n\n  /** Fades in the content of the calendar. */\n  fadeInCalendar: trigger('fadeInCalendar', [state('void', style({\n    opacity: 0\n  })), state('enter', style({\n    opacity: 1\n  })), // TODO(crisbeto): this animation should be removed since it isn't quite on spec, but we\n  // need to keep it until #12440 gets in, otherwise the exit animation will look glitchy.\n  transition('void => *', animate('120ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'))])\n};\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Used to generate a unique ID for each datepicker instance. */\n\nvar datepickerUid = 0;\n/** Injection token that determines the scroll handling while the calendar is open. */\n\nvar MAT_DATEPICKER_SCROLL_STRATEGY = new InjectionToken('mat-datepicker-scroll-strategy');\n/** @docs-private */\n\nfunction MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY(overlay) {\n  return function () {\n    return overlay.scrollStrategies.reposition();\n  };\n}\n/** @docs-private */\n\n\nvar MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n  provide: MAT_DATEPICKER_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY\n}; // Boilerplate for applying mixins to MatDatepickerContent.\n\n/** @docs-private */\n\nvar MatDatepickerContentBase = /*#__PURE__*/_createClass(function MatDatepickerContentBase(_elementRef) {\n  _classCallCheck(this, MatDatepickerContentBase);\n\n  this._elementRef = _elementRef;\n});\n\nvar _MatDatepickerContentMixinBase = mixinColor(MatDatepickerContentBase);\n/**\n * Component used as the content for the datepicker dialog and popup. We use this instead of using\n * MatCalendar directly as the content so we can control the initial focus. This also gives us a\n * place to put additional features of the popup that are not part of the calendar itself in the\n * future. (e.g. confirmation buttons).\n * @docs-private\n */\n\n\nvar MatDatepickerContent = /*#__PURE__*/function (_MatDatepickerContent) {\n  _inherits(MatDatepickerContent, _MatDatepickerContent);\n\n  var _super3 = _createSuper(MatDatepickerContent);\n\n  function MatDatepickerContent(elementRef, _changeDetectorRef, _globalModel, _dateAdapter, _rangeSelectionStrategy,\n  /**\n   * @deprecated `intl` argument to become required.\n   * @breaking-change 12.0.0\n   */\n  intl) {\n    var _this9;\n\n    _classCallCheck(this, MatDatepickerContent);\n\n    _this9 = _super3.call(this, elementRef);\n    _this9._changeDetectorRef = _changeDetectorRef;\n    _this9._globalModel = _globalModel;\n    _this9._dateAdapter = _dateAdapter;\n    _this9._rangeSelectionStrategy = _rangeSelectionStrategy;\n    _this9._subscriptions = new Subscription();\n    /** Current state of the animation. */\n\n    _this9._animationState = 'enter';\n    /** Emits when an animation has finished. */\n\n    _this9._animationDone = new Subject();\n    /** Portal with projected action buttons. */\n\n    _this9._actionsPortal = null; // @breaking-change 12.0.0 Remove fallback for `intl`.\n\n    _this9._closeButtonText = (intl === null || intl === void 0 ? void 0 : intl.closeCalendarLabel) || 'Close calendar';\n    return _this9;\n  }\n\n  _createClass(MatDatepickerContent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      // If we have actions, clone the model so that we have the ability to cancel the selection,\n      // otherwise update the global model directly. Note that we want to assign this as soon as\n      // possible, but `_actionsPortal` isn't available in the constructor so we do it in `ngOnInit`.\n      this._model = this._actionsPortal ? this._globalModel.clone() : this._globalModel;\n    }\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      var _this10 = this;\n\n      this._subscriptions.add(this.datepicker.stateChanges.subscribe(function () {\n        _this10._changeDetectorRef.markForCheck();\n      }));\n\n      this._calendar.focusActiveCell();\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._subscriptions.unsubscribe();\n\n      this._animationDone.complete();\n    }\n  }, {\n    key: \"_handleUserSelection\",\n    value: function _handleUserSelection(event) {\n      var selection = this._model.selection;\n      var value = event.value;\n      var isRange = selection instanceof DateRange; // If we're selecting a range and we have a selection strategy, always pass the value through\n      // there. Otherwise don't assign null values to the model, unless we're selecting a range.\n      // A null value when picking a range means that the user cancelled the selection (e.g. by\n      // pressing escape), whereas when selecting a single value it means that the value didn't\n      // change. This isn't very intuitive, but it's here for backwards-compatibility.\n\n      if (isRange && this._rangeSelectionStrategy) {\n        var newSelection = this._rangeSelectionStrategy.selectionFinished(value, selection, event.event);\n\n        this._model.updateSelection(newSelection, this);\n      } else if (value && (isRange || !this._dateAdapter.sameDate(value, selection))) {\n        this._model.add(value);\n      } // Delegate closing the popup to the actions.\n\n\n      if ((!this._model || this._model.isComplete()) && !this._actionsPortal) {\n        this.datepicker.close();\n      }\n    }\n  }, {\n    key: \"_startExitAnimation\",\n    value: function _startExitAnimation() {\n      this._animationState = 'void';\n\n      this._changeDetectorRef.markForCheck();\n    }\n  }, {\n    key: \"_getSelected\",\n    value: function _getSelected() {\n      return this._model.selection;\n    }\n    /** Applies the current pending selection to the global model. */\n\n  }, {\n    key: \"_applyPendingSelection\",\n    value: function _applyPendingSelection() {\n      if (this._model !== this._globalModel) {\n        this._globalModel.updateSelection(this._model.selection, this);\n      }\n    }\n  }]);\n\n  return MatDatepickerContent;\n}(_MatDatepickerContentMixinBase);\n\nMatDatepickerContent.ɵfac = function MatDatepickerContent_Factory(t) {\n  return new (t || MatDatepickerContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MatDateSelectionModel), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_RANGE_SELECTION_STRATEGY, 8), ɵngcc0.ɵɵdirectiveInject(MatDatepickerIntl));\n};\n\nMatDatepickerContent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: MatDatepickerContent,\n  selectors: [[\"mat-datepicker-content\"]],\n  viewQuery: function MatDatepickerContent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(MatCalendar, 1);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._calendar = _t.first);\n    }\n  },\n  hostAttrs: [1, \"mat-datepicker-content\"],\n  hostVars: 3,\n  hostBindings: function MatDatepickerContent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵsyntheticHostListener(\"@transformPanel.done\", function MatDatepickerContent_animation_transformPanel_done_HostBindingHandler() {\n        return ctx._animationDone.next();\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵsyntheticHostProperty(\"@transformPanel\", ctx._animationState);\n      ɵngcc0.ɵɵclassProp(\"mat-datepicker-content-touch\", ctx.datepicker.touchUi);\n    }\n  },\n  inputs: {\n    color: \"color\"\n  },\n  exportAs: [\"matDatepickerContent\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 5,\n  vars: 20,\n  consts: [[\"cdkTrapFocus\", \"\", 1, \"mat-datepicker-content-container\"], [3, \"id\", \"ngClass\", \"startAt\", \"startView\", \"minDate\", \"maxDate\", \"dateFilter\", \"headerComponent\", \"selected\", \"dateClass\", \"comparisonStart\", \"comparisonEnd\", \"yearSelected\", \"monthSelected\", \"viewChanged\", \"_userSelection\"], [3, \"cdkPortalOutlet\"], [\"type\", \"button\", \"mat-raised-button\", \"\", 1, \"mat-datepicker-close-button\", 3, \"color\", \"focus\", \"blur\", \"click\"]],\n  template: function MatDatepickerContent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵelementStart(1, \"mat-calendar\", 1);\n      ɵngcc0.ɵɵlistener(\"yearSelected\", function MatDatepickerContent_Template_mat_calendar_yearSelected_1_listener($event) {\n        return ctx.datepicker._selectYear($event);\n      })(\"monthSelected\", function MatDatepickerContent_Template_mat_calendar_monthSelected_1_listener($event) {\n        return ctx.datepicker._selectMonth($event);\n      })(\"viewChanged\", function MatDatepickerContent_Template_mat_calendar_viewChanged_1_listener($event) {\n        return ctx.datepicker._viewChanged($event);\n      })(\"_userSelection\", function MatDatepickerContent_Template_mat_calendar__userSelection_1_listener($event) {\n        return ctx._handleUserSelection($event);\n      });\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(2, MatDatepickerContent_ng_template_2_Template, 0, 0, \"ng-template\", 2);\n      ɵngcc0.ɵɵelementStart(3, \"button\", 3);\n      ɵngcc0.ɵɵlistener(\"focus\", function MatDatepickerContent_Template_button_focus_3_listener() {\n        return ctx._closeButtonFocused = true;\n      })(\"blur\", function MatDatepickerContent_Template_button_blur_3_listener() {\n        return ctx._closeButtonFocused = false;\n      })(\"click\", function MatDatepickerContent_Template_button_click_3_listener() {\n        return ctx.datepicker.close();\n      });\n      ɵngcc0.ɵɵtext(4);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"mat-datepicker-content-container-with-actions\", ctx._actionsPortal);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"id\", ctx.datepicker.id)(\"ngClass\", ctx.datepicker.panelClass)(\"startAt\", ctx.datepicker.startAt)(\"startView\", ctx.datepicker.startView)(\"minDate\", ctx.datepicker._getMinDate())(\"maxDate\", ctx.datepicker._getMaxDate())(\"dateFilter\", ctx.datepicker._getDateFilter())(\"headerComponent\", ctx.datepicker.calendarHeaderComponent)(\"selected\", ctx._getSelected())(\"dateClass\", ctx.datepicker.dateClass)(\"comparisonStart\", ctx.comparisonStart)(\"comparisonEnd\", ctx.comparisonEnd)(\"@fadeInCalendar\", \"enter\");\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", ctx._actionsPortal);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵclassProp(\"cdk-visually-hidden\", !ctx._closeButtonFocused);\n      ɵngcc0.ɵɵproperty(\"color\", ctx.color || \"primary\");\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵtextInterpolate(ctx._closeButtonText);\n    }\n  },\n  directives: [ɵngcc5.CdkTrapFocus, MatCalendar, ɵngcc1.NgClass, ɵngcc6.CdkPortalOutlet, ɵngcc4.MatButton],\n  styles: [\".mat-datepicker-content{display:block;border-radius:4px}.mat-datepicker-content .mat-calendar{width:296px;height:354px}.mat-datepicker-content .mat-datepicker-close-button{position:absolute;top:100%;left:0;margin-top:8px}.ng-animating .mat-datepicker-content .mat-datepicker-close-button{display:none}.mat-datepicker-content-container{display:flex;flex-direction:column;justify-content:space-between}.mat-datepicker-content-touch{display:block;max-height:80vh;overflow:auto;margin:-24px}.mat-datepicker-content-touch .mat-datepicker-content-container{min-height:312px;max-height:788px;min-width:250px;max-width:750px}.mat-datepicker-content-touch .mat-calendar{width:100%;height:auto}@media all and (orientation: landscape){.mat-datepicker-content-touch .mat-datepicker-content-container{width:64vh;height:80vh}}@media all and (orientation: portrait){.mat-datepicker-content-touch .mat-datepicker-content-container{width:80vw;height:100vw}.mat-datepicker-content-touch .mat-datepicker-content-container-with-actions{height:115vw}}\\n\"],\n  encapsulation: 2,\n  data: {\n    animation: [matDatepickerAnimations.transformPanel, matDatepickerAnimations.fadeInCalendar]\n  },\n  changeDetection: 0\n});\n\nMatDatepickerContent.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: MatDateSelectionModel\n  }, {\n    type: DateAdapter\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_DATE_RANGE_SELECTION_STRATEGY]\n    }]\n  }, {\n    type: MatDatepickerIntl\n  }];\n};\n\nMatDatepickerContent.propDecorators = {\n  _calendar: [{\n    type: ViewChild,\n    args: [MatCalendar]\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerContent, [{\n    type: Component,\n    args: [{\n      selector: 'mat-datepicker-content',\n      template: \"<div\\n  cdkTrapFocus\\n  class=\\\"mat-datepicker-content-container\\\"\\n  [class.mat-datepicker-content-container-with-actions]=\\\"_actionsPortal\\\">\\n  <mat-calendar\\n    [id]=\\\"datepicker.id\\\"\\n    [ngClass]=\\\"datepicker.panelClass\\\"\\n    [startAt]=\\\"datepicker.startAt\\\"\\n    [startView]=\\\"datepicker.startView\\\"\\n    [minDate]=\\\"datepicker._getMinDate()\\\"\\n    [maxDate]=\\\"datepicker._getMaxDate()\\\"\\n    [dateFilter]=\\\"datepicker._getDateFilter()\\\"\\n    [headerComponent]=\\\"datepicker.calendarHeaderComponent\\\"\\n    [selected]=\\\"_getSelected()\\\"\\n    [dateClass]=\\\"datepicker.dateClass\\\"\\n    [comparisonStart]=\\\"comparisonStart\\\"\\n    [comparisonEnd]=\\\"comparisonEnd\\\"\\n    [@fadeInCalendar]=\\\"'enter'\\\"\\n    (yearSelected)=\\\"datepicker._selectYear($event)\\\"\\n    (monthSelected)=\\\"datepicker._selectMonth($event)\\\"\\n    (viewChanged)=\\\"datepicker._viewChanged($event)\\\"\\n    (_userSelection)=\\\"_handleUserSelection($event)\\\"></mat-calendar>\\n\\n  <ng-template [cdkPortalOutlet]=\\\"_actionsPortal\\\"></ng-template>\\n\\n  <!-- Invisible close button for screen reader users. -->\\n  <button\\n    type=\\\"button\\\"\\n    mat-raised-button\\n    [color]=\\\"color || 'primary'\\\"\\n    class=\\\"mat-datepicker-close-button\\\"\\n    [class.cdk-visually-hidden]=\\\"!_closeButtonFocused\\\"\\n    (focus)=\\\"_closeButtonFocused = true\\\"\\n    (blur)=\\\"_closeButtonFocused = false\\\"\\n    (click)=\\\"datepicker.close()\\\">{{ _closeButtonText }}</button>\\n</div>\\n\",\n      host: {\n        'class': 'mat-datepicker-content',\n        '[@transformPanel]': '_animationState',\n        '(@transformPanel.done)': '_animationDone.next()',\n        '[class.mat-datepicker-content-touch]': 'datepicker.touchUi'\n      },\n      animations: [matDatepickerAnimations.transformPanel, matDatepickerAnimations.fadeInCalendar],\n      exportAs: 'matDatepickerContent',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      inputs: ['color'],\n      styles: [\".mat-datepicker-content{display:block;border-radius:4px}.mat-datepicker-content .mat-calendar{width:296px;height:354px}.mat-datepicker-content .mat-datepicker-close-button{position:absolute;top:100%;left:0;margin-top:8px}.ng-animating .mat-datepicker-content .mat-datepicker-close-button{display:none}.mat-datepicker-content-container{display:flex;flex-direction:column;justify-content:space-between}.mat-datepicker-content-touch{display:block;max-height:80vh;overflow:auto;margin:-24px}.mat-datepicker-content-touch .mat-datepicker-content-container{min-height:312px;max-height:788px;min-width:250px;max-width:750px}.mat-datepicker-content-touch .mat-calendar{width:100%;height:auto}@media all and (orientation: landscape){.mat-datepicker-content-touch .mat-datepicker-content-container{width:64vh;height:80vh}}@media all and (orientation: portrait){.mat-datepicker-content-touch .mat-datepicker-content-container{width:80vw;height:100vw}.mat-datepicker-content-touch .mat-datepicker-content-container-with-actions{height:115vw}}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: MatDateSelectionModel\n    }, {\n      type: ɵngcc2.DateAdapter\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_DATE_RANGE_SELECTION_STRATEGY]\n      }]\n    }, {\n      type: MatDatepickerIntl\n    }];\n  }, {\n    _calendar: [{\n      type: ViewChild,\n      args: [MatCalendar]\n    }]\n  });\n})();\n/** Base class for a datepicker. */\n\n\nvar MatDatepickerBase = /*#__PURE__*/function () {\n  function MatDatepickerBase(_dialog, _overlay, _ngZone, _viewContainerRef, scrollStrategy, _dateAdapter, _dir, _document, _model) {\n    _classCallCheck(this, MatDatepickerBase);\n\n    this._dialog = _dialog;\n    this._overlay = _overlay;\n    this._ngZone = _ngZone;\n    this._viewContainerRef = _viewContainerRef;\n    this._dateAdapter = _dateAdapter;\n    this._dir = _dir;\n    this._document = _document;\n    this._model = _model;\n    this._inputStateChanges = Subscription.EMPTY;\n    /** The view that the calendar should start in. */\n\n    this.startView = 'month';\n    this._touchUi = false;\n    /** Preferred position of the datepicker in the X axis. */\n\n    this.xPosition = 'start';\n    /** Preferred position of the datepicker in the Y axis. */\n\n    this.yPosition = 'below';\n    this._restoreFocus = true;\n    /**\n     * Emits selected year in multiyear view.\n     * This doesn't imply a change on the selected date.\n     */\n\n    this.yearSelected = new EventEmitter();\n    /**\n     * Emits selected month in year view.\n     * This doesn't imply a change on the selected date.\n     */\n\n    this.monthSelected = new EventEmitter();\n    /**\n     * Emits when the current view changes.\n     */\n\n    this.viewChanged = new EventEmitter(true);\n    /** Emits when the datepicker has been opened. */\n\n    this.openedStream = new EventEmitter();\n    /** Emits when the datepicker has been closed. */\n\n    this.closedStream = new EventEmitter();\n    this._opened = false;\n    /** The id for the datepicker calendar. */\n\n    this.id = \"mat-datepicker-\".concat(datepickerUid++);\n    /** The element that was focused before the datepicker was opened. */\n\n    this._focusedElementBeforeOpen = null;\n    /** Unique class that will be added to the backdrop so that the test harnesses can look it up. */\n\n    this._backdropHarnessClass = \"\".concat(this.id, \"-backdrop\");\n    /** Emits when the datepicker's state changes. */\n\n    this.stateChanges = new Subject();\n\n    if (!this._dateAdapter && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n\n    this._scrollStrategy = scrollStrategy;\n  }\n  /** The date to open the calendar to initially. */\n\n\n  _createClass(MatDatepickerBase, [{\n    key: \"startAt\",\n    get: function get() {\n      // If an explicit startAt is set we start there, otherwise we start at whatever the currently\n      // selected value is.\n      return this._startAt || (this.datepickerInput ? this.datepickerInput.getStartValue() : null);\n    },\n    set: function set(value) {\n      this._startAt = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** Color palette to use on the datepicker's calendar. */\n\n  }, {\n    key: \"color\",\n    get: function get() {\n      return this._color || (this.datepickerInput ? this.datepickerInput.getThemePalette() : undefined);\n    },\n    set: function set(value) {\n      this._color = value;\n    }\n    /**\n     * Whether the calendar UI is in touch mode. In touch mode the calendar opens in a dialog rather\n     * than a popup and elements have more padding to allow for bigger touch targets.\n     */\n\n  }, {\n    key: \"touchUi\",\n    get: function get() {\n      return this._touchUi;\n    },\n    set: function set(value) {\n      this._touchUi = coerceBooleanProperty(value);\n    }\n    /** Whether the datepicker pop-up should be disabled. */\n\n  }, {\n    key: \"disabled\",\n    get: function get() {\n      return this._disabled === undefined && this.datepickerInput ? this.datepickerInput.disabled : !!this._disabled;\n    },\n    set: function set(value) {\n      var newValue = coerceBooleanProperty(value);\n\n      if (newValue !== this._disabled) {\n        this._disabled = newValue;\n        this.stateChanges.next(undefined);\n      }\n    }\n    /**\n     * Whether to restore focus to the previously-focused element when the calendar is closed.\n     * Note that automatic focus restoration is an accessibility feature and it is recommended that\n     * you provide your own equivalent, if you decide to turn it off.\n     */\n\n  }, {\n    key: \"restoreFocus\",\n    get: function get() {\n      return this._restoreFocus;\n    },\n    set: function set(value) {\n      this._restoreFocus = coerceBooleanProperty(value);\n    }\n    /**\n     * Classes to be passed to the date picker panel.\n     * Supports string and string array values, similar to `ngClass`.\n     */\n\n  }, {\n    key: \"panelClass\",\n    get: function get() {\n      return this._panelClass;\n    },\n    set: function set(value) {\n      this._panelClass = coerceStringArray(value);\n    }\n    /** Whether the calendar is open. */\n\n  }, {\n    key: \"opened\",\n    get: function get() {\n      return this._opened;\n    },\n    set: function set(value) {\n      coerceBooleanProperty(value) ? this.open() : this.close();\n    }\n    /** The minimum selectable date. */\n\n  }, {\n    key: \"_getMinDate\",\n    value: function _getMinDate() {\n      return this.datepickerInput && this.datepickerInput.min;\n    }\n    /** The maximum selectable date. */\n\n  }, {\n    key: \"_getMaxDate\",\n    value: function _getMaxDate() {\n      return this.datepickerInput && this.datepickerInput.max;\n    }\n  }, {\n    key: \"_getDateFilter\",\n    value: function _getDateFilter() {\n      return this.datepickerInput && this.datepickerInput.dateFilter;\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var positionChange = changes['xPosition'] || changes['yPosition'];\n\n      if (positionChange && !positionChange.firstChange && this._popupRef) {\n        this._setConnectedPositions(this._popupRef.getConfig().positionStrategy);\n\n        if (this.opened) {\n          this._popupRef.updatePosition();\n        }\n      }\n\n      this.stateChanges.next(undefined);\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._destroyPopup();\n\n      this.close();\n\n      this._inputStateChanges.unsubscribe();\n\n      this.stateChanges.complete();\n    }\n    /** Selects the given date */\n\n  }, {\n    key: \"select\",\n    value: function select(date) {\n      this._model.add(date);\n    }\n    /** Emits the selected year in multiyear view */\n\n  }, {\n    key: \"_selectYear\",\n    value: function _selectYear(normalizedYear) {\n      this.yearSelected.emit(normalizedYear);\n    }\n    /** Emits selected month in year view */\n\n  }, {\n    key: \"_selectMonth\",\n    value: function _selectMonth(normalizedMonth) {\n      this.monthSelected.emit(normalizedMonth);\n    }\n    /** Emits changed view */\n\n  }, {\n    key: \"_viewChanged\",\n    value: function _viewChanged(view) {\n      this.viewChanged.emit(view);\n    }\n    /**\n     * Register an input with this datepicker.\n     * @param input The datepicker input to register with this datepicker.\n     * @returns Selection model that the input should hook itself up to.\n     */\n\n  }, {\n    key: \"registerInput\",\n    value: function registerInput(input) {\n      var _this11 = this;\n\n      if (this.datepickerInput && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error('A MatDatepicker can only be associated with a single input.');\n      }\n\n      this._inputStateChanges.unsubscribe();\n\n      this.datepickerInput = input;\n      this._inputStateChanges = input.stateChanges.subscribe(function () {\n        return _this11.stateChanges.next(undefined);\n      });\n      return this._model;\n    }\n    /**\n     * Registers a portal containing action buttons with the datepicker.\n     * @param portal Portal to be registered.\n     */\n\n  }, {\n    key: \"registerActions\",\n    value: function registerActions(portal) {\n      if (this._actionsPortal && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error('A MatDatepicker can only be associated with a single actions row.');\n      }\n\n      this._actionsPortal = portal;\n    }\n    /**\n     * Removes a portal containing action buttons from the datepicker.\n     * @param portal Portal to be removed.\n     */\n\n  }, {\n    key: \"removeActions\",\n    value: function removeActions(portal) {\n      if (portal === this._actionsPortal) {\n        this._actionsPortal = null;\n      }\n    }\n    /** Open the calendar. */\n\n  }, {\n    key: \"open\",\n    value: function open() {\n      if (this._opened || this.disabled) {\n        return;\n      }\n\n      if (!this.datepickerInput && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error('Attempted to open an MatDatepicker with no associated input.');\n      }\n\n      if (this._document) {\n        this._focusedElementBeforeOpen = this._document.activeElement;\n      }\n\n      this.touchUi ? this._openAsDialog() : this._openAsPopup();\n      this._opened = true;\n      this.openedStream.emit();\n    }\n    /** Close the calendar. */\n\n  }, {\n    key: \"close\",\n    value: function close() {\n      var _this12 = this;\n\n      if (!this._opened) {\n        return;\n      }\n\n      if (this._popupComponentRef && this._popupRef) {\n        var instance = this._popupComponentRef.instance;\n\n        instance._startExitAnimation();\n\n        instance._animationDone.pipe(take(1)).subscribe(function () {\n          return _this12._destroyPopup();\n        });\n      }\n\n      if (this._dialogRef) {\n        this._dialogRef.close();\n\n        this._dialogRef = null;\n      }\n\n      var completeClose = function completeClose() {\n        // The `_opened` could've been reset already if\n        // we got two events in quick succession.\n        if (_this12._opened) {\n          _this12._opened = false;\n\n          _this12.closedStream.emit();\n\n          _this12._focusedElementBeforeOpen = null;\n        }\n      };\n\n      if (this._restoreFocus && this._focusedElementBeforeOpen && typeof this._focusedElementBeforeOpen.focus === 'function') {\n        // Because IE moves focus asynchronously, we can't count on it being restored before we've\n        // marked the datepicker as closed. If the event fires out of sequence and the element that\n        // we're refocusing opens the datepicker on focus, the user could be stuck with not being\n        // able to close the calendar at all. We work around it by making the logic, that marks\n        // the datepicker as closed, async as well.\n        this._focusedElementBeforeOpen.focus();\n\n        setTimeout(completeClose);\n      } else {\n        completeClose();\n      }\n    }\n    /** Applies the current pending selection on the popup to the model. */\n\n  }, {\n    key: \"_applyPendingSelection\",\n    value: function _applyPendingSelection() {\n      var _a, _b;\n\n      var instance = ((_a = this._popupComponentRef) === null || _a === void 0 ? void 0 : _a.instance) || ((_b = this._dialogRef) === null || _b === void 0 ? void 0 : _b.componentInstance);\n      instance === null || instance === void 0 ? void 0 : instance._applyPendingSelection();\n    }\n    /** Open the calendar as a dialog. */\n\n  }, {\n    key: \"_openAsDialog\",\n    value: function _openAsDialog() {\n      var _this13 = this;\n\n      // Usually this would be handled by `open` which ensures that we can only have one overlay\n      // open at a time, however since we reset the variables in async handlers some overlays\n      // may slip through if the user opens and closes multiple times in quick succession (e.g.\n      // by holding down the enter key).\n      if (this._dialogRef) {\n        this._dialogRef.close();\n      }\n\n      this._dialogRef = this._dialog.open(MatDatepickerContent, {\n        direction: this._dir ? this._dir.value : 'ltr',\n        viewContainerRef: this._viewContainerRef,\n        panelClass: 'mat-datepicker-dialog',\n        // These values are all the same as the defaults, but we set them explicitly so that the\n        // datepicker dialog behaves consistently even if the user changed the defaults.\n        hasBackdrop: true,\n        disableClose: false,\n        backdropClass: ['cdk-overlay-dark-backdrop', this._backdropHarnessClass],\n        width: '',\n        height: '',\n        minWidth: '',\n        minHeight: '',\n        maxWidth: '80vw',\n        maxHeight: '',\n        position: {},\n        // Disable the dialog's automatic focus capturing, because it'll go to the close button\n        // automatically. The calendar will move focus on its own once it renders.\n        autoFocus: false,\n        // `MatDialog` has focus restoration built in, however we want to disable it since the\n        // datepicker also has focus restoration for dropdown mode. We want to do this, in order\n        // to ensure that the timing is consistent between dropdown and dialog modes since `MatDialog`\n        // restores focus when the animation is finished, but the datepicker does it immediately.\n        // Furthermore, this avoids any conflicts where the datepicker consumer might move focus\n        // inside the `closed` event which is dispatched immediately.\n        restoreFocus: false\n      });\n\n      this._dialogRef.afterClosed().subscribe(function () {\n        return _this13.close();\n      });\n\n      this._forwardContentValues(this._dialogRef.componentInstance);\n    }\n    /** Open the calendar as a popup. */\n\n  }, {\n    key: \"_openAsPopup\",\n    value: function _openAsPopup() {\n      var _this14 = this;\n\n      var portal = new ComponentPortal(MatDatepickerContent, this._viewContainerRef);\n\n      this._destroyPopup();\n\n      this._createPopup();\n\n      this._popupComponentRef = this._popupRef.attach(portal);\n\n      this._forwardContentValues(this._popupComponentRef.instance); // Update the position once the calendar has rendered.\n\n\n      this._ngZone.onStable.pipe(take(1)).subscribe(function () {\n        _this14._popupRef.updatePosition();\n      });\n    }\n    /** Forwards relevant values from the datepicker to the datepicker content inside the overlay. */\n\n  }, {\n    key: \"_forwardContentValues\",\n    value: function _forwardContentValues(instance) {\n      instance.datepicker = this;\n      instance.color = this.color;\n      instance._actionsPortal = this._actionsPortal;\n    }\n    /** Create the popup. */\n\n  }, {\n    key: \"_createPopup\",\n    value: function _createPopup() {\n      var _this15 = this;\n\n      var positionStrategy = this._overlay.position().flexibleConnectedTo(this.datepickerInput.getConnectedOverlayOrigin()).withTransformOriginOn('.mat-datepicker-content').withFlexibleDimensions(false).withViewportMargin(8).withLockedPosition();\n\n      var overlayConfig = new OverlayConfig({\n        positionStrategy: this._setConnectedPositions(positionStrategy),\n        hasBackdrop: true,\n        backdropClass: ['mat-overlay-transparent-backdrop', this._backdropHarnessClass],\n        direction: this._dir,\n        scrollStrategy: this._scrollStrategy(),\n        panelClass: 'mat-datepicker-popup'\n      });\n      this._popupRef = this._overlay.create(overlayConfig);\n\n      this._popupRef.overlayElement.setAttribute('role', 'dialog');\n\n      merge(this._popupRef.backdropClick(), this._popupRef.detachments(), this._popupRef.keydownEvents().pipe(filter(function (event) {\n        // Closing on alt + up is only valid when there's an input associated with the datepicker.\n        return event.keyCode === ESCAPE && !hasModifierKey(event) || _this15.datepickerInput && hasModifierKey(event, 'altKey') && event.keyCode === UP_ARROW;\n      }))).subscribe(function (event) {\n        if (event) {\n          event.preventDefault();\n        }\n\n        _this15.close();\n      });\n    }\n    /** Destroys the current popup overlay. */\n\n  }, {\n    key: \"_destroyPopup\",\n    value: function _destroyPopup() {\n      if (this._popupRef) {\n        this._popupRef.dispose();\n\n        this._popupRef = this._popupComponentRef = null;\n      }\n    }\n    /** Sets the positions of the datepicker in dropdown mode based on the current configuration. */\n\n  }, {\n    key: \"_setConnectedPositions\",\n    value: function _setConnectedPositions(strategy) {\n      var primaryX = this.xPosition === 'end' ? 'end' : 'start';\n      var secondaryX = primaryX === 'start' ? 'end' : 'start';\n      var primaryY = this.yPosition === 'above' ? 'bottom' : 'top';\n      var secondaryY = primaryY === 'top' ? 'bottom' : 'top';\n      return strategy.withPositions([{\n        originX: primaryX,\n        originY: secondaryY,\n        overlayX: primaryX,\n        overlayY: primaryY\n      }, {\n        originX: primaryX,\n        originY: primaryY,\n        overlayX: primaryX,\n        overlayY: secondaryY\n      }, {\n        originX: secondaryX,\n        originY: secondaryY,\n        overlayX: secondaryX,\n        overlayY: primaryY\n      }, {\n        originX: secondaryX,\n        originY: primaryY,\n        overlayX: secondaryX,\n        overlayY: secondaryY\n      }]);\n    }\n  }]);\n\n  return MatDatepickerBase;\n}();\n\nMatDatepickerBase.ɵfac = function MatDatepickerBase_Factory(t) {\n  return new (t || MatDatepickerBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc7.MatDialog), ɵngcc0.ɵɵdirectiveInject(ɵngcc8.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(MAT_DATEPICKER_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(MatDateSelectionModel));\n};\n\nMatDatepickerBase.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: MatDatepickerBase,\n  inputs: {\n    startView: \"startView\",\n    xPosition: \"xPosition\",\n    yPosition: \"yPosition\",\n    startAt: \"startAt\",\n    color: \"color\",\n    touchUi: \"touchUi\",\n    disabled: \"disabled\",\n    restoreFocus: \"restoreFocus\",\n    panelClass: \"panelClass\",\n    opened: \"opened\",\n    calendarHeaderComponent: \"calendarHeaderComponent\",\n    dateClass: \"dateClass\"\n  },\n  outputs: {\n    yearSelected: \"yearSelected\",\n    monthSelected: \"monthSelected\",\n    viewChanged: \"viewChanged\",\n    openedStream: \"opened\",\n    closedStream: \"closed\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\n\nMatDatepickerBase.ctorParameters = function () {\n  return [{\n    type: MatDialog\n  }, {\n    type: Overlay\n  }, {\n    type: NgZone\n  }, {\n    type: ViewContainerRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [MAT_DATEPICKER_SCROLL_STRATEGY]\n    }]\n  }, {\n    type: DateAdapter,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: Directionality,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: MatDateSelectionModel\n  }];\n};\n\nMatDatepickerBase.propDecorators = {\n  calendarHeaderComponent: [{\n    type: Input\n  }],\n  startAt: [{\n    type: Input\n  }],\n  startView: [{\n    type: Input\n  }],\n  color: [{\n    type: Input\n  }],\n  touchUi: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }],\n  xPosition: [{\n    type: Input\n  }],\n  yPosition: [{\n    type: Input\n  }],\n  restoreFocus: [{\n    type: Input\n  }],\n  yearSelected: [{\n    type: Output\n  }],\n  monthSelected: [{\n    type: Output\n  }],\n  viewChanged: [{\n    type: Output\n  }],\n  dateClass: [{\n    type: Input\n  }],\n  openedStream: [{\n    type: Output,\n    args: ['opened']\n  }],\n  closedStream: [{\n    type: Output,\n    args: ['closed']\n  }],\n  panelClass: [{\n    type: Input\n  }],\n  opened: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerBase, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: ɵngcc7.MatDialog\n    }, {\n      type: ɵngcc8.Overlay\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: ɵngcc0.ViewContainerRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_DATEPICKER_SCROLL_STRATEGY]\n      }]\n    }, {\n      type: ɵngcc2.DateAdapter,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: ɵngcc3.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: MatDateSelectionModel\n    }];\n  }, {\n    startView: [{\n      type: Input\n    }],\n    xPosition: [{\n      type: Input\n    }],\n    yPosition: [{\n      type: Input\n    }],\n    yearSelected: [{\n      type: Output\n    }],\n    monthSelected: [{\n      type: Output\n    }],\n    viewChanged: [{\n      type: Output\n    }],\n    openedStream: [{\n      type: Output,\n      args: ['opened']\n    }],\n    closedStream: [{\n      type: Output,\n      args: ['closed']\n    }],\n    startAt: [{\n      type: Input\n    }],\n    color: [{\n      type: Input\n    }],\n    touchUi: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    restoreFocus: [{\n      type: Input\n    }],\n    panelClass: [{\n      type: Input\n    }],\n    opened: [{\n      type: Input\n    }],\n    calendarHeaderComponent: [{\n      type: Input\n    }],\n    dateClass: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(mmalerba): We use a component instead of a directive here so the user can use implicit\n// template reference variables (e.g. #d vs #d=\"matDatepicker\"). We can change this to a directive\n// if angular adds support for `exportAs: '$implicit'` on directives.\n\n/** Component responsible for managing the datepicker popup/dialog. */\n\n\nvar MatDatepicker = /*#__PURE__*/function (_MatDatepickerBase) {\n  _inherits(MatDatepicker, _MatDatepickerBase);\n\n  var _super4 = _createSuper(MatDatepicker);\n\n  function MatDatepicker() {\n    _classCallCheck(this, MatDatepicker);\n\n    return _super4.apply(this, arguments);\n  }\n\n  return _createClass(MatDatepicker);\n}(MatDatepickerBase);\n\nMatDatepicker.ɵfac = function MatDatepicker_Factory(t) {\n  return ɵMatDatepicker_BaseFactory(t || MatDatepicker);\n};\n\nMatDatepicker.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: MatDatepicker,\n  selectors: [[\"mat-datepicker\"]],\n  exportAs: [\"matDatepicker\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER, {\n    provide: MatDatepickerBase,\n    useExisting: MatDatepicker\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function MatDatepicker_Template(rf, ctx) {},\n  encapsulation: 2,\n  changeDetection: 0\n});\nvar ɵMatDatepicker_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(MatDatepicker);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepicker, [{\n    type: Component,\n    args: [{\n      selector: 'mat-datepicker',\n      template: '',\n      exportAs: 'matDatepicker',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      providers: [MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER, {\n        provide: MatDatepickerBase,\n        useExisting: MatDatepicker\n      }]\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * An event used for datepicker input and change events. We don't always have access to a native\n * input or change event because the event may have been triggered by the user clicking on the\n * calendar popup. For consistency, we always use MatDatepickerInputEvent instead.\n */\n\n\nvar MatDatepickerInputEvent = /*#__PURE__*/_createClass(function MatDatepickerInputEvent(\n/** Reference to the datepicker input component that emitted the event. */\ntarget,\n/** Reference to the native input element associated with the datepicker input. */\ntargetElement) {\n  _classCallCheck(this, MatDatepickerInputEvent);\n\n  this.target = target;\n  this.targetElement = targetElement;\n  this.value = this.target.value;\n});\n/** Base class for datepicker inputs. */\n\n\nvar MatDatepickerInputBase = /*#__PURE__*/function () {\n  function MatDatepickerInputBase(_elementRef, _dateAdapter, _dateFormats) {\n    var _this16 = this;\n\n    _classCallCheck(this, MatDatepickerInputBase);\n\n    this._elementRef = _elementRef;\n    this._dateAdapter = _dateAdapter;\n    this._dateFormats = _dateFormats;\n    /** Emits when a `change` event is fired on this `<input>`. */\n\n    this.dateChange = new EventEmitter();\n    /** Emits when an `input` event is fired on this `<input>`. */\n\n    this.dateInput = new EventEmitter();\n    /** Emits when the internal state has changed */\n\n    this.stateChanges = new Subject();\n\n    this._onTouched = function () {};\n\n    this._validatorOnChange = function () {};\n\n    this._cvaOnChange = function () {};\n\n    this._valueChangesSubscription = Subscription.EMPTY;\n    this._localeSubscription = Subscription.EMPTY;\n    /** The form control validator for whether the input parses. */\n\n    this._parseValidator = function () {\n      return _this16._lastValueValid ? null : {\n        'matDatepickerParse': {\n          'text': _this16._elementRef.nativeElement.value\n        }\n      };\n    };\n    /** The form control validator for the date filter. */\n\n\n    this._filterValidator = function (control) {\n      var controlValue = _this16._dateAdapter.getValidDateOrNull(_this16._dateAdapter.deserialize(control.value));\n\n      return !controlValue || _this16._matchesFilter(controlValue) ? null : {\n        'matDatepickerFilter': true\n      };\n    };\n    /** The form control validator for the min date. */\n\n\n    this._minValidator = function (control) {\n      var controlValue = _this16._dateAdapter.getValidDateOrNull(_this16._dateAdapter.deserialize(control.value));\n\n      var min = _this16._getMinDate();\n\n      return !min || !controlValue || _this16._dateAdapter.compareDate(min, controlValue) <= 0 ? null : {\n        'matDatepickerMin': {\n          'min': min,\n          'actual': controlValue\n        }\n      };\n    };\n    /** The form control validator for the max date. */\n\n\n    this._maxValidator = function (control) {\n      var controlValue = _this16._dateAdapter.getValidDateOrNull(_this16._dateAdapter.deserialize(control.value));\n\n      var max = _this16._getMaxDate();\n\n      return !max || !controlValue || _this16._dateAdapter.compareDate(max, controlValue) >= 0 ? null : {\n        'matDatepickerMax': {\n          'max': max,\n          'actual': controlValue\n        }\n      };\n    };\n    /** Whether the last value set on the input was valid. */\n\n\n    this._lastValueValid = false;\n\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._dateAdapter) {\n        throw createMissingDateImplError('DateAdapter');\n      }\n\n      if (!this._dateFormats) {\n        throw createMissingDateImplError('MAT_DATE_FORMATS');\n      }\n    } // Update the displayed date when the locale changes.\n\n\n    this._localeSubscription = _dateAdapter.localeChanges.subscribe(function () {\n      _this16._assignValueProgrammatically(_this16.value);\n    });\n  }\n  /** The value of the input. */\n\n\n  _createClass(MatDatepickerInputBase, [{\n    key: \"value\",\n    get: function get() {\n      return this._model ? this._getValueFromModel(this._model.selection) : this._pendingValue;\n    },\n    set: function set(value) {\n      this._assignValueProgrammatically(value);\n    }\n    /** Whether the datepicker-input is disabled. */\n\n  }, {\n    key: \"disabled\",\n    get: function get() {\n      return !!this._disabled || this._parentDisabled();\n    },\n    set: function set(value) {\n      var newValue = coerceBooleanProperty(value);\n      var element = this._elementRef.nativeElement;\n\n      if (this._disabled !== newValue) {\n        this._disabled = newValue;\n        this.stateChanges.next(undefined);\n      } // We need to null check the `blur` method, because it's undefined during SSR.\n      // In Ivy static bindings are invoked earlier, before the element is attached to the DOM.\n      // This can cause an error to be thrown in some browsers (IE/Edge) which assert that the\n      // element has been inserted.\n\n\n      if (newValue && this._isInitialized && element.blur) {\n        // Normally, native input elements automatically blur if they turn disabled. This behavior\n        // is problematic, because it would mean that it triggers another change detection cycle,\n        // which then causes a changed after checked error if the input element was focused before.\n        element.blur();\n      }\n    }\n    /** Gets the base validator functions. */\n\n  }, {\n    key: \"_getValidators\",\n    value: function _getValidators() {\n      return [this._parseValidator, this._minValidator, this._maxValidator, this._filterValidator];\n    }\n    /** Registers a date selection model with the input. */\n\n  }, {\n    key: \"_registerModel\",\n    value: function _registerModel(model) {\n      var _this17 = this;\n\n      this._model = model;\n\n      this._valueChangesSubscription.unsubscribe();\n\n      if (this._pendingValue) {\n        this._assignValue(this._pendingValue);\n      }\n\n      this._valueChangesSubscription = this._model.selectionChanged.subscribe(function (event) {\n        if (_this17._shouldHandleChangeEvent(event)) {\n          var _value2 = _this17._getValueFromModel(event.selection);\n\n          _this17._lastValueValid = _this17._isValidValue(_value2);\n\n          _this17._cvaOnChange(_value2);\n\n          _this17._onTouched();\n\n          _this17._formatValue(_value2);\n\n          _this17.dateInput.emit(new MatDatepickerInputEvent(_this17, _this17._elementRef.nativeElement));\n\n          _this17.dateChange.emit(new MatDatepickerInputEvent(_this17, _this17._elementRef.nativeElement));\n        }\n      });\n    }\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      this._isInitialized = true;\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (dateInputsHaveChanged(changes, this._dateAdapter)) {\n        this.stateChanges.next(undefined);\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._valueChangesSubscription.unsubscribe();\n\n      this._localeSubscription.unsubscribe();\n\n      this.stateChanges.complete();\n    }\n    /** @docs-private */\n\n  }, {\n    key: \"registerOnValidatorChange\",\n    value: function registerOnValidatorChange(fn) {\n      this._validatorOnChange = fn;\n    }\n    /** @docs-private */\n\n  }, {\n    key: \"validate\",\n    value: function validate(c) {\n      return this._validator ? this._validator(c) : null;\n    } // Implemented as part of ControlValueAccessor.\n\n  }, {\n    key: \"writeValue\",\n    value: function writeValue(value) {\n      this._assignValueProgrammatically(value);\n    } // Implemented as part of ControlValueAccessor.\n\n  }, {\n    key: \"registerOnChange\",\n    value: function registerOnChange(fn) {\n      this._cvaOnChange = fn;\n    } // Implemented as part of ControlValueAccessor.\n\n  }, {\n    key: \"registerOnTouched\",\n    value: function registerOnTouched(fn) {\n      this._onTouched = fn;\n    } // Implemented as part of ControlValueAccessor.\n\n  }, {\n    key: \"setDisabledState\",\n    value: function setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n    }\n  }, {\n    key: \"_onKeydown\",\n    value: function _onKeydown(event) {\n      var isAltDownArrow = event.altKey && event.keyCode === DOWN_ARROW;\n\n      if (isAltDownArrow && !this._elementRef.nativeElement.readOnly) {\n        this._openPopup();\n\n        event.preventDefault();\n      }\n    }\n  }, {\n    key: \"_onInput\",\n    value: function _onInput(value) {\n      var lastValueWasValid = this._lastValueValid;\n\n      var date = this._dateAdapter.parse(value, this._dateFormats.parse.dateInput);\n\n      this._lastValueValid = this._isValidValue(date);\n      date = this._dateAdapter.getValidDateOrNull(date);\n\n      if (!this._dateAdapter.sameDate(date, this.value)) {\n        this._assignValue(date);\n\n        this._cvaOnChange(date);\n\n        this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n      } else {\n        // Call the CVA change handler for invalid values\n        // since this is what marks the control as dirty.\n        if (value && !this.value) {\n          this._cvaOnChange(date);\n        }\n\n        if (lastValueWasValid !== this._lastValueValid) {\n          this._validatorOnChange();\n        }\n      }\n    }\n  }, {\n    key: \"_onChange\",\n    value: function _onChange() {\n      this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n    }\n    /** Handles blur events on the input. */\n\n  }, {\n    key: \"_onBlur\",\n    value: function _onBlur() {\n      // Reformat the input only if we have a valid value.\n      if (this.value) {\n        this._formatValue(this.value);\n      }\n\n      this._onTouched();\n    }\n    /** Formats a value and sets it on the input element. */\n\n  }, {\n    key: \"_formatValue\",\n    value: function _formatValue(value) {\n      this._elementRef.nativeElement.value = value ? this._dateAdapter.format(value, this._dateFormats.display.dateInput) : '';\n    }\n    /** Assigns a value to the model. */\n\n  }, {\n    key: \"_assignValue\",\n    value: function _assignValue(value) {\n      // We may get some incoming values before the model was\n      // assigned. Save the value so that we can assign it later.\n      if (this._model) {\n        this._assignValueToModel(value);\n\n        this._pendingValue = null;\n      } else {\n        this._pendingValue = value;\n      }\n    }\n    /** Whether a value is considered valid. */\n\n  }, {\n    key: \"_isValidValue\",\n    value: function _isValidValue(value) {\n      return !value || this._dateAdapter.isValid(value);\n    }\n    /**\n     * Checks whether a parent control is disabled. This is in place so that it can be overridden\n     * by inputs extending this one which can be placed inside of a group that can be disabled.\n     */\n\n  }, {\n    key: \"_parentDisabled\",\n    value: function _parentDisabled() {\n      return false;\n    }\n    /** Programmatically assigns a value to the input. */\n\n  }, {\n    key: \"_assignValueProgrammatically\",\n    value: function _assignValueProgrammatically(value) {\n      value = this._dateAdapter.deserialize(value);\n      this._lastValueValid = this._isValidValue(value);\n      value = this._dateAdapter.getValidDateOrNull(value);\n\n      this._assignValue(value);\n\n      this._formatValue(value);\n    }\n    /** Gets whether a value matches the current date filter. */\n\n  }, {\n    key: \"_matchesFilter\",\n    value: function _matchesFilter(value) {\n      var filter = this._getDateFilter();\n\n      return !filter || filter(value);\n    }\n  }]);\n\n  return MatDatepickerInputBase;\n}();\n\nMatDatepickerInputBase.ɵfac = function MatDatepickerInputBase_Factory(t) {\n  return new (t || MatDatepickerInputBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8));\n};\n\nMatDatepickerInputBase.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: MatDatepickerInputBase,\n  inputs: {\n    value: \"value\",\n    disabled: \"disabled\"\n  },\n  outputs: {\n    dateChange: \"dateChange\",\n    dateInput: \"dateInput\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\n\nMatDatepickerInputBase.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: DateAdapter,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_DATE_FORMATS]\n    }]\n  }];\n};\n\nMatDatepickerInputBase.propDecorators = {\n  value: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }],\n  dateChange: [{\n    type: Output\n  }],\n  dateInput: [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerInputBase, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc2.DateAdapter,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_DATE_FORMATS]\n      }]\n    }];\n  }, {\n    dateChange: [{\n      type: Output\n    }],\n    dateInput: [{\n      type: Output\n    }],\n    value: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Checks whether the `SimpleChanges` object from an `ngOnChanges`\n * callback has any changes, accounting for date objects.\n */\n\n\nfunction dateInputsHaveChanged(changes, adapter) {\n  var keys = Object.keys(changes);\n\n  for (var _i = 0, _keys = keys; _i < _keys.length; _i++) {\n    var key = _keys[_i];\n    var _changes$key = changes[key],\n        previousValue = _changes$key.previousValue,\n        currentValue = _changes$key.currentValue;\n\n    if (adapter.isDateInstance(previousValue) && adapter.isDateInstance(currentValue)) {\n      if (!adapter.sameDate(previousValue, currentValue)) {\n        return true;\n      }\n    } else {\n      return true;\n    }\n  }\n\n  return false;\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** @docs-private */\n\n\nvar MAT_DATEPICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(function () {\n    return MatDatepickerInput;\n  }),\n  multi: true\n};\n/** @docs-private */\n\nvar MAT_DATEPICKER_VALIDATORS = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(function () {\n    return MatDatepickerInput;\n  }),\n  multi: true\n};\n/** Directive used to connect an input to a MatDatepicker. */\n\nvar MatDatepickerInput = /*#__PURE__*/function (_MatDatepickerInputBa) {\n  _inherits(MatDatepickerInput, _MatDatepickerInputBa);\n\n  var _super5 = _createSuper(MatDatepickerInput);\n\n  function MatDatepickerInput(elementRef, dateAdapter, dateFormats, _formField) {\n    var _thisSuper, _this18;\n\n    _classCallCheck(this, MatDatepickerInput);\n\n    _this18 = _super5.call(this, elementRef, dateAdapter, dateFormats);\n    _this18._formField = _formField;\n    _this18._closedSubscription = Subscription.EMPTY;\n    _this18._validator = Validators.compose(_get((_thisSuper = _assertThisInitialized(_this18), _getPrototypeOf(MatDatepickerInput.prototype)), \"_getValidators\", _thisSuper).call(_thisSuper));\n    return _this18;\n  }\n  /** The datepicker that this input is associated with. */\n\n\n  _createClass(MatDatepickerInput, [{\n    key: \"matDatepicker\",\n    set: function set(datepicker) {\n      var _this19 = this;\n\n      if (datepicker) {\n        this._datepicker = datepicker;\n        this._closedSubscription = datepicker.closedStream.subscribe(function () {\n          return _this19._onTouched();\n        });\n\n        this._registerModel(datepicker.registerInput(this));\n      }\n    }\n    /** The minimum valid date. */\n\n  }, {\n    key: \"min\",\n    get: function get() {\n      return this._min;\n    },\n    set: function set(value) {\n      var validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n\n      if (!this._dateAdapter.sameDate(validValue, this._min)) {\n        this._min = validValue;\n\n        this._validatorOnChange();\n      }\n    }\n    /** The maximum valid date. */\n\n  }, {\n    key: \"max\",\n    get: function get() {\n      return this._max;\n    },\n    set: function set(value) {\n      var validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n\n      if (!this._dateAdapter.sameDate(validValue, this._max)) {\n        this._max = validValue;\n\n        this._validatorOnChange();\n      }\n    }\n    /** Function that can be used to filter out dates within the datepicker. */\n\n  }, {\n    key: \"dateFilter\",\n    get: function get() {\n      return this._dateFilter;\n    },\n    set: function set(value) {\n      var wasMatchingValue = this._matchesFilter(this.value);\n\n      this._dateFilter = value;\n\n      if (this._matchesFilter(this.value) !== wasMatchingValue) {\n        this._validatorOnChange();\n      }\n    }\n    /**\n     * Gets the element that the datepicker popup should be connected to.\n     * @return The element to connect the popup to.\n     */\n\n  }, {\n    key: \"getConnectedOverlayOrigin\",\n    value: function getConnectedOverlayOrigin() {\n      return this._formField ? this._formField.getConnectedOverlayOrigin() : this._elementRef;\n    }\n    /** Returns the palette used by the input's form field, if any. */\n\n  }, {\n    key: \"getThemePalette\",\n    value: function getThemePalette() {\n      return this._formField ? this._formField.color : undefined;\n    }\n    /** Gets the value at which the calendar should start. */\n\n  }, {\n    key: \"getStartValue\",\n    value: function getStartValue() {\n      return this.value;\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      _get(_getPrototypeOf(MatDatepickerInput.prototype), \"ngOnDestroy\", this).call(this);\n\n      this._closedSubscription.unsubscribe();\n    }\n    /** Opens the associated datepicker. */\n\n  }, {\n    key: \"_openPopup\",\n    value: function _openPopup() {\n      if (this._datepicker) {\n        this._datepicker.open();\n      }\n    }\n  }, {\n    key: \"_getValueFromModel\",\n    value: function _getValueFromModel(modelValue) {\n      return modelValue;\n    }\n  }, {\n    key: \"_assignValueToModel\",\n    value: function _assignValueToModel(value) {\n      if (this._model) {\n        this._model.updateSelection(value, this);\n      }\n    }\n    /** Gets the input's minimum date. */\n\n  }, {\n    key: \"_getMinDate\",\n    value: function _getMinDate() {\n      return this._min;\n    }\n    /** Gets the input's maximum date. */\n\n  }, {\n    key: \"_getMaxDate\",\n    value: function _getMaxDate() {\n      return this._max;\n    }\n    /** Gets the input's date filtering function. */\n\n  }, {\n    key: \"_getDateFilter\",\n    value: function _getDateFilter() {\n      return this._dateFilter;\n    }\n  }, {\n    key: \"_shouldHandleChangeEvent\",\n    value: function _shouldHandleChangeEvent(event) {\n      return event.source !== this;\n    }\n  }]);\n\n  return MatDatepickerInput;\n}(MatDatepickerInputBase);\n\nMatDatepickerInput.ɵfac = function MatDatepickerInput_Factory(t) {\n  return new (t || MatDatepickerInput)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD, 8));\n};\n\nMatDatepickerInput.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: MatDatepickerInput,\n  selectors: [[\"input\", \"matDatepicker\", \"\"]],\n  hostAttrs: [1, \"mat-datepicker-input\"],\n  hostVars: 6,\n  hostBindings: function MatDatepickerInput_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"input\", function MatDatepickerInput_input_HostBindingHandler($event) {\n        return ctx._onInput($event.target.value);\n      })(\"change\", function MatDatepickerInput_change_HostBindingHandler() {\n        return ctx._onChange();\n      })(\"blur\", function MatDatepickerInput_blur_HostBindingHandler() {\n        return ctx._onBlur();\n      })(\"keydown\", function MatDatepickerInput_keydown_HostBindingHandler($event) {\n        return ctx._onKeydown($event);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"disabled\", ctx.disabled);\n      ɵngcc0.ɵɵattribute(\"aria-haspopup\", ctx._datepicker ? \"dialog\" : null)(\"aria-owns\", (ctx._datepicker == null ? null : ctx._datepicker.opened) && ctx._datepicker.id || null)(\"min\", ctx.min ? ctx._dateAdapter.toIso8601(ctx.min) : null)(\"max\", ctx.max ? ctx._dateAdapter.toIso8601(ctx.max) : null)(\"data-mat-calendar\", ctx._datepicker ? ctx._datepicker.id : null);\n    }\n  },\n  inputs: {\n    matDatepicker: \"matDatepicker\",\n    min: \"min\",\n    max: \"max\",\n    dateFilter: [\"matDatepickerFilter\", \"dateFilter\"]\n  },\n  exportAs: [\"matDatepickerInput\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([MAT_DATEPICKER_VALUE_ACCESSOR, MAT_DATEPICKER_VALIDATORS, {\n    provide: MAT_INPUT_VALUE_ACCESSOR,\n    useExisting: MatDatepickerInput\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n\nMatDatepickerInput.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: DateAdapter,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_DATE_FORMATS]\n    }]\n  }, {\n    type: MatFormField,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_FORM_FIELD]\n    }]\n  }];\n};\n\nMatDatepickerInput.propDecorators = {\n  matDatepicker: [{\n    type: Input\n  }],\n  min: [{\n    type: Input\n  }],\n  max: [{\n    type: Input\n  }],\n  dateFilter: [{\n    type: Input,\n    args: ['matDatepickerFilter']\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerInput, [{\n    type: Directive,\n    args: [{\n      selector: 'input[matDatepicker]',\n      providers: [MAT_DATEPICKER_VALUE_ACCESSOR, MAT_DATEPICKER_VALIDATORS, {\n        provide: MAT_INPUT_VALUE_ACCESSOR,\n        useExisting: MatDatepickerInput\n      }],\n      host: {\n        'class': 'mat-datepicker-input',\n        '[attr.aria-haspopup]': '_datepicker ? \"dialog\" : null',\n        '[attr.aria-owns]': '(_datepicker?.opened && _datepicker.id) || null',\n        '[attr.min]': 'min ? _dateAdapter.toIso8601(min) : null',\n        '[attr.max]': 'max ? _dateAdapter.toIso8601(max) : null',\n        // Used by the test harness to tie this input to its calendar. We can't depend on\n        // `aria-owns` for this, because it's only defined while the calendar is open.\n        '[attr.data-mat-calendar]': '_datepicker ? _datepicker.id : null',\n        '[disabled]': 'disabled',\n        '(input)': '_onInput($event.target.value)',\n        '(change)': '_onChange()',\n        '(blur)': '_onBlur()',\n        '(keydown)': '_onKeydown($event)'\n      },\n      exportAs: 'matDatepickerInput'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc2.DateAdapter,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_DATE_FORMATS]\n      }]\n    }, {\n      type: ɵngcc9.MatFormField,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_FORM_FIELD]\n      }]\n    }];\n  }, {\n    matDatepicker: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    dateFilter: [{\n      type: Input,\n      args: ['matDatepickerFilter']\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Can be used to override the icon of a `matDatepickerToggle`. */\n\n\nvar MatDatepickerToggleIcon = /*#__PURE__*/_createClass(function MatDatepickerToggleIcon() {\n  _classCallCheck(this, MatDatepickerToggleIcon);\n});\n\nMatDatepickerToggleIcon.ɵfac = function MatDatepickerToggleIcon_Factory(t) {\n  return new (t || MatDatepickerToggleIcon)();\n};\n\nMatDatepickerToggleIcon.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: MatDatepickerToggleIcon,\n  selectors: [[\"\", \"matDatepickerToggleIcon\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerToggleIcon, [{\n    type: Directive,\n    args: [{\n      selector: '[matDatepickerToggleIcon]'\n    }]\n  }], null, null);\n})();\n\nvar MatDatepickerToggle = /*#__PURE__*/function () {\n  function MatDatepickerToggle(_intl, _changeDetectorRef, defaultTabIndex) {\n    _classCallCheck(this, MatDatepickerToggle);\n\n    this._intl = _intl;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._stateChanges = Subscription.EMPTY;\n    var parsedTabIndex = Number(defaultTabIndex);\n    this.tabIndex = parsedTabIndex || parsedTabIndex === 0 ? parsedTabIndex : null;\n  }\n  /** Whether the toggle button is disabled. */\n\n\n  _createClass(MatDatepickerToggle, [{\n    key: \"disabled\",\n    get: function get() {\n      if (this._disabled === undefined && this.datepicker) {\n        return this.datepicker.disabled;\n      }\n\n      return !!this._disabled;\n    },\n    set: function set(value) {\n      this._disabled = coerceBooleanProperty(value);\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (changes['datepicker']) {\n        this._watchStateChanges();\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._stateChanges.unsubscribe();\n    }\n  }, {\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      this._watchStateChanges();\n    }\n  }, {\n    key: \"_open\",\n    value: function _open(event) {\n      if (this.datepicker && !this.disabled) {\n        this.datepicker.open();\n        event.stopPropagation();\n      }\n    }\n  }, {\n    key: \"_watchStateChanges\",\n    value: function _watchStateChanges() {\n      var _this20 = this;\n\n      var datepickerStateChanged = this.datepicker ? this.datepicker.stateChanges : of();\n      var inputStateChanged = this.datepicker && this.datepicker.datepickerInput ? this.datepicker.datepickerInput.stateChanges : of();\n      var datepickerToggled = this.datepicker ? merge(this.datepicker.openedStream, this.datepicker.closedStream) : of();\n\n      this._stateChanges.unsubscribe();\n\n      this._stateChanges = merge(this._intl.changes, datepickerStateChanged, inputStateChanged, datepickerToggled).subscribe(function () {\n        return _this20._changeDetectorRef.markForCheck();\n      });\n    }\n  }]);\n\n  return MatDatepickerToggle;\n}();\n\nMatDatepickerToggle.ɵfac = function MatDatepickerToggle_Factory(t) {\n  return new (t || MatDatepickerToggle)(ɵngcc0.ɵɵdirectiveInject(MatDatepickerIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵinjectAttribute('tabindex'));\n};\n\nMatDatepickerToggle.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: MatDatepickerToggle,\n  selectors: [[\"mat-datepicker-toggle\"]],\n  contentQueries: function MatDatepickerToggle_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatDatepickerToggleIcon, 1);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._customIcon = _t.first);\n    }\n  },\n  viewQuery: function MatDatepickerToggle_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c2, 1);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._button = _t.first);\n    }\n  },\n  hostAttrs: [1, \"mat-datepicker-toggle\"],\n  hostVars: 8,\n  hostBindings: function MatDatepickerToggle_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function MatDatepickerToggle_click_HostBindingHandler($event) {\n        return ctx._open($event);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"tabindex\", null)(\"data-mat-calendar\", ctx.datepicker ? ctx.datepicker.id : null);\n      ɵngcc0.ɵɵclassProp(\"mat-datepicker-toggle-active\", ctx.datepicker && ctx.datepicker.opened)(\"mat-accent\", ctx.datepicker && ctx.datepicker.color === \"accent\")(\"mat-warn\", ctx.datepicker && ctx.datepicker.color === \"warn\");\n    }\n  },\n  inputs: {\n    tabIndex: \"tabIndex\",\n    disabled: \"disabled\",\n    datepicker: [\"for\", \"datepicker\"],\n    ariaLabel: [\"aria-label\", \"ariaLabel\"],\n    disableRipple: \"disableRipple\"\n  },\n  exportAs: [\"matDatepickerToggle\"],\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c4,\n  decls: 4,\n  vars: 6,\n  consts: [[\"mat-icon-button\", \"\", \"type\", \"button\", 3, \"disabled\", \"disableRipple\"], [\"button\", \"\"], [\"class\", \"mat-datepicker-toggle-default-icon\", \"viewBox\", \"0 0 24 24\", \"width\", \"24px\", \"height\", \"24px\", \"fill\", \"currentColor\", \"focusable\", \"false\", 4, \"ngIf\"], [\"viewBox\", \"0 0 24 24\", \"width\", \"24px\", \"height\", \"24px\", \"fill\", \"currentColor\", \"focusable\", \"false\", 1, \"mat-datepicker-toggle-default-icon\"], [\"d\", \"M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z\"]],\n  template: function MatDatepickerToggle_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef(_c3);\n      ɵngcc0.ɵɵelementStart(0, \"button\", 0, 1);\n      ɵngcc0.ɵɵtemplate(2, MatDatepickerToggle__svg_svg_2_Template, 2, 0, \"svg\", 2);\n      ɵngcc0.ɵɵprojection(3);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"disabled\", ctx.disabled)(\"disableRipple\", ctx.disableRipple);\n      ɵngcc0.ɵɵattribute(\"aria-haspopup\", ctx.datepicker ? \"dialog\" : null)(\"aria-label\", ctx.ariaLabel || ctx._intl.openCalendarLabel)(\"tabindex\", ctx.disabled ? -1 : ctx.tabIndex);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._customIcon);\n    }\n  },\n  directives: [ɵngcc4.MatButton, ɵngcc1.NgIf],\n  styles: [\".mat-form-field-appearance-legacy .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-datepicker-toggle-default-icon{width:1em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-datepicker-toggle-default-icon{display:block;width:1.5em;height:1.5em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-datepicker-toggle-default-icon{margin:auto}.cdk-high-contrast-active .mat-datepicker-toggle-default-icon{color:CanvasText}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nMatDatepickerToggle.ctorParameters = function () {\n  return [{\n    type: MatDatepickerIntl\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: String,\n    decorators: [{\n      type: Attribute,\n      args: ['tabindex']\n    }]\n  }];\n};\n\nMatDatepickerToggle.propDecorators = {\n  datepicker: [{\n    type: Input,\n    args: ['for']\n  }],\n  tabIndex: [{\n    type: Input\n  }],\n  ariaLabel: [{\n    type: Input,\n    args: ['aria-label']\n  }],\n  disabled: [{\n    type: Input\n  }],\n  disableRipple: [{\n    type: Input\n  }],\n  _customIcon: [{\n    type: ContentChild,\n    args: [MatDatepickerToggleIcon]\n  }],\n  _button: [{\n    type: ViewChild,\n    args: ['button']\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerToggle, [{\n    type: Component,\n    args: [{\n      selector: 'mat-datepicker-toggle',\n      template: \"<button\\n  #button\\n  mat-icon-button\\n  type=\\\"button\\\"\\n  [attr.aria-haspopup]=\\\"datepicker ? 'dialog' : null\\\"\\n  [attr.aria-label]=\\\"ariaLabel || _intl.openCalendarLabel\\\"\\n  [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\"\\n  [disabled]=\\\"disabled\\\"\\n  [disableRipple]=\\\"disableRipple\\\">\\n\\n  <svg\\n    *ngIf=\\\"!_customIcon\\\"\\n    class=\\\"mat-datepicker-toggle-default-icon\\\"\\n    viewBox=\\\"0 0 24 24\\\"\\n    width=\\\"24px\\\"\\n    height=\\\"24px\\\"\\n    fill=\\\"currentColor\\\"\\n    focusable=\\\"false\\\">\\n    <path d=\\\"M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z\\\"/>\\n  </svg>\\n\\n  <ng-content select=\\\"[matDatepickerToggleIcon]\\\"></ng-content>\\n</button>\\n\",\n      host: {\n        'class': 'mat-datepicker-toggle',\n        '[attr.tabindex]': 'null',\n        '[class.mat-datepicker-toggle-active]': 'datepicker && datepicker.opened',\n        '[class.mat-accent]': 'datepicker && datepicker.color === \"accent\"',\n        '[class.mat-warn]': 'datepicker && datepicker.color === \"warn\"',\n        // Used by the test harness to tie this toggle to its datepicker.\n        '[attr.data-mat-calendar]': 'datepicker ? datepicker.id : null',\n        // Bind the `click` on the host, rather than the inner `button`, so that we can call\n        // `stopPropagation` on it without affecting the user's `click` handlers. We need to stop\n        // it so that the input doesn't get focused automatically by the form field (See #21836).\n        '(click)': '_open($event)'\n      },\n      exportAs: 'matDatepickerToggle',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".mat-form-field-appearance-legacy .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-datepicker-toggle-default-icon{width:1em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-datepicker-toggle-default-icon{display:block;width:1.5em;height:1.5em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-datepicker-toggle-default-icon{margin:auto}.cdk-high-contrast-active .mat-datepicker-toggle-default-icon{color:CanvasText}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: MatDatepickerIntl\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: String,\n      decorators: [{\n        type: Attribute,\n        args: ['tabindex']\n      }]\n    }];\n  }, {\n    tabIndex: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    datepicker: [{\n      type: Input,\n      args: ['for']\n    }],\n    ariaLabel: [{\n      type: Input,\n      args: ['aria-label']\n    }],\n    disableRipple: [{\n      type: Input\n    }],\n    _customIcon: [{\n      type: ContentChild,\n      args: [MatDatepickerToggleIcon]\n    }],\n    _button: [{\n      type: ViewChild,\n      args: ['button']\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Used to provide the date range input wrapper component\n * to the parts without circular dependencies.\n */\n\n\nvar MAT_DATE_RANGE_INPUT_PARENT = new InjectionToken('MAT_DATE_RANGE_INPUT_PARENT');\n/**\n * Base class for the individual inputs that can be projected inside a `mat-date-range-input`.\n */\n\nvar MatDateRangeInputPartBase = /*#__PURE__*/function (_MatDatepickerInputBa2) {\n  _inherits(MatDateRangeInputPartBase, _MatDatepickerInputBa2);\n\n  var _super6 = _createSuper(MatDateRangeInputPartBase);\n\n  function MatDateRangeInputPartBase(_rangeInput, elementRef, _defaultErrorStateMatcher, _injector, _parentForm, _parentFormGroup, dateAdapter, dateFormats) {\n    var _this21;\n\n    _classCallCheck(this, MatDateRangeInputPartBase);\n\n    _this21 = _super6.call(this, elementRef, dateAdapter, dateFormats);\n    _this21._rangeInput = _rangeInput;\n    _this21._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n    _this21._injector = _injector;\n    _this21._parentForm = _parentForm;\n    _this21._parentFormGroup = _parentFormGroup;\n    return _this21;\n  }\n\n  _createClass(MatDateRangeInputPartBase, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      // We need the date input to provide itself as a `ControlValueAccessor` and a `Validator`, while\n      // injecting its `NgControl` so that the error state is handled correctly. This introduces a\n      // circular dependency, because both `ControlValueAccessor` and `Validator` depend on the input\n      // itself. Usually we can work around it for the CVA, but there's no API to do it for the\n      // validator. We work around it here by injecting the `NgControl` in `ngOnInit`, after\n      // everything has been resolved.\n      var ngControl = this._injector.get(NgControl, null, InjectFlags.Self);\n\n      if (ngControl) {\n        this.ngControl = ngControl;\n      }\n    }\n  }, {\n    key: \"ngDoCheck\",\n    value: function ngDoCheck() {\n      if (this.ngControl) {\n        // We need to re-evaluate this on every change detection cycle, because there are some\n        // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n        // that whatever logic is in here has to be super lean or we risk destroying the performance.\n        this.updateErrorState();\n      }\n    }\n    /** Gets whether the input is empty. */\n\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return this._elementRef.nativeElement.value.length === 0;\n    }\n    /** Gets the placeholder of the input. */\n\n  }, {\n    key: \"_getPlaceholder\",\n    value: function _getPlaceholder() {\n      return this._elementRef.nativeElement.placeholder;\n    }\n    /** Focuses the input. */\n\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      this._elementRef.nativeElement.focus();\n    }\n    /** Handles `input` events on the input element. */\n\n  }, {\n    key: \"_onInput\",\n    value: function _onInput(value) {\n      _get(_getPrototypeOf(MatDateRangeInputPartBase.prototype), \"_onInput\", this).call(this, value);\n\n      this._rangeInput._handleChildValueChange();\n    }\n    /** Opens the datepicker associated with the input. */\n\n  }, {\n    key: \"_openPopup\",\n    value: function _openPopup() {\n      this._rangeInput._openDatepicker();\n    }\n    /** Gets the minimum date from the range input. */\n\n  }, {\n    key: \"_getMinDate\",\n    value: function _getMinDate() {\n      return this._rangeInput.min;\n    }\n    /** Gets the maximum date from the range input. */\n\n  }, {\n    key: \"_getMaxDate\",\n    value: function _getMaxDate() {\n      return this._rangeInput.max;\n    }\n    /** Gets the date filter function from the range input. */\n\n  }, {\n    key: \"_getDateFilter\",\n    value: function _getDateFilter() {\n      return this._rangeInput.dateFilter;\n    }\n  }, {\n    key: \"_parentDisabled\",\n    value: function _parentDisabled() {\n      return this._rangeInput._groupDisabled;\n    }\n  }, {\n    key: \"_shouldHandleChangeEvent\",\n    value: function _shouldHandleChangeEvent(_ref2) {\n      var source = _ref2.source;\n      return source !== this._rangeInput._startInput && source !== this._rangeInput._endInput;\n    }\n  }, {\n    key: \"_assignValueProgrammatically\",\n    value: function _assignValueProgrammatically(value) {\n      _get(_getPrototypeOf(MatDateRangeInputPartBase.prototype), \"_assignValueProgrammatically\", this).call(this, value);\n\n      var opposite = this === this._rangeInput._startInput ? this._rangeInput._endInput : this._rangeInput._startInput;\n      opposite === null || opposite === void 0 ? void 0 : opposite._validatorOnChange();\n    }\n  }]);\n\n  return MatDateRangeInputPartBase;\n}(MatDatepickerInputBase);\n\nMatDateRangeInputPartBase.ɵfac = function MatDateRangeInputPartBase_Factory(t) {\n  return new (t || MatDateRangeInputPartBase)(ɵngcc0.ɵɵdirectiveInject(MAT_DATE_RANGE_INPUT_PARENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ɵngcc10.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc10.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8));\n};\n\nMatDateRangeInputPartBase.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: MatDateRangeInputPartBase,\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n\nMatDateRangeInputPartBase.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [MAT_DATE_RANGE_INPUT_PARENT]\n    }]\n  }, {\n    type: ElementRef\n  }, {\n    type: ErrorStateMatcher\n  }, {\n    type: Injector\n  }, {\n    type: NgForm,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: FormGroupDirective,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: DateAdapter,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_DATE_FORMATS]\n    }]\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDateRangeInputPartBase, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_DATE_RANGE_INPUT_PARENT]\n      }]\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc2.ErrorStateMatcher\n    }, {\n      type: ɵngcc0.Injector\n    }, {\n      type: ɵngcc10.NgForm,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: ɵngcc10.FormGroupDirective,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: ɵngcc2.DateAdapter,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_DATE_FORMATS]\n      }]\n    }];\n  }, null);\n})();\n\nvar _MatDateRangeInputBase = // Needs to be `as any`, because the base class is abstract.\nmixinErrorState(MatDateRangeInputPartBase);\n/** Input for entering the start date in a `mat-date-range-input`. */\n\n\nvar MatStartDate = /*#__PURE__*/function (_MatDateRangeInputBas) {\n  _inherits(MatStartDate, _MatDateRangeInputBas);\n\n  var _super7 = _createSuper(MatStartDate);\n\n  function MatStartDate(rangeInput, elementRef, defaultErrorStateMatcher, injector, parentForm, parentFormGroup, dateAdapter, dateFormats) {\n    var _thisSuper2, _this22;\n\n    _classCallCheck(this, MatStartDate);\n\n    // TODO(crisbeto): this constructor shouldn't be necessary, but ViewEngine doesn't seem to\n    // handle DI correctly when it is inherited from `MatDateRangeInputPartBase`. We can drop this\n    // constructor once ViewEngine is removed.\n    _this22 = _super7.call(this, rangeInput, elementRef, defaultErrorStateMatcher, injector, parentForm, parentFormGroup, dateAdapter, dateFormats);\n    /** Validator that checks that the start date isn't after the end date. */\n\n    _this22._startValidator = function (control) {\n      var start = _this22._dateAdapter.getValidDateOrNull(_this22._dateAdapter.deserialize(control.value));\n\n      var end = _this22._model ? _this22._model.selection.end : null;\n      return !start || !end || _this22._dateAdapter.compareDate(start, end) <= 0 ? null : {\n        'matStartDateInvalid': {\n          'end': end,\n          'actual': start\n        }\n      };\n    };\n\n    _this22._validator = Validators.compose([].concat(_toConsumableArray(_get((_thisSuper2 = _assertThisInitialized(_this22), _getPrototypeOf(MatStartDate.prototype)), \"_getValidators\", _thisSuper2).call(_thisSuper2)), [_this22._startValidator]));\n    return _this22;\n  }\n\n  _createClass(MatStartDate, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      // Normally this happens automatically, but it seems to break if not added explicitly when all\n      // of the criteria below are met:\n      // 1) The class extends a TS mixin.\n      // 2) The application is running in ViewEngine.\n      // 3) The application is being transpiled through tsickle.\n      // This can be removed once google3 is completely migrated to Ivy.\n      _get(_getPrototypeOf(MatStartDate.prototype), \"ngOnInit\", this).call(this);\n    }\n  }, {\n    key: \"ngDoCheck\",\n    value: function ngDoCheck() {\n      // Normally this happens automatically, but it seems to break if not added explicitly when all\n      // of the criteria below are met:\n      // 1) The class extends a TS mixin.\n      // 2) The application is running in ViewEngine.\n      // 3) The application is being transpiled through tsickle.\n      // This can be removed once google3 is completely migrated to Ivy.\n      _get(_getPrototypeOf(MatStartDate.prototype), \"ngDoCheck\", this).call(this);\n    }\n  }, {\n    key: \"_getValueFromModel\",\n    value: function _getValueFromModel(modelValue) {\n      return modelValue.start;\n    }\n  }, {\n    key: \"_shouldHandleChangeEvent\",\n    value: function _shouldHandleChangeEvent(change) {\n      var _a;\n\n      if (!_get(_getPrototypeOf(MatStartDate.prototype), \"_shouldHandleChangeEvent\", this).call(this, change)) {\n        return false;\n      } else {\n        return !((_a = change.oldValue) === null || _a === void 0 ? void 0 : _a.start) ? !!change.selection.start : !change.selection.start || !!this._dateAdapter.compareDate(change.oldValue.start, change.selection.start);\n      }\n    }\n  }, {\n    key: \"_assignValueToModel\",\n    value: function _assignValueToModel(value) {\n      if (this._model) {\n        var range = new DateRange(value, this._model.selection.end);\n\n        this._model.updateSelection(range, this);\n      }\n    }\n  }, {\n    key: \"_formatValue\",\n    value: function _formatValue(value) {\n      _get(_getPrototypeOf(MatStartDate.prototype), \"_formatValue\", this).call(this, value); // Any time the input value is reformatted we need to tell the parent.\n\n\n      this._rangeInput._handleChildValueChange();\n    }\n    /** Gets the value that should be used when mirroring the input's size. */\n\n  }, {\n    key: \"getMirrorValue\",\n    value: function getMirrorValue() {\n      var element = this._elementRef.nativeElement;\n      var value = element.value;\n      return value.length > 0 ? value : element.placeholder;\n    }\n  }]);\n\n  return MatStartDate;\n}(_MatDateRangeInputBase);\n\nMatStartDate.ɵfac = function MatStartDate_Factory(t) {\n  return new (t || MatStartDate)(ɵngcc0.ɵɵdirectiveInject(MAT_DATE_RANGE_INPUT_PARENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ɵngcc10.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc10.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8));\n};\n\nMatStartDate.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: MatStartDate,\n  selectors: [[\"input\", \"matStartDate\", \"\"]],\n  hostAttrs: [\"type\", \"text\", 1, \"mat-start-date\", \"mat-date-range-input-inner\"],\n  hostVars: 6,\n  hostBindings: function MatStartDate_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"input\", function MatStartDate_input_HostBindingHandler($event) {\n        return ctx._onInput($event.target.value);\n      })(\"change\", function MatStartDate_change_HostBindingHandler() {\n        return ctx._onChange();\n      })(\"keydown\", function MatStartDate_keydown_HostBindingHandler($event) {\n        return ctx._onKeydown($event);\n      })(\"blur\", function MatStartDate_blur_HostBindingHandler() {\n        return ctx._onBlur();\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"disabled\", ctx.disabled);\n      ɵngcc0.ɵɵattribute(\"id\", ctx._rangeInput.id)(\"aria-haspopup\", ctx._rangeInput.rangePicker ? \"dialog\" : null)(\"aria-owns\", (ctx._rangeInput.rangePicker == null ? null : ctx._rangeInput.rangePicker.opened) && ctx._rangeInput.rangePicker.id || null)(\"min\", ctx._getMinDate() ? ctx._dateAdapter.toIso8601(ctx._getMinDate()) : null)(\"max\", ctx._getMaxDate() ? ctx._dateAdapter.toIso8601(ctx._getMaxDate()) : null);\n    }\n  },\n  inputs: {\n    errorStateMatcher: \"errorStateMatcher\"\n  },\n  outputs: {\n    dateChange: \"dateChange\",\n    dateInput: \"dateInput\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: MatStartDate,\n    multi: true\n  }, {\n    provide: NG_VALIDATORS,\n    useExisting: MatStartDate,\n    multi: true\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n\nMatStartDate.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [MAT_DATE_RANGE_INPUT_PARENT]\n    }]\n  }, {\n    type: ElementRef\n  }, {\n    type: ErrorStateMatcher\n  }, {\n    type: Injector\n  }, {\n    type: NgForm,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: FormGroupDirective,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: DateAdapter,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_DATE_FORMATS]\n    }]\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatStartDate, [{\n    type: Directive,\n    args: [{\n      selector: 'input[matStartDate]',\n      host: {\n        'class': 'mat-start-date mat-date-range-input-inner',\n        '[disabled]': 'disabled',\n        '(input)': '_onInput($event.target.value)',\n        '(change)': '_onChange()',\n        '(keydown)': '_onKeydown($event)',\n        '[attr.id]': '_rangeInput.id',\n        '[attr.aria-haspopup]': '_rangeInput.rangePicker ? \"dialog\" : null',\n        '[attr.aria-owns]': '(_rangeInput.rangePicker?.opened && _rangeInput.rangePicker.id) || null',\n        '[attr.min]': '_getMinDate() ? _dateAdapter.toIso8601(_getMinDate()) : null',\n        '[attr.max]': '_getMaxDate() ? _dateAdapter.toIso8601(_getMaxDate()) : null',\n        '(blur)': '_onBlur()',\n        'type': 'text'\n      },\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: MatStartDate,\n        multi: true\n      }, {\n        provide: NG_VALIDATORS,\n        useExisting: MatStartDate,\n        multi: true\n      }],\n      // These need to be specified explicitly, because some tooling doesn't\n      // seem to pick them up from the base class. See #20932.\n      outputs: ['dateChange', 'dateInput'],\n      inputs: ['errorStateMatcher']\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_DATE_RANGE_INPUT_PARENT]\n      }]\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc2.ErrorStateMatcher\n    }, {\n      type: ɵngcc0.Injector\n    }, {\n      type: ɵngcc10.NgForm,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: ɵngcc10.FormGroupDirective,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: ɵngcc2.DateAdapter,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_DATE_FORMATS]\n      }]\n    }];\n  }, null);\n})();\n/** Input for entering the end date in a `mat-date-range-input`. */\n\n\nvar MatEndDate = /*#__PURE__*/function (_MatDateRangeInputBas2) {\n  _inherits(MatEndDate, _MatDateRangeInputBas2);\n\n  var _super8 = _createSuper(MatEndDate);\n\n  function MatEndDate(rangeInput, elementRef, defaultErrorStateMatcher, injector, parentForm, parentFormGroup, dateAdapter, dateFormats) {\n    var _thisSuper3, _this23;\n\n    _classCallCheck(this, MatEndDate);\n\n    // TODO(crisbeto): this constructor shouldn't be necessary, but ViewEngine doesn't seem to\n    // handle DI correctly when it is inherited from `MatDateRangeInputPartBase`. We can drop this\n    // constructor once ViewEngine is removed.\n    _this23 = _super8.call(this, rangeInput, elementRef, defaultErrorStateMatcher, injector, parentForm, parentFormGroup, dateAdapter, dateFormats);\n    /** Validator that checks that the end date isn't before the start date. */\n\n    _this23._endValidator = function (control) {\n      var end = _this23._dateAdapter.getValidDateOrNull(_this23._dateAdapter.deserialize(control.value));\n\n      var start = _this23._model ? _this23._model.selection.start : null;\n      return !end || !start || _this23._dateAdapter.compareDate(end, start) >= 0 ? null : {\n        'matEndDateInvalid': {\n          'start': start,\n          'actual': end\n        }\n      };\n    };\n\n    _this23._validator = Validators.compose([].concat(_toConsumableArray(_get((_thisSuper3 = _assertThisInitialized(_this23), _getPrototypeOf(MatEndDate.prototype)), \"_getValidators\", _thisSuper3).call(_thisSuper3)), [_this23._endValidator]));\n    return _this23;\n  }\n\n  _createClass(MatEndDate, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      // Normally this happens automatically, but it seems to break if not added explicitly when all\n      // of the criteria below are met:\n      // 1) The class extends a TS mixin.\n      // 2) The application is running in ViewEngine.\n      // 3) The application is being transpiled through tsickle.\n      // This can be removed once google3 is completely migrated to Ivy.\n      _get(_getPrototypeOf(MatEndDate.prototype), \"ngOnInit\", this).call(this);\n    }\n  }, {\n    key: \"ngDoCheck\",\n    value: function ngDoCheck() {\n      // Normally this happens automatically, but it seems to break if not added explicitly when all\n      // of the criteria below are met:\n      // 1) The class extends a TS mixin.\n      // 2) The application is running in ViewEngine.\n      // 3) The application is being transpiled through tsickle.\n      // This can be removed once google3 is completely migrated to Ivy.\n      _get(_getPrototypeOf(MatEndDate.prototype), \"ngDoCheck\", this).call(this);\n    }\n  }, {\n    key: \"_getValueFromModel\",\n    value: function _getValueFromModel(modelValue) {\n      return modelValue.end;\n    }\n  }, {\n    key: \"_shouldHandleChangeEvent\",\n    value: function _shouldHandleChangeEvent(change) {\n      var _a;\n\n      if (!_get(_getPrototypeOf(MatEndDate.prototype), \"_shouldHandleChangeEvent\", this).call(this, change)) {\n        return false;\n      } else {\n        return !((_a = change.oldValue) === null || _a === void 0 ? void 0 : _a.end) ? !!change.selection.end : !change.selection.end || !!this._dateAdapter.compareDate(change.oldValue.end, change.selection.end);\n      }\n    }\n  }, {\n    key: \"_assignValueToModel\",\n    value: function _assignValueToModel(value) {\n      if (this._model) {\n        var range = new DateRange(this._model.selection.start, value);\n\n        this._model.updateSelection(range, this);\n      }\n    }\n  }, {\n    key: \"_onKeydown\",\n    value: function _onKeydown(event) {\n      // If the user is pressing backspace on an empty end input, move focus back to the start.\n      if (event.keyCode === BACKSPACE && !this._elementRef.nativeElement.value) {\n        this._rangeInput._startInput.focus();\n      }\n\n      _get(_getPrototypeOf(MatEndDate.prototype), \"_onKeydown\", this).call(this, event);\n    }\n  }]);\n\n  return MatEndDate;\n}(_MatDateRangeInputBase);\n\nMatEndDate.ɵfac = function MatEndDate_Factory(t) {\n  return new (t || MatEndDate)(ɵngcc0.ɵɵdirectiveInject(MAT_DATE_RANGE_INPUT_PARENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ɵngcc10.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc10.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8));\n};\n\nMatEndDate.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: MatEndDate,\n  selectors: [[\"input\", \"matEndDate\", \"\"]],\n  hostAttrs: [\"type\", \"text\", 1, \"mat-end-date\", \"mat-date-range-input-inner\"],\n  hostVars: 5,\n  hostBindings: function MatEndDate_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"input\", function MatEndDate_input_HostBindingHandler($event) {\n        return ctx._onInput($event.target.value);\n      })(\"change\", function MatEndDate_change_HostBindingHandler() {\n        return ctx._onChange();\n      })(\"keydown\", function MatEndDate_keydown_HostBindingHandler($event) {\n        return ctx._onKeydown($event);\n      })(\"blur\", function MatEndDate_blur_HostBindingHandler() {\n        return ctx._onBlur();\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"disabled\", ctx.disabled);\n      ɵngcc0.ɵɵattribute(\"aria-haspopup\", ctx._rangeInput.rangePicker ? \"dialog\" : null)(\"aria-owns\", (ctx._rangeInput.rangePicker == null ? null : ctx._rangeInput.rangePicker.opened) && ctx._rangeInput.rangePicker.id || null)(\"min\", ctx._getMinDate() ? ctx._dateAdapter.toIso8601(ctx._getMinDate()) : null)(\"max\", ctx._getMaxDate() ? ctx._dateAdapter.toIso8601(ctx._getMaxDate()) : null);\n    }\n  },\n  inputs: {\n    errorStateMatcher: \"errorStateMatcher\"\n  },\n  outputs: {\n    dateChange: \"dateChange\",\n    dateInput: \"dateInput\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: MatEndDate,\n    multi: true\n  }, {\n    provide: NG_VALIDATORS,\n    useExisting: MatEndDate,\n    multi: true\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n\nMatEndDate.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [MAT_DATE_RANGE_INPUT_PARENT]\n    }]\n  }, {\n    type: ElementRef\n  }, {\n    type: ErrorStateMatcher\n  }, {\n    type: Injector\n  }, {\n    type: NgForm,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: FormGroupDirective,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: DateAdapter,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_DATE_FORMATS]\n    }]\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatEndDate, [{\n    type: Directive,\n    args: [{\n      selector: 'input[matEndDate]',\n      host: {\n        'class': 'mat-end-date mat-date-range-input-inner',\n        '[disabled]': 'disabled',\n        '(input)': '_onInput($event.target.value)',\n        '(change)': '_onChange()',\n        '(keydown)': '_onKeydown($event)',\n        '[attr.aria-haspopup]': '_rangeInput.rangePicker ? \"dialog\" : null',\n        '[attr.aria-owns]': '(_rangeInput.rangePicker?.opened && _rangeInput.rangePicker.id) || null',\n        '[attr.min]': '_getMinDate() ? _dateAdapter.toIso8601(_getMinDate()) : null',\n        '[attr.max]': '_getMaxDate() ? _dateAdapter.toIso8601(_getMaxDate()) : null',\n        '(blur)': '_onBlur()',\n        'type': 'text'\n      },\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: MatEndDate,\n        multi: true\n      }, {\n        provide: NG_VALIDATORS,\n        useExisting: MatEndDate,\n        multi: true\n      }],\n      // These need to be specified explicitly, because some tooling doesn't\n      // seem to pick them up from the base class. See #20932.\n      outputs: ['dateChange', 'dateInput'],\n      inputs: ['errorStateMatcher']\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_DATE_RANGE_INPUT_PARENT]\n      }]\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc2.ErrorStateMatcher\n    }, {\n      type: ɵngcc0.Injector\n    }, {\n      type: ɵngcc10.NgForm,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: ɵngcc10.FormGroupDirective,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: ɵngcc2.DateAdapter,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_DATE_FORMATS]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar nextUniqueId = 0;\n\nvar MatDateRangeInput = /*#__PURE__*/function () {\n  function MatDateRangeInput(_changeDetectorRef, _elementRef, control, _dateAdapter, _formField) {\n    _classCallCheck(this, MatDateRangeInput);\n\n    this._changeDetectorRef = _changeDetectorRef;\n    this._elementRef = _elementRef;\n    this._dateAdapter = _dateAdapter;\n    this._formField = _formField;\n    this._closedSubscription = Subscription.EMPTY;\n    /** Unique ID for the input. */\n\n    this.id = \"mat-date-range-input-\".concat(nextUniqueId++);\n    /** Whether the control is focused. */\n\n    this.focused = false;\n    /** Name of the form control. */\n\n    this.controlType = 'mat-date-range-input';\n    this._groupDisabled = false;\n    /** Value for the `aria-describedby` attribute of the inputs. */\n\n    this._ariaDescribedBy = null;\n    /** Separator text to be shown between the inputs. */\n\n    this.separator = '–';\n    /** Start of the comparison range that should be shown in the calendar. */\n\n    this.comparisonStart = null;\n    /** End of the comparison range that should be shown in the calendar. */\n\n    this.comparisonEnd = null;\n    /** Emits when the input's state has changed. */\n\n    this.stateChanges = new Subject();\n\n    if (!_dateAdapter && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw createMissingDateImplError('DateAdapter');\n    } // The datepicker module can be used both with MDC and non-MDC form fields. We have\n    // to conditionally add the MDC input class so that the range picker looks correctly.\n\n\n    if (_formField === null || _formField === void 0 ? void 0 : _formField._elementRef.nativeElement.classList.contains('mat-mdc-form-field')) {\n      _elementRef.nativeElement.classList.add('mat-mdc-input-element');\n    } // TODO(crisbeto): remove `as any` after #18206 lands.\n\n\n    this.ngControl = control;\n  }\n  /** Current value of the range input. */\n\n\n  _createClass(MatDateRangeInput, [{\n    key: \"value\",\n    get: function get() {\n      return this._model ? this._model.selection : null;\n    }\n    /** Whether the control's label should float. */\n\n  }, {\n    key: \"shouldLabelFloat\",\n    get: function get() {\n      return this.focused || !this.empty;\n    }\n    /**\n     * Implemented as a part of `MatFormFieldControl`.\n     * Set the placeholder attribute on `matStartDate` and `matEndDate`.\n     * @docs-private\n     */\n\n  }, {\n    key: \"placeholder\",\n    get: function get() {\n      var _a, _b;\n\n      var start = ((_a = this._startInput) === null || _a === void 0 ? void 0 : _a._getPlaceholder()) || '';\n      var end = ((_b = this._endInput) === null || _b === void 0 ? void 0 : _b._getPlaceholder()) || '';\n      return start || end ? \"\".concat(start, \" \").concat(this.separator, \" \").concat(end) : '';\n    }\n    /** The range picker that this input is associated with. */\n\n  }, {\n    key: \"rangePicker\",\n    get: function get() {\n      return this._rangePicker;\n    },\n    set: function set(rangePicker) {\n      var _this24 = this;\n\n      if (rangePicker) {\n        this._model = rangePicker.registerInput(this);\n        this._rangePicker = rangePicker;\n\n        this._closedSubscription.unsubscribe();\n\n        this._closedSubscription = rangePicker.closedStream.subscribe(function () {\n          var _a, _b;\n\n          (_a = _this24._startInput) === null || _a === void 0 ? void 0 : _a._onTouched();\n          (_b = _this24._endInput) === null || _b === void 0 ? void 0 : _b._onTouched();\n        });\n\n        this._registerModel(this._model);\n      }\n    }\n    /** Whether the input is required. */\n\n  }, {\n    key: \"required\",\n    get: function get() {\n      return !!this._required;\n    },\n    set: function set(value) {\n      this._required = coerceBooleanProperty(value);\n    }\n    /** Function that can be used to filter out dates within the date range picker. */\n\n  }, {\n    key: \"dateFilter\",\n    get: function get() {\n      return this._dateFilter;\n    },\n    set: function set(value) {\n      var start = this._startInput;\n      var end = this._endInput;\n\n      var wasMatchingStart = start && start._matchesFilter(start.value);\n\n      var wasMatchingEnd = end && end._matchesFilter(start.value);\n\n      this._dateFilter = value;\n\n      if (start && start._matchesFilter(start.value) !== wasMatchingStart) {\n        start._validatorOnChange();\n      }\n\n      if (end && end._matchesFilter(end.value) !== wasMatchingEnd) {\n        end._validatorOnChange();\n      }\n    }\n    /** The minimum valid date. */\n\n  }, {\n    key: \"min\",\n    get: function get() {\n      return this._min;\n    },\n    set: function set(value) {\n      var validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n\n      if (!this._dateAdapter.sameDate(validValue, this._min)) {\n        this._min = validValue;\n\n        this._revalidate();\n      }\n    }\n    /** The maximum valid date. */\n\n  }, {\n    key: \"max\",\n    get: function get() {\n      return this._max;\n    },\n    set: function set(value) {\n      var validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n\n      if (!this._dateAdapter.sameDate(validValue, this._max)) {\n        this._max = validValue;\n\n        this._revalidate();\n      }\n    }\n    /** Whether the input is disabled. */\n\n  }, {\n    key: \"disabled\",\n    get: function get() {\n      return this._startInput && this._endInput ? this._startInput.disabled && this._endInput.disabled : this._groupDisabled;\n    },\n    set: function set(value) {\n      var newValue = coerceBooleanProperty(value);\n\n      if (newValue !== this._groupDisabled) {\n        this._groupDisabled = newValue;\n        this.stateChanges.next(undefined);\n      }\n    }\n    /** Whether the input is in an error state. */\n\n  }, {\n    key: \"errorState\",\n    get: function get() {\n      if (this._startInput && this._endInput) {\n        return this._startInput.errorState || this._endInput.errorState;\n      }\n\n      return false;\n    }\n    /** Whether the datepicker input is empty. */\n\n  }, {\n    key: \"empty\",\n    get: function get() {\n      var startEmpty = this._startInput ? this._startInput.isEmpty() : false;\n      var endEmpty = this._endInput ? this._endInput.isEmpty() : false;\n      return startEmpty && endEmpty;\n    }\n    /**\n     * Implemented as a part of `MatFormFieldControl`.\n     * @docs-private\n     */\n\n  }, {\n    key: \"setDescribedByIds\",\n    value: function setDescribedByIds(ids) {\n      this._ariaDescribedBy = ids.length ? ids.join(' ') : null;\n    }\n    /**\n     * Implemented as a part of `MatFormFieldControl`.\n     * @docs-private\n     */\n\n  }, {\n    key: \"onContainerClick\",\n    value: function onContainerClick() {\n      if (!this.focused && !this.disabled) {\n        if (!this._model || !this._model.selection.start) {\n          this._startInput.focus();\n        } else {\n          this._endInput.focus();\n        }\n      }\n    }\n  }, {\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      var _this25 = this;\n\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        if (!this._startInput) {\n          throw Error('mat-date-range-input must contain a matStartDate input');\n        }\n\n        if (!this._endInput) {\n          throw Error('mat-date-range-input must contain a matEndDate input');\n        }\n      }\n\n      if (this._model) {\n        this._registerModel(this._model);\n      } // We don't need to unsubscribe from this, because we\n      // know that the input streams will be completed on destroy.\n\n\n      merge(this._startInput.stateChanges, this._endInput.stateChanges).subscribe(function () {\n        _this25.stateChanges.next(undefined);\n      });\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (dateInputsHaveChanged(changes, this._dateAdapter)) {\n        this.stateChanges.next(undefined);\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._closedSubscription.unsubscribe();\n\n      this.stateChanges.complete();\n    }\n    /** Gets the date at which the calendar should start. */\n\n  }, {\n    key: \"getStartValue\",\n    value: function getStartValue() {\n      return this.value ? this.value.start : null;\n    }\n    /** Gets the input's theme palette. */\n\n  }, {\n    key: \"getThemePalette\",\n    value: function getThemePalette() {\n      return this._formField ? this._formField.color : undefined;\n    }\n    /** Gets the element to which the calendar overlay should be attached. */\n\n  }, {\n    key: \"getConnectedOverlayOrigin\",\n    value: function getConnectedOverlayOrigin() {\n      return this._formField ? this._formField.getConnectedOverlayOrigin() : this._elementRef;\n    }\n    /** Gets the value that is used to mirror the state input. */\n\n  }, {\n    key: \"_getInputMirrorValue\",\n    value: function _getInputMirrorValue() {\n      return this._startInput ? this._startInput.getMirrorValue() : '';\n    }\n    /** Whether the input placeholders should be hidden. */\n\n  }, {\n    key: \"_shouldHidePlaceholders\",\n    value: function _shouldHidePlaceholders() {\n      return this._startInput ? !this._startInput.isEmpty() : false;\n    }\n    /** Handles the value in one of the child inputs changing. */\n\n  }, {\n    key: \"_handleChildValueChange\",\n    value: function _handleChildValueChange() {\n      this.stateChanges.next(undefined);\n\n      this._changeDetectorRef.markForCheck();\n    }\n    /** Opens the date range picker associated with the input. */\n\n  }, {\n    key: \"_openDatepicker\",\n    value: function _openDatepicker() {\n      if (this._rangePicker) {\n        this._rangePicker.open();\n      }\n    }\n    /** Whether the separate text should be hidden. */\n\n  }, {\n    key: \"_shouldHideSeparator\",\n    value: function _shouldHideSeparator() {\n      return (!this._formField || this._formField.getLabelId() && !this._formField._shouldLabelFloat()) && this.empty;\n    }\n    /** Gets the value for the `aria-labelledby` attribute of the inputs. */\n\n  }, {\n    key: \"_getAriaLabelledby\",\n    value: function _getAriaLabelledby() {\n      var formField = this._formField;\n      return formField && formField._hasFloatingLabel() ? formField._labelId : null;\n    }\n    /** Updates the focused state of the range input. */\n\n  }, {\n    key: \"_updateFocus\",\n    value: function _updateFocus(origin) {\n      this.focused = origin !== null;\n      this.stateChanges.next();\n    }\n    /** Re-runs the validators on the start/end inputs. */\n\n  }, {\n    key: \"_revalidate\",\n    value: function _revalidate() {\n      if (this._startInput) {\n        this._startInput._validatorOnChange();\n      }\n\n      if (this._endInput) {\n        this._endInput._validatorOnChange();\n      }\n    }\n    /** Registers the current date selection model with the start/end inputs. */\n\n  }, {\n    key: \"_registerModel\",\n    value: function _registerModel(model) {\n      if (this._startInput) {\n        this._startInput._registerModel(model);\n      }\n\n      if (this._endInput) {\n        this._endInput._registerModel(model);\n      }\n    }\n  }]);\n\n  return MatDateRangeInput;\n}();\n\nMatDateRangeInput.ɵfac = function MatDateRangeInput_Factory(t) {\n  return new (t || MatDateRangeInput)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc10.ControlContainer, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD, 8));\n};\n\nMatDateRangeInput.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: MatDateRangeInput,\n  selectors: [[\"mat-date-range-input\"]],\n  contentQueries: function MatDateRangeInput_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatStartDate, 1);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatEndDate, 1);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._startInput = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._endInput = _t.first);\n    }\n  },\n  hostAttrs: [\"role\", \"group\", 1, \"mat-date-range-input\"],\n  hostVars: 8,\n  hostBindings: function MatDateRangeInput_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"id\", null)(\"aria-labelledby\", ctx._getAriaLabelledby())(\"aria-describedby\", ctx._ariaDescribedBy)(\"data-mat-calendar\", ctx.rangePicker ? ctx.rangePicker.id : null);\n      ɵngcc0.ɵɵclassProp(\"mat-date-range-input-hide-placeholders\", ctx._shouldHidePlaceholders())(\"mat-date-range-input-required\", ctx.required);\n    }\n  },\n  inputs: {\n    separator: \"separator\",\n    comparisonStart: \"comparisonStart\",\n    comparisonEnd: \"comparisonEnd\",\n    rangePicker: \"rangePicker\",\n    required: \"required\",\n    dateFilter: \"dateFilter\",\n    min: \"min\",\n    max: \"max\",\n    disabled: \"disabled\"\n  },\n  exportAs: [\"matDateRangeInput\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: MatFormFieldControl,\n    useExisting: MatDateRangeInput\n  }, {\n    provide: MAT_DATE_RANGE_INPUT_PARENT,\n    useExisting: MatDateRangeInput\n  }]), ɵngcc0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c6,\n  decls: 9,\n  vars: 4,\n  consts: [[\"cdkMonitorSubtreeFocus\", \"\", 1, \"mat-date-range-input-container\", 3, \"cdkFocusChange\"], [1, \"mat-date-range-input-start-wrapper\"], [\"aria-hidden\", \"true\", 1, \"mat-date-range-input-mirror\"], [1, \"mat-date-range-input-separator\"], [1, \"mat-date-range-input-end-wrapper\"]],\n  template: function MatDateRangeInput_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef(_c5);\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵlistener(\"cdkFocusChange\", function MatDateRangeInput_Template_div_cdkFocusChange_0_listener($event) {\n        return ctx._updateFocus($event);\n      });\n      ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n      ɵngcc0.ɵɵprojection(2);\n      ɵngcc0.ɵɵelementStart(3, \"span\", 2);\n      ɵngcc0.ɵɵtext(4);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(5, \"span\", 3);\n      ɵngcc0.ɵɵtext(6);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(7, \"div\", 4);\n      ɵngcc0.ɵɵprojection(8, 1);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(4);\n      ɵngcc0.ɵɵtextInterpolate(ctx._getInputMirrorValue());\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵclassProp(\"mat-date-range-input-separator-hidden\", ctx._shouldHideSeparator());\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵtextInterpolate(ctx.separator);\n    }\n  },\n  directives: [ɵngcc5.CdkMonitorFocus],\n  styles: [\".mat-date-range-input{display:block;width:100%}.mat-date-range-input-container{display:flex;align-items:center}.mat-date-range-input-separator{transition:opacity 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1);margin:0 4px}.mat-date-range-input-separator-hidden{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;opacity:0;transition:none}.mat-date-range-input-inner{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;vertical-align:bottom;text-align:inherit;-webkit-appearance:none;width:100%}.mat-date-range-input-inner::-ms-clear,.mat-date-range-input-inner::-ms-reveal{display:none}.mat-date-range-input-inner:-moz-ui-invalid{box-shadow:none}.mat-date-range-input-inner::placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner::-moz-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner::-webkit-input-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner:-ms-input-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-hide-placeholder .mat-date-range-input-inner::placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-date-range-input-inner::-moz-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-date-range-input-inner::-webkit-input-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-date-range-input-inner:-ms-input-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-date-range-input-mirror{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;visibility:hidden;white-space:nowrap;display:inline-block;min-width:2px}.mat-date-range-input-start-wrapper{position:relative;overflow:hidden;max-width:calc(50% - 4px)}.mat-date-range-input-start-wrapper .mat-date-range-input-inner{position:absolute;top:0;left:0}.mat-date-range-input-end-wrapper{flex-grow:1;max-width:calc(50% - 4px)}.mat-form-field-type-mat-date-range-input .mat-form-field-infix{width:200px}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nMatDateRangeInput.ctorParameters = function () {\n  return [{\n    type: ChangeDetectorRef\n  }, {\n    type: ElementRef\n  }, {\n    type: ControlContainer,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }]\n  }, {\n    type: DateAdapter,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: MatFormField,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_FORM_FIELD]\n    }]\n  }];\n};\n\nMatDateRangeInput.propDecorators = {\n  rangePicker: [{\n    type: Input\n  }],\n  required: [{\n    type: Input\n  }],\n  dateFilter: [{\n    type: Input\n  }],\n  min: [{\n    type: Input\n  }],\n  max: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }],\n  separator: [{\n    type: Input\n  }],\n  comparisonStart: [{\n    type: Input\n  }],\n  comparisonEnd: [{\n    type: Input\n  }],\n  _startInput: [{\n    type: ContentChild,\n    args: [MatStartDate]\n  }],\n  _endInput: [{\n    type: ContentChild,\n    args: [MatEndDate]\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDateRangeInput, [{\n    type: Component,\n    args: [{\n      selector: 'mat-date-range-input',\n      template: \"<div\\n  class=\\\"mat-date-range-input-container\\\"\\n  cdkMonitorSubtreeFocus\\n  (cdkFocusChange)=\\\"_updateFocus($event)\\\">\\n  <div class=\\\"mat-date-range-input-start-wrapper\\\">\\n    <ng-content select=\\\"input[matStartDate]\\\"></ng-content>\\n    <span\\n      class=\\\"mat-date-range-input-mirror\\\"\\n      aria-hidden=\\\"true\\\">{{_getInputMirrorValue()}}</span>\\n  </div>\\n\\n  <span\\n    class=\\\"mat-date-range-input-separator\\\"\\n    [class.mat-date-range-input-separator-hidden]=\\\"_shouldHideSeparator()\\\">{{separator}}</span>\\n\\n  <div class=\\\"mat-date-range-input-end-wrapper\\\">\\n    <ng-content select=\\\"input[matEndDate]\\\"></ng-content>\\n  </div>\\n</div>\\n\\n\",\n      exportAs: 'matDateRangeInput',\n      host: {\n        'class': 'mat-date-range-input',\n        '[class.mat-date-range-input-hide-placeholders]': '_shouldHidePlaceholders()',\n        '[class.mat-date-range-input-required]': 'required',\n        '[attr.id]': 'null',\n        'role': 'group',\n        '[attr.aria-labelledby]': '_getAriaLabelledby()',\n        '[attr.aria-describedby]': '_ariaDescribedBy',\n        // Used by the test harness to tie this input to its calendar. We can't depend on\n        // `aria-owns` for this, because it's only defined while the calendar is open.\n        '[attr.data-mat-calendar]': 'rangePicker ? rangePicker.id : null'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      providers: [{\n        provide: MatFormFieldControl,\n        useExisting: MatDateRangeInput\n      }, {\n        provide: MAT_DATE_RANGE_INPUT_PARENT,\n        useExisting: MatDateRangeInput\n      }],\n      styles: [\".mat-date-range-input{display:block;width:100%}.mat-date-range-input-container{display:flex;align-items:center}.mat-date-range-input-separator{transition:opacity 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1);margin:0 4px}.mat-date-range-input-separator-hidden{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;opacity:0;transition:none}.mat-date-range-input-inner{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;vertical-align:bottom;text-align:inherit;-webkit-appearance:none;width:100%}.mat-date-range-input-inner::-ms-clear,.mat-date-range-input-inner::-ms-reveal{display:none}.mat-date-range-input-inner:-moz-ui-invalid{box-shadow:none}.mat-date-range-input-inner::placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner::-moz-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner::-webkit-input-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner:-ms-input-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-hide-placeholder .mat-date-range-input-inner::placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-date-range-input-inner::-moz-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-date-range-input-inner::-webkit-input-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-date-range-input-inner:-ms-input-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-date-range-input-mirror{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;visibility:hidden;white-space:nowrap;display:inline-block;min-width:2px}.mat-date-range-input-start-wrapper{position:relative;overflow:hidden;max-width:calc(50% - 4px)}.mat-date-range-input-start-wrapper .mat-date-range-input-inner{position:absolute;top:0;left:0}.mat-date-range-input-end-wrapper{flex-grow:1;max-width:calc(50% - 4px)}.mat-form-field-type-mat-date-range-input .mat-form-field-infix{width:200px}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc10.ControlContainer,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Self\n      }]\n    }, {\n      type: ɵngcc2.DateAdapter,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: ɵngcc9.MatFormField,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_FORM_FIELD]\n      }]\n    }];\n  }, {\n    separator: [{\n      type: Input\n    }],\n    comparisonStart: [{\n      type: Input\n    }],\n    comparisonEnd: [{\n      type: Input\n    }],\n    rangePicker: [{\n      type: Input\n    }],\n    required: [{\n      type: Input\n    }],\n    dateFilter: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    _startInput: [{\n      type: ContentChild,\n      args: [MatStartDate]\n    }],\n    _endInput: [{\n      type: ContentChild,\n      args: [MatEndDate]\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(mmalerba): We use a component instead of a directive here so the user can use implicit\n// template reference variables (e.g. #d vs #d=\"matDateRangePicker\"). We can change this to a\n// directive if angular adds support for `exportAs: '$implicit'` on directives.\n\n/** Component responsible for managing the date range picker popup/dialog. */\n\n\nvar MatDateRangePicker = /*#__PURE__*/function (_MatDatepickerBase2) {\n  _inherits(MatDateRangePicker, _MatDatepickerBase2);\n\n  var _super9 = _createSuper(MatDateRangePicker);\n\n  function MatDateRangePicker() {\n    _classCallCheck(this, MatDateRangePicker);\n\n    return _super9.apply(this, arguments);\n  }\n\n  _createClass(MatDateRangePicker, [{\n    key: \"_forwardContentValues\",\n    value: function _forwardContentValues(instance) {\n      _get(_getPrototypeOf(MatDateRangePicker.prototype), \"_forwardContentValues\", this).call(this, instance);\n\n      var input = this.datepickerInput;\n\n      if (input) {\n        instance.comparisonStart = input.comparisonStart;\n        instance.comparisonEnd = input.comparisonEnd;\n      }\n    }\n  }]);\n\n  return MatDateRangePicker;\n}(MatDatepickerBase);\n\nMatDateRangePicker.ɵfac = function MatDateRangePicker_Factory(t) {\n  return ɵMatDateRangePicker_BaseFactory(t || MatDateRangePicker);\n};\n\nMatDateRangePicker.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: MatDateRangePicker,\n  selectors: [[\"mat-date-range-picker\"]],\n  exportAs: [\"matDateRangePicker\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER, MAT_CALENDAR_RANGE_STRATEGY_PROVIDER, {\n    provide: MatDatepickerBase,\n    useExisting: MatDateRangePicker\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function MatDateRangePicker_Template(rf, ctx) {},\n  encapsulation: 2,\n  changeDetection: 0\n});\nvar ɵMatDateRangePicker_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(MatDateRangePicker);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDateRangePicker, [{\n    type: Component,\n    args: [{\n      selector: 'mat-date-range-picker',\n      template: '',\n      exportAs: 'matDateRangePicker',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      providers: [MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER, MAT_CALENDAR_RANGE_STRATEGY_PROVIDER, {\n        provide: MatDatepickerBase,\n        useExisting: MatDateRangePicker\n      }]\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Button that will close the datepicker and assign the current selection to the data model. */\n\n\nvar MatDatepickerApply = /*#__PURE__*/function () {\n  function MatDatepickerApply(_datepicker) {\n    _classCallCheck(this, MatDatepickerApply);\n\n    this._datepicker = _datepicker;\n  }\n\n  _createClass(MatDatepickerApply, [{\n    key: \"_applySelection\",\n    value: function _applySelection() {\n      this._datepicker._applyPendingSelection();\n\n      this._datepicker.close();\n    }\n  }]);\n\n  return MatDatepickerApply;\n}();\n\nMatDatepickerApply.ɵfac = function MatDatepickerApply_Factory(t) {\n  return new (t || MatDatepickerApply)(ɵngcc0.ɵɵdirectiveInject(MatDatepickerBase));\n};\n\nMatDatepickerApply.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: MatDatepickerApply,\n  selectors: [[\"\", \"matDatepickerApply\", \"\"], [\"\", \"matDateRangePickerApply\", \"\"]],\n  hostBindings: function MatDatepickerApply_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function MatDatepickerApply_click_HostBindingHandler() {\n        return ctx._applySelection();\n      });\n    }\n  }\n});\n\nMatDatepickerApply.ctorParameters = function () {\n  return [{\n    type: MatDatepickerBase\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerApply, [{\n    type: Directive,\n    args: [{\n      selector: '[matDatepickerApply], [matDateRangePickerApply]',\n      host: {\n        '(click)': '_applySelection()'\n      }\n    }]\n  }], function () {\n    return [{\n      type: MatDatepickerBase\n    }];\n  }, null);\n})();\n/** Button that will close the datepicker and discard the current selection. */\n\n\nvar MatDatepickerCancel = /*#__PURE__*/_createClass(function MatDatepickerCancel(_datepicker) {\n  _classCallCheck(this, MatDatepickerCancel);\n\n  this._datepicker = _datepicker;\n});\n\nMatDatepickerCancel.ɵfac = function MatDatepickerCancel_Factory(t) {\n  return new (t || MatDatepickerCancel)(ɵngcc0.ɵɵdirectiveInject(MatDatepickerBase));\n};\n\nMatDatepickerCancel.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: MatDatepickerCancel,\n  selectors: [[\"\", \"matDatepickerCancel\", \"\"], [\"\", \"matDateRangePickerCancel\", \"\"]],\n  hostBindings: function MatDatepickerCancel_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function MatDatepickerCancel_click_HostBindingHandler() {\n        return ctx._datepicker.close();\n      });\n    }\n  }\n});\n\nMatDatepickerCancel.ctorParameters = function () {\n  return [{\n    type: MatDatepickerBase\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerCancel, [{\n    type: Directive,\n    args: [{\n      selector: '[matDatepickerCancel], [matDateRangePickerCancel]',\n      host: {\n        '(click)': '_datepicker.close()'\n      }\n    }]\n  }], function () {\n    return [{\n      type: MatDatepickerBase\n    }];\n  }, null);\n})();\n/**\n * Container that can be used to project a row of action buttons\n * to the bottom of a datepicker or date range picker.\n */\n\n\nvar MatDatepickerActions = /*#__PURE__*/function () {\n  function MatDatepickerActions(_datepicker, _viewContainerRef) {\n    _classCallCheck(this, MatDatepickerActions);\n\n    this._datepicker = _datepicker;\n    this._viewContainerRef = _viewContainerRef;\n  }\n\n  _createClass(MatDatepickerActions, [{\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n\n      this._datepicker.registerActions(this._portal);\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      var _a;\n\n      this._datepicker.removeActions(this._portal); // Needs to be null checked since we initialize it in `ngAfterViewInit`.\n\n\n      if (this._portal && this._portal.isAttached) {\n        (_a = this._portal) === null || _a === void 0 ? void 0 : _a.detach();\n      }\n    }\n  }]);\n\n  return MatDatepickerActions;\n}();\n\nMatDatepickerActions.ɵfac = function MatDatepickerActions_Factory(t) {\n  return new (t || MatDatepickerActions)(ɵngcc0.ɵɵdirectiveInject(MatDatepickerBase), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef));\n};\n\nMatDatepickerActions.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: MatDatepickerActions,\n  selectors: [[\"mat-datepicker-actions\"], [\"mat-date-range-picker-actions\"]],\n  viewQuery: function MatDatepickerActions_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(TemplateRef, 1);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._template = _t.first);\n    }\n  },\n  ngContentSelectors: _c1,\n  decls: 1,\n  vars: 0,\n  consts: [[1, \"mat-datepicker-actions\"]],\n  template: function MatDatepickerActions_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵtemplate(0, MatDatepickerActions_ng_template_0_Template, 2, 0, \"ng-template\");\n    }\n  },\n  styles: [\".mat-datepicker-actions{display:flex;justify-content:flex-end;align-items:center;padding:0 8px 8px 8px}.mat-datepicker-actions .mat-button-base+.mat-button-base{margin-left:8px}[dir=rtl] .mat-datepicker-actions .mat-button-base+.mat-button-base{margin-left:0;margin-right:8px}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nMatDatepickerActions.ctorParameters = function () {\n  return [{\n    type: MatDatepickerBase\n  }, {\n    type: ViewContainerRef\n  }];\n};\n\nMatDatepickerActions.propDecorators = {\n  _template: [{\n    type: ViewChild,\n    args: [TemplateRef]\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerActions, [{\n    type: Component,\n    args: [{\n      selector: 'mat-datepicker-actions, mat-date-range-picker-actions',\n      template: \"\\n    <ng-template>\\n      <div class=\\\"mat-datepicker-actions\\\">\\n        <ng-content></ng-content>\\n      </div>\\n    </ng-template>\\n  \",\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".mat-datepicker-actions{display:flex;justify-content:flex-end;align-items:center;padding:0 8px 8px 8px}.mat-datepicker-actions .mat-button-base+.mat-button-base{margin-left:8px}[dir=rtl] .mat-datepicker-actions .mat-button-base+.mat-button-base{margin-left:0;margin-right:8px}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: MatDatepickerBase\n    }, {\n      type: ɵngcc0.ViewContainerRef\n    }];\n  }, {\n    _template: [{\n      type: ViewChild,\n      args: [TemplateRef]\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar MatDatepickerModule = /*#__PURE__*/_createClass(function MatDatepickerModule() {\n  _classCallCheck(this, MatDatepickerModule);\n});\n\nMatDatepickerModule.ɵfac = function MatDatepickerModule_Factory(t) {\n  return new (t || MatDatepickerModule)();\n};\n\nMatDatepickerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: MatDatepickerModule\n});\nMatDatepickerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  providers: [MatDatepickerIntl, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER],\n  imports: [[CommonModule, MatButtonModule, MatDialogModule, OverlayModule, A11yModule, PortalModule, MatCommonModule], CdkScrollableModule]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatDatepickerModule, {\n    declarations: function declarations() {\n      return [MatCalendar, MatCalendarBody, MatDatepicker, MatDatepickerContent, MatDatepickerInput, MatDatepickerToggle, MatDatepickerToggleIcon, MatMonthView, MatYearView, MatMultiYearView, MatCalendarHeader, MatDateRangeInput, MatStartDate, MatEndDate, MatDateRangePicker, MatDatepickerActions, MatDatepickerCancel, MatDatepickerApply];\n    },\n    imports: function imports() {\n      return [CommonModule, MatButtonModule, MatDialogModule, OverlayModule, A11yModule, PortalModule, MatCommonModule];\n    },\n    exports: function exports() {\n      return [CdkScrollableModule, MatCalendar, MatCalendarBody, MatDatepicker, MatDatepickerContent, MatDatepickerInput, MatDatepickerToggle, MatDatepickerToggleIcon, MatMonthView, MatYearView, MatMultiYearView, MatCalendarHeader, MatDateRangeInput, MatStartDate, MatEndDate, MatDateRangePicker, MatDatepickerActions, MatDatepickerCancel, MatDatepickerApply];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, MatButtonModule, MatDialogModule, OverlayModule, A11yModule, PortalModule, MatCommonModule],\n      exports: [CdkScrollableModule, MatCalendar, MatCalendarBody, MatDatepicker, MatDatepickerContent, MatDatepickerInput, MatDatepickerToggle, MatDatepickerToggleIcon, MatMonthView, MatYearView, MatMultiYearView, MatCalendarHeader, MatDateRangeInput, MatStartDate, MatEndDate, MatDateRangePicker, MatDatepickerActions, MatDatepickerCancel, MatDatepickerApply],\n      declarations: [MatCalendar, MatCalendarBody, MatDatepicker, MatDatepickerContent, MatDatepickerInput, MatDatepickerToggle, MatDatepickerToggleIcon, MatMonthView, MatYearView, MatMultiYearView, MatCalendarHeader, MatDateRangeInput, MatStartDate, MatEndDate, MatDateRangePicker, MatDatepickerActions, MatDatepickerCancel, MatDatepickerApply],\n      providers: [MatDatepickerIntl, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER],\n      entryComponents: [MatDatepickerContent, MatCalendarHeader]\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { DateRange, DefaultMatCalendarRangeStrategy, MAT_DATEPICKER_SCROLL_STRATEGY, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER, MAT_DATEPICKER_VALIDATORS, MAT_DATEPICKER_VALUE_ACCESSOR, MAT_DATE_RANGE_SELECTION_STRATEGY, MAT_RANGE_DATE_SELECTION_MODEL_FACTORY, MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER, MAT_SINGLE_DATE_SELECTION_MODEL_FACTORY, MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER, MatCalendar, MatCalendarBody, MatCalendarCell, MatCalendarHeader, MatDateRangeInput, MatDateRangePicker, MatDateSelectionModel, MatDatepicker, MatDatepickerActions, MatDatepickerApply, MatDatepickerCancel, MatDatepickerContent, MatDatepickerInput, MatDatepickerInputEvent, MatDatepickerIntl, MatDatepickerModule, MatDatepickerToggle, MatDatepickerToggleIcon, MatEndDate, MatMonthView, MatMultiYearView, MatRangeDateSelectionModel, MatSingleDateSelectionModel, MatStartDate, MatYearView, matDatepickerAnimations, yearsPerPage, yearsPerRow, MAT_CALENDAR_RANGE_STRATEGY_PROVIDER_FACTORY as ɵangular_material_src_material_datepicker_datepicker_a, MAT_CALENDAR_RANGE_STRATEGY_PROVIDER as ɵangular_material_src_material_datepicker_datepicker_b, MatDatepickerBase as ɵangular_material_src_material_datepicker_datepicker_c, MatDatepickerInputBase as ɵangular_material_src_material_datepicker_datepicker_d, MAT_DATE_RANGE_INPUT_PARENT as ɵangular_material_src_material_datepicker_datepicker_e }; //# sourceMappingURL=datepicker.js.map","map":{"version":3,"sources":["/Users/volodymyrmaliarov/Projects/ngRxIntro/ngrx-store-intro/node_modules/@angular/material/__ivy_ngcc__/fesm2015/datepicker.js"],"names":["A11yModule","Overlay","OverlayConfig","OverlayModule","ComponentPortal","TemplatePortal","PortalModule","DOCUMENT","CommonModule","ɵɵdefineInjectable","Injectable","EventEmitter","Component","ViewEncapsulation","ChangeDetectionStrategy","ElementRef","NgZone","Input","Output","Optional","SkipSelf","InjectionToken","ChangeDetectorRef","Inject","ViewChild","forwardRef","Directive","ViewContainerRef","Attribute","ContentChild","InjectFlags","Injector","Self","TemplateRef","NgModule","MatButtonModule","MatDialog","MatDialogModule","CdkScrollableModule","DateAdapter","MAT_DATE_FORMATS","mixinColor","ErrorStateMatcher","mixinErrorState","MatCommonModule","Subject","Subscription","merge","of","ESCAPE","hasModifierKey","SPACE","ENTER","PAGE_DOWN","PAGE_UP","END","HOME","DOWN_ARROW","UP_ARROW","RIGHT_ARROW","LEFT_ARROW","BACKSPACE","Directionality","take","startWith","filter","coerceBooleanProperty","coerceStringArray","trigger","state","style","transition","animate","NG_VALUE_ACCESSOR","NG_VALIDATORS","Validators","NgControl","NgForm","FormGroupDirective","ControlContainer","MatFormField","MAT_FORM_FIELD","MatFormFieldControl","MAT_INPUT_VALUE_ACCESSOR","ɵngcc0","ɵngcc1","ɵngcc2","ɵngcc3","ɵngcc4","ɵngcc5","ɵngcc6","ɵngcc7","ɵngcc8","ɵngcc9","ɵngcc10","_c0","MatCalendarBody_tr_0_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ctx_r0","ɵɵnextContext","ɵɵadvance","ɵɵstyleProp","_cellPadding","ɵɵattribute","numCols","ɵɵtextInterpolate1","label","MatCalendarBody_tr_1_td_1_Template","ctx_r4","_firstRowOffset","labelMinRequiredCells","MatCalendarBody_tr_1_td_2_Template","_r9","ɵɵgetCurrentView","ɵɵlistener","MatCalendarBody_tr_1_td_2_Template_td_click_0_listener","$event","ɵɵrestoreView","item_r6","$implicit","ctx_r8","_cellClicked","ɵɵelement","colIndex_r7","index","rowIndex_r3","ctx_r5","_cellWidth","ɵɵclassProp","enabled","_isActiveCell","_isRangeStart","compareValue","_isRangeEnd","_isInRange","_isComparisonBridgeStart","_isComparisonBridgeEnd","_isComparisonStart","_isComparisonEnd","_isInComparisonRange","_isPreviewStart","_isPreviewEnd","_isInPreview","ɵɵproperty","cssClasses","ariaLabel","_isSelected","_isComparisonIdentical","todayValue","displayValue","MatCalendarBody_tr_1_Template","ɵɵtemplate","row_r2","ctx_r1","MatMonthView_th_3_Template","day_r1","long","ɵɵtextInterpolate","narrow","_c1","MatCalendar_ng_template_0_Template","MatCalendar_mat_month_view_2_Template","_r5","MatCalendar_mat_month_view_2_Template_mat_month_view_activeDateChange_0_listener","activeDate","MatCalendar_mat_month_view_2_Template_mat_month_view__userSelection_0_listener","ctx_r6","_dateSelected","selected","dateFilter","maxDate","minDate","dateClass","comparisonStart","comparisonEnd","MatCalendar_mat_year_view_3_Template","_r8","MatCalendar_mat_year_view_3_Template_mat_year_view_activeDateChange_0_listener","ctx_r7","MatCalendar_mat_year_view_3_Template_mat_year_view_monthSelected_0_listener","ctx_r9","_monthSelectedInYearView","MatCalendar_mat_year_view_3_Template_mat_year_view_selectedChange_0_listener","ctx_r10","_goToDateInView","ctx_r2","MatCalendar_mat_multi_year_view_4_Template","_r12","MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_activeDateChange_0_listener","ctx_r11","MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_yearSelected_0_listener","ctx_r13","_yearSelectedInMultiYearView","MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_selectedChange_0_listener","ctx_r14","ctx_r3","MatDatepickerContent_ng_template_2_Template","_c2","MatDatepickerToggle__svg_svg_2_Template","ɵɵnamespaceSVG","_c3","_c4","_c5","_c6","MatDatepickerActions_ng_template_0_Template","ɵɵprojection","createMissingDateImplError","provider","Error","MatDatepickerIntl","changes","calendarLabel","openCalendarLabel","closeCalendarLabel","prevMonthLabel","nextMonthLabel","prevYearLabel","nextYearLabel","prevMultiYearLabel","nextMultiYearLabel","switchToMonthViewLabel","switchToMultiYearViewLabel","start","end","ɵfac","MatDatepickerIntl_Factory","t","ɵprov","factory","token","providedIn","ngDevMode","ɵsetClassMetadata","type","args","MatCalendarCell","value","rawValue","MatCalendarBody","_elementRef","_ngZone","activeCell","isRange","cellAspectRatio","previewStart","previewEnd","selectedValueChange","previewChange","_enterHandler","event","_skipNextFocus","target","cell","_getCellFromElement","run","emit","_leaveHandler","isTableCell","runOutsideAngular","element","nativeElement","addEventListener","startValue","endValue","columnChanges","rows","length","removeEventListener","rowIndex","colIndex","cellNumber","movePreview","onStable","pipe","subscribe","querySelector","focus","isStart","isEnd","isInRange","previousCell","previousRow","nextCell","nextRow","parentNode","row","getAttribute","col","parseInt","MatCalendarBody_Factory","ɵɵdirectiveInject","ɵcmp","ɵɵdefineComponent","selectors","hostAttrs","inputs","outputs","exportAs","features","ɵɵNgOnChangesFeature","attrs","decls","vars","consts","template","MatCalendarBody_Template","directives","NgIf","NgForOf","NgClass","styles","encapsulation","changeDetection","ctorParameters","propDecorators","selector","host","None","OnPush","node","nodeName","rangeEnabled","DateRange","MatDateSelectionModel","selection","_adapter","_selectionChanged","selectionChanged","source","oldValue","next","complete","date","isDateInstance","isValid","MatDateSelectionModel_Factory","ɵɵinject","undefined","MatSingleDateSelectionModel","adapter","_isValidDateInstance","clone","updateSelection","MatSingleDateSelectionModel_Factory","MatRangeDateSelectionModel","compareDate","MatRangeDateSelectionModel_Factory","MAT_SINGLE_DATE_SELECTION_MODEL_FACTORY","parent","MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER","provide","deps","useFactory","MAT_RANGE_DATE_SELECTION_MODEL_FACTORY","MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER","MAT_DATE_RANGE_SELECTION_STRATEGY","DefaultMatCalendarRangeStrategy","_dateAdapter","currentRange","DefaultMatCalendarRangeStrategy_Factory","MAT_CALENDAR_RANGE_STRATEGY_PROVIDER_FACTORY","MAT_CALENDAR_RANGE_STRATEGY_PROVIDER","DAYS_PER_WEEK","MatMonthView","_changeDetectorRef","_dateFormats","_dir","_rangeStrategy","_rerenderSubscription","EMPTY","selectedChange","_userSelection","activeDateChange","_activeDate","today","oldActiveDate","validDate","getValidDateOrNull","deserialize","clampDate","_hasSameMonthAndYear","_init","_selected","_setRanges","_minDate","_maxDate","localeChanges","comparisonChange","firstChange","unsubscribe","selectedYear","getYear","selectedMonth","getMonth","selectedDate","createDate","rangeStartDate","rangeEndDate","_getDateInCurrentMonth","_previewStart","_previewEnd","markForCheck","isRtl","_isRtl","keyCode","addCalendarDays","getDate","getNumDaysInMonth","altKey","addCalendarYears","addCalendarMonths","preventDefault","stopPropagation","_focusActiveCell","_todayDate","_getCellCompareValue","_monthLabel","display","monthLabel","format","getMonthNames","toLocaleUpperCase","firstOfMonth","_firstWeekOffset","getDayOfWeek","getFirstDayOfWeek","_initWeekdays","_createWeekCells","_matCalendarBody","previewRange","createPreview","detectChanges","firstDayOfWeek","narrowWeekdays","getDayOfWeekNames","longWeekdays","weekdays","map","i","_weekdays","slice","concat","daysInMonth","dateNames","getDateNames","_weeks","push","_shouldEnableDate","dateA11yLabel","cellClasses","d1","d2","year","month","day","Date","getTime","selectedValue","_rangeStart","_rangeEnd","_isRange","_comparisonRangeStart","_comparisonRangeEnd","MatMonthView_Factory","viewQuery","MatMonthView_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","MatMonthView_Template","MatMonthView_Template_tbody_selectedValueChange_6_listener","MatMonthView_Template_tbody_previewChange_6_listener","_previewChanged","MatMonthView_Template_tbody_keydown_6_listener","_handleCalendarBodyKeydown","decorators","yearsPerPage","yearsPerRow","MatMultiYearView","yearSelected","isSameMultiYearView","_setSelectedYear","_todayYear","activeYear","minYearOfPage","getActiveOffset","_years","_createCellForYear","Math","min","_yearSelected","yearName","getYearName","_shouldEnableYear","firstOfYear","_selectedYear","MatMultiYearView_Factory","MatMultiYearView_Query","MatMultiYearView_Template","MatMultiYearView_Template_tbody_selectedValueChange_4_listener","MatMultiYearView_Template_tbody_keydown_4_listener","_getActiveCell","dateAdapter","date1","date2","year1","year2","startingYear","getStartingYear","floor","euclideanModulo","maxYear","a","b","MatYearView","monthSelected","_setSelectedMonth","normalizedDate","_monthSelected","_todayMonth","_getMonthInCurrentYear","_yearLabel","monthNames","_months","_createCellForMonth","monthName","monthYearA11yLabel","_shouldEnableMonth","_isYearAndMonthAfterMaxDate","_isYearAndMonthBeforeMinDate","maxMonth","minYear","minMonth","_selectedMonth","MatYearView_Factory","MatYearView_Query","MatYearView_Template","MatYearView_Template_tbody_selectedValueChange_4_listener","MatYearView_Template_tbody_keydown_4_listener","uniqueId","MatCalendarHeader","_intl","calendar","changeDetectorRef","_buttonDescriptionId","stateChanges","currentView","monthYearLabel","maxYearOfPage","minYearName","maxYearName","formatYearRange","_isSameView","MatCalendarHeader_Factory","MatCalendar","ngContentSelectors","MatCalendarHeader_Template","ɵɵprojectionDef","MatCalendarHeader_Template_button_click_2_listener","currentPeriodClicked","MatCalendarHeader_Template_button_click_8_listener","previousClicked","MatCalendarHeader_Template_button_click_9_listener","nextClicked","periodButtonLabel","periodButtonText","previousEnabled","prevButtonLabel","nextEnabled","nextButtonLabel","MatButton","CdkAriaLive","_moveFocusOnNextTick","startView","viewChanged","_intlChanges","_startAt","_clampedActiveDate","_currentView","viewChangedResult","_calendarHeaderPortal","headerComponent","startAt","focusActiveCell","change","view","_getCurrentViewComponent","monthView","yearView","multiYearView","sameDate","normalizedYear","normalizedMonth","MatCalendar_Factory","MatCalendar_Query","ɵɵProvidersFeature","MatCalendar_Template","CdkPortalOutlet","CdkMonitorFocus","NgSwitch","NgSwitchCase","providers","matDatepickerAnimations","transformPanel","opacity","transform","fadeInCalendar","datepickerUid","MAT_DATEPICKER_SCROLL_STRATEGY","MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY","overlay","scrollStrategies","reposition","MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER","MatDatepickerContentBase","_MatDatepickerContentMixinBase","MatDatepickerContent","elementRef","_globalModel","_rangeSelectionStrategy","intl","_subscriptions","_animationState","_animationDone","_actionsPortal","_closeButtonText","_model","add","datepicker","_calendar","newSelection","selectionFinished","isComplete","close","MatDatepickerContent_Factory","MatDatepickerContent_Query","hostVars","hostBindings","MatDatepickerContent_HostBindings","ɵɵsyntheticHostListener","MatDatepickerContent_animation_transformPanel_done_HostBindingHandler","ɵɵsyntheticHostProperty","touchUi","color","ɵɵInheritDefinitionFeature","MatDatepickerContent_Template","MatDatepickerContent_Template_mat_calendar_yearSelected_1_listener","_selectYear","MatDatepickerContent_Template_mat_calendar_monthSelected_1_listener","_selectMonth","MatDatepickerContent_Template_mat_calendar_viewChanged_1_listener","_viewChanged","MatDatepickerContent_Template_mat_calendar__userSelection_1_listener","_handleUserSelection","MatDatepickerContent_Template_button_focus_3_listener","_closeButtonFocused","MatDatepickerContent_Template_button_blur_3_listener","MatDatepickerContent_Template_button_click_3_listener","id","panelClass","_getMinDate","_getMaxDate","_getDateFilter","calendarHeaderComponent","_getSelected","CdkTrapFocus","data","animation","animations","MatDatepickerBase","_dialog","_overlay","_viewContainerRef","scrollStrategy","_document","_inputStateChanges","_touchUi","xPosition","yPosition","_restoreFocus","openedStream","closedStream","_opened","_focusedElementBeforeOpen","_backdropHarnessClass","_scrollStrategy","datepickerInput","getStartValue","_color","getThemePalette","_disabled","disabled","newValue","_panelClass","open","max","positionChange","_popupRef","_setConnectedPositions","getConfig","positionStrategy","opened","updatePosition","_destroyPopup","input","portal","activeElement","_openAsDialog","_openAsPopup","_popupComponentRef","instance","_startExitAnimation","_dialogRef","completeClose","setTimeout","_a","_b","componentInstance","_applyPendingSelection","direction","viewContainerRef","hasBackdrop","disableClose","backdropClass","width","height","minWidth","minHeight","maxWidth","maxHeight","position","autoFocus","restoreFocus","afterClosed","_forwardContentValues","_createPopup","attach","flexibleConnectedTo","getConnectedOverlayOrigin","withTransformOriginOn","withFlexibleDimensions","withViewportMargin","withLockedPosition","overlayConfig","create","overlayElement","setAttribute","backdropClick","detachments","keydownEvents","dispose","strategy","primaryX","secondaryX","primaryY","secondaryY","withPositions","originX","originY","overlayX","overlayY","MatDatepickerBase_Factory","ɵdir","ɵɵdefineDirective","MatDatepicker","MatDatepicker_Factory","ɵMatDatepicker_BaseFactory","useExisting","MatDatepicker_Template","ɵɵgetInheritedFactory","MatDatepickerInputEvent","targetElement","MatDatepickerInputBase","dateChange","dateInput","_onTouched","_validatorOnChange","_cvaOnChange","_valueChangesSubscription","_localeSubscription","_parseValidator","_lastValueValid","_filterValidator","control","controlValue","_matchesFilter","_minValidator","_maxValidator","_assignValueProgrammatically","_getValueFromModel","_pendingValue","_parentDisabled","_isInitialized","blur","model","_assignValue","_shouldHandleChangeEvent","_isValidValue","_formatValue","dateInputsHaveChanged","fn","c","_validator","isDisabled","isAltDownArrow","readOnly","_openPopup","lastValueWasValid","parse","_assignValueToModel","MatDatepickerInputBase_Factory","keys","Object","key","previousValue","currentValue","MAT_DATEPICKER_VALUE_ACCESSOR","MatDatepickerInput","multi","MAT_DATEPICKER_VALIDATORS","dateFormats","_formField","_closedSubscription","compose","_datepicker","_registerModel","registerInput","_min","validValue","_max","_dateFilter","wasMatchingValue","modelValue","MatDatepickerInput_Factory","MatDatepickerInput_HostBindings","MatDatepickerInput_input_HostBindingHandler","_onInput","MatDatepickerInput_change_HostBindingHandler","_onChange","MatDatepickerInput_blur_HostBindingHandler","_onBlur","MatDatepickerInput_keydown_HostBindingHandler","_onKeydown","ɵɵhostProperty","toIso8601","matDatepicker","MatDatepickerToggleIcon","MatDatepickerToggleIcon_Factory","MatDatepickerToggle","defaultTabIndex","_stateChanges","parsedTabIndex","Number","tabIndex","_watchStateChanges","datepickerStateChanged","inputStateChanged","datepickerToggled","MatDatepickerToggle_Factory","ɵɵinjectAttribute","contentQueries","MatDatepickerToggle_ContentQueries","dirIndex","ɵɵcontentQuery","_customIcon","MatDatepickerToggle_Query","_button","MatDatepickerToggle_HostBindings","MatDatepickerToggle_click_HostBindingHandler","_open","disableRipple","MatDatepickerToggle_Template","String","MAT_DATE_RANGE_INPUT_PARENT","MatDateRangeInputPartBase","_rangeInput","_defaultErrorStateMatcher","_injector","_parentForm","_parentFormGroup","ngControl","get","updateErrorState","placeholder","_handleChildValueChange","_openDatepicker","_groupDisabled","_startInput","_endInput","opposite","MatDateRangeInputPartBase_Factory","_MatDateRangeInputBase","MatStartDate","rangeInput","defaultErrorStateMatcher","injector","parentForm","parentFormGroup","_startValidator","range","MatStartDate_Factory","MatStartDate_HostBindings","MatStartDate_input_HostBindingHandler","MatStartDate_change_HostBindingHandler","MatStartDate_keydown_HostBindingHandler","MatStartDate_blur_HostBindingHandler","rangePicker","errorStateMatcher","MatEndDate","_endValidator","MatEndDate_Factory","MatEndDate_HostBindings","MatEndDate_input_HostBindingHandler","MatEndDate_change_HostBindingHandler","MatEndDate_keydown_HostBindingHandler","MatEndDate_blur_HostBindingHandler","nextUniqueId","MatDateRangeInput","focused","controlType","_ariaDescribedBy","separator","classList","contains","empty","_getPlaceholder","_rangePicker","_required","wasMatchingStart","wasMatchingEnd","_revalidate","errorState","startEmpty","isEmpty","endEmpty","ids","join","getMirrorValue","getLabelId","_shouldLabelFloat","formField","_hasFloatingLabel","_labelId","origin","MatDateRangeInput_Factory","MatDateRangeInput_ContentQueries","MatDateRangeInput_HostBindings","_getAriaLabelledby","_shouldHidePlaceholders","required","MatDateRangeInput_Template","MatDateRangeInput_Template_div_cdkFocusChange_0_listener","_updateFocus","_getInputMirrorValue","_shouldHideSeparator","MatDateRangePicker","MatDateRangePicker_Factory","ɵMatDateRangePicker_BaseFactory","MatDateRangePicker_Template","MatDatepickerApply","MatDatepickerApply_Factory","MatDatepickerApply_HostBindings","MatDatepickerApply_click_HostBindingHandler","_applySelection","MatDatepickerCancel","MatDatepickerCancel_Factory","MatDatepickerCancel_HostBindings","MatDatepickerCancel_click_HostBindingHandler","MatDatepickerActions","_portal","_template","registerActions","removeActions","isAttached","detach","MatDatepickerActions_Factory","MatDatepickerActions_Query","MatDatepickerActions_Template","MatDatepickerModule","MatDatepickerModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","ngJitMode","ɵɵsetNgModuleScope","declarations","exports","entryComponents","ɵangular_material_src_material_datepicker_datepicker_a","ɵangular_material_src_material_datepicker_datepicker_b","ɵangular_material_src_material_datepicker_datepicker_c","ɵangular_material_src_material_datepicker_datepicker_d","ɵangular_material_src_material_datepicker_datepicker_e"],"mappings":"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","sourcesContent":["import { A11yModule } from '@angular/cdk/a11y';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { ComponentPortal, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { ɵɵdefineInjectable, Injectable, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, NgZone, Input, Output, Optional, SkipSelf, InjectionToken, ChangeDetectorRef, Inject, ViewChild, forwardRef, Directive, ViewContainerRef, Attribute, ContentChild, InjectFlags, Injector, Self, TemplateRef, NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialog, MatDialogModule } from '@angular/material/dialog';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { DateAdapter, MAT_DATE_FORMATS, mixinColor, ErrorStateMatcher, mixinErrorState, MatCommonModule } from '@angular/material/core';\nimport { Subject, Subscription, merge, of } from 'rxjs';\nimport { ESCAPE, hasModifierKey, SPACE, ENTER, PAGE_DOWN, PAGE_UP, END, HOME, DOWN_ARROW, UP_ARROW, RIGHT_ARROW, LEFT_ARROW, BACKSPACE } from '@angular/cdk/keycodes';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { take, startWith, filter } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceStringArray } from '@angular/cdk/coercion';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, Validators, NgControl, NgForm, FormGroupDirective, ControlContainer } from '@angular/forms';\nimport { MatFormField, MAT_FORM_FIELD, MatFormFieldControl } from '@angular/material/form-field';\nimport { MAT_INPUT_VALUE_ACCESSOR } from '@angular/material/input';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/material/button';\nimport * as ɵngcc5 from '@angular/cdk/a11y';\nimport * as ɵngcc6 from '@angular/cdk/portal';\nimport * as ɵngcc7 from '@angular/material/dialog';\nimport * as ɵngcc8 from '@angular/cdk/overlay';\nimport * as ɵngcc9 from '@angular/material/form-field';\nimport * as ɵngcc10 from '@angular/forms';\n\nconst _c0 = [\"mat-calendar-body\", \"\"];\nfunction MatCalendarBody_tr_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tr\", 2);\n    ɵngcc0.ɵɵelementStart(1, \"td\", 3);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵstyleProp(\"padding-top\", ctx_r0._cellPadding)(\"padding-bottom\", ctx_r0._cellPadding);\n    ɵngcc0.ɵɵattribute(\"colspan\", ctx_r0.numCols);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r0.label, \" \");\n} }\nfunction MatCalendarBody_tr_1_td_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 7);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵstyleProp(\"padding-top\", ctx_r4._cellPadding)(\"padding-bottom\", ctx_r4._cellPadding);\n    ɵngcc0.ɵɵattribute(\"colspan\", ctx_r4._firstRowOffset);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r4._firstRowOffset >= ctx_r4.labelMinRequiredCells ? ctx_r4.label : \"\", \" \");\n} }\nfunction MatCalendarBody_tr_1_td_2_Template(rf, ctx) { if (rf & 1) {\n    const _r9 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"td\", 8);\n    ɵngcc0.ɵɵlistener(\"click\", function MatCalendarBody_tr_1_td_2_Template_td_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const item_r6 = ctx.$implicit; const ctx_r8 = ɵngcc0.ɵɵnextContext(2); return ctx_r8._cellClicked(item_r6, $event); });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 9);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(3, \"div\", 10);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const item_r6 = ctx.$implicit;\n    const colIndex_r7 = ctx.index;\n    const rowIndex_r3 = ɵngcc0.ɵɵnextContext().index;\n    const ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"width\", ctx_r5._cellWidth)(\"padding-top\", ctx_r5._cellPadding)(\"padding-bottom\", ctx_r5._cellPadding);\n    ɵngcc0.ɵɵclassProp(\"mat-calendar-body-disabled\", !item_r6.enabled)(\"mat-calendar-body-active\", ctx_r5._isActiveCell(rowIndex_r3, colIndex_r7))(\"mat-calendar-body-range-start\", ctx_r5._isRangeStart(item_r6.compareValue))(\"mat-calendar-body-range-end\", ctx_r5._isRangeEnd(item_r6.compareValue))(\"mat-calendar-body-in-range\", ctx_r5._isInRange(item_r6.compareValue))(\"mat-calendar-body-comparison-bridge-start\", ctx_r5._isComparisonBridgeStart(item_r6.compareValue, rowIndex_r3, colIndex_r7))(\"mat-calendar-body-comparison-bridge-end\", ctx_r5._isComparisonBridgeEnd(item_r6.compareValue, rowIndex_r3, colIndex_r7))(\"mat-calendar-body-comparison-start\", ctx_r5._isComparisonStart(item_r6.compareValue))(\"mat-calendar-body-comparison-end\", ctx_r5._isComparisonEnd(item_r6.compareValue))(\"mat-calendar-body-in-comparison-range\", ctx_r5._isInComparisonRange(item_r6.compareValue))(\"mat-calendar-body-preview-start\", ctx_r5._isPreviewStart(item_r6.compareValue))(\"mat-calendar-body-preview-end\", ctx_r5._isPreviewEnd(item_r6.compareValue))(\"mat-calendar-body-in-preview\", ctx_r5._isInPreview(item_r6.compareValue));\n    ɵngcc0.ɵɵproperty(\"ngClass\", item_r6.cssClasses)(\"tabindex\", ctx_r5._isActiveCell(rowIndex_r3, colIndex_r7) ? 0 : -1);\n    ɵngcc0.ɵɵattribute(\"data-mat-row\", rowIndex_r3)(\"data-mat-col\", colIndex_r7)(\"aria-label\", item_r6.ariaLabel)(\"aria-disabled\", !item_r6.enabled || null)(\"aria-selected\", ctx_r5._isSelected(item_r6.compareValue));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"mat-calendar-body-selected\", ctx_r5._isSelected(item_r6.compareValue))(\"mat-calendar-body-comparison-identical\", ctx_r5._isComparisonIdentical(item_r6.compareValue))(\"mat-calendar-body-today\", ctx_r5.todayValue === item_r6.compareValue);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", item_r6.displayValue, \" \");\n} }\nfunction MatCalendarBody_tr_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tr\", 4);\n    ɵngcc0.ɵɵtemplate(1, MatCalendarBody_tr_1_td_1_Template, 2, 6, \"td\", 5);\n    ɵngcc0.ɵɵtemplate(2, MatCalendarBody_tr_1_td_2_Template, 4, 46, \"td\", 6);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const row_r2 = ctx.$implicit;\n    const rowIndex_r3 = ctx.index;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", rowIndex_r3 === 0 && ctx_r1._firstRowOffset);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", row_r2);\n} }\nfunction MatMonthView_th_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\", 5);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const day_r1 = ctx.$implicit;\n    ɵngcc0.ɵɵattribute(\"aria-label\", day_r1.long);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(day_r1.narrow);\n} }\nconst _c1 = [\"*\"];\nfunction MatCalendar_ng_template_0_Template(rf, ctx) { }\nfunction MatCalendar_mat_month_view_2_Template(rf, ctx) { if (rf & 1) {\n    const _r5 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-month-view\", 5);\n    ɵngcc0.ɵɵlistener(\"activeDateChange\", function MatCalendar_mat_month_view_2_Template_mat_month_view_activeDateChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4.activeDate = $event; })(\"_userSelection\", function MatCalendar_mat_month_view_2_Template_mat_month_view__userSelection_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r6 = ɵngcc0.ɵɵnextContext(); return ctx_r6._dateSelected($event); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"activeDate\", ctx_r1.activeDate)(\"selected\", ctx_r1.selected)(\"dateFilter\", ctx_r1.dateFilter)(\"maxDate\", ctx_r1.maxDate)(\"minDate\", ctx_r1.minDate)(\"dateClass\", ctx_r1.dateClass)(\"comparisonStart\", ctx_r1.comparisonStart)(\"comparisonEnd\", ctx_r1.comparisonEnd);\n} }\nfunction MatCalendar_mat_year_view_3_Template(rf, ctx) { if (rf & 1) {\n    const _r8 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-year-view\", 6);\n    ɵngcc0.ɵɵlistener(\"activeDateChange\", function MatCalendar_mat_year_view_3_Template_mat_year_view_activeDateChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7.activeDate = $event; })(\"monthSelected\", function MatCalendar_mat_year_view_3_Template_mat_year_view_monthSelected_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r9 = ɵngcc0.ɵɵnextContext(); return ctx_r9._monthSelectedInYearView($event); })(\"selectedChange\", function MatCalendar_mat_year_view_3_Template_mat_year_view_selectedChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10._goToDateInView($event, \"month\"); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"activeDate\", ctx_r2.activeDate)(\"selected\", ctx_r2.selected)(\"dateFilter\", ctx_r2.dateFilter)(\"maxDate\", ctx_r2.maxDate)(\"minDate\", ctx_r2.minDate)(\"dateClass\", ctx_r2.dateClass);\n} }\nfunction MatCalendar_mat_multi_year_view_4_Template(rf, ctx) { if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-multi-year-view\", 7);\n    ɵngcc0.ɵɵlistener(\"activeDateChange\", function MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_activeDateChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11.activeDate = $event; })(\"yearSelected\", function MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_yearSelected_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r13 = ɵngcc0.ɵɵnextContext(); return ctx_r13._yearSelectedInMultiYearView($event); })(\"selectedChange\", function MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_selectedChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r14 = ɵngcc0.ɵɵnextContext(); return ctx_r14._goToDateInView($event, \"year\"); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"activeDate\", ctx_r3.activeDate)(\"selected\", ctx_r3.selected)(\"dateFilter\", ctx_r3.dateFilter)(\"maxDate\", ctx_r3.maxDate)(\"minDate\", ctx_r3.minDate)(\"dateClass\", ctx_r3.dateClass);\n} }\nfunction MatDatepickerContent_ng_template_2_Template(rf, ctx) { }\nconst _c2 = [\"button\"];\nfunction MatDatepickerToggle__svg_svg_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(0, \"svg\", 3);\n    ɵngcc0.ɵɵelement(1, \"path\", 4);\n    ɵngcc0.ɵɵelementEnd();\n} }\nconst _c3 = [[[\"\", \"matDatepickerToggleIcon\", \"\"]]];\nconst _c4 = [\"[matDatepickerToggleIcon]\"];\nconst _c5 = [[[\"input\", \"matStartDate\", \"\"]], [[\"input\", \"matEndDate\", \"\"]]];\nconst _c6 = [\"input[matStartDate]\", \"input[matEndDate]\"];\nfunction MatDatepickerActions_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n    ɵngcc0.ɵɵprojection(1);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction createMissingDateImplError(provider) {\n    return Error(`MatDatepicker: No provider found for ${provider}. You must import one of the following ` +\n        `modules at your application root: MatNativeDateModule, MatMomentDateModule, or provide a ` +\n        `custom implementation.`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Datepicker data that requires internationalization. */\nclass MatDatepickerIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n        /** A label for the calendar popup (used by screen readers). */\n        this.calendarLabel = 'Calendar';\n        /** A label for the button used to open the calendar popup (used by screen readers). */\n        this.openCalendarLabel = 'Open calendar';\n        /** Label for the button used to close the calendar popup. */\n        this.closeCalendarLabel = 'Close calendar';\n        /** A label for the previous month button (used by screen readers). */\n        this.prevMonthLabel = 'Previous month';\n        /** A label for the next month button (used by screen readers). */\n        this.nextMonthLabel = 'Next month';\n        /** A label for the previous year button (used by screen readers). */\n        this.prevYearLabel = 'Previous year';\n        /** A label for the next year button (used by screen readers). */\n        this.nextYearLabel = 'Next year';\n        /** A label for the previous multi-year button (used by screen readers). */\n        this.prevMultiYearLabel = 'Previous 20 years';\n        /** A label for the next multi-year button (used by screen readers). */\n        this.nextMultiYearLabel = 'Next 20 years';\n        /** A label for the 'switch to month view' button (used by screen readers). */\n        this.switchToMonthViewLabel = 'Choose date';\n        /** A label for the 'switch to year view' button (used by screen readers). */\n        this.switchToMultiYearViewLabel = 'Choose month and year';\n    }\n    /** Formats a range of years. */\n    formatYearRange(start, end) {\n        return `${start} \\u2013 ${end}`;\n    }\n}\nMatDatepickerIntl.ɵfac = function MatDatepickerIntl_Factory(t) { return new (t || MatDatepickerIntl)(); };\nMatDatepickerIntl.ɵprov = ɵɵdefineInjectable({ factory: function MatDatepickerIntl_Factory() { return new MatDatepickerIntl(); }, token: MatDatepickerIntl, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerIntl, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An internal class that represents the data corresponding to a single calendar cell.\n * @docs-private\n */\nclass MatCalendarCell {\n    constructor(value, displayValue, ariaLabel, enabled, cssClasses = {}, compareValue = value, rawValue) {\n        this.value = value;\n        this.displayValue = displayValue;\n        this.ariaLabel = ariaLabel;\n        this.enabled = enabled;\n        this.cssClasses = cssClasses;\n        this.compareValue = compareValue;\n        this.rawValue = rawValue;\n    }\n}\n/**\n * An internal component used to display calendar data in a table.\n * @docs-private\n */\nclass MatCalendarBody {\n    constructor(_elementRef, _ngZone) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        /** The number of columns in the table. */\n        this.numCols = 7;\n        /** The cell number of the active cell in the table. */\n        this.activeCell = 0;\n        /** Whether a range is being selected. */\n        this.isRange = false;\n        /**\n         * The aspect ratio (width / height) to use for the cells in the table. This aspect ratio will be\n         * maintained even as the table resizes.\n         */\n        this.cellAspectRatio = 1;\n        /** Start of the preview range. */\n        this.previewStart = null;\n        /** End of the preview range. */\n        this.previewEnd = null;\n        /** Emits when a new value is selected. */\n        this.selectedValueChange = new EventEmitter();\n        /** Emits when the preview has changed as a result of a user action. */\n        this.previewChange = new EventEmitter();\n        /**\n         * Event handler for when the user enters an element\n         * inside the calendar body (e.g. by hovering in or focus).\n         */\n        this._enterHandler = (event) => {\n            if (this._skipNextFocus && event.type === 'focus') {\n                this._skipNextFocus = false;\n                return;\n            }\n            // We only need to hit the zone when we're selecting a range.\n            if (event.target && this.isRange) {\n                const cell = this._getCellFromElement(event.target);\n                if (cell) {\n                    this._ngZone.run(() => this.previewChange.emit({ value: cell.enabled ? cell : null, event }));\n                }\n            }\n        };\n        /**\n         * Event handler for when the user's pointer leaves an element\n         * inside the calendar body (e.g. by hovering out or blurring).\n         */\n        this._leaveHandler = (event) => {\n            // We only need to hit the zone when we're selecting a range.\n            if (this.previewEnd !== null && this.isRange) {\n                // Only reset the preview end value when leaving cells. This looks better, because\n                // we have a gap between the cells and the rows and we don't want to remove the\n                // range just for it to show up again when the user moves a few pixels to the side.\n                if (event.target && isTableCell(event.target)) {\n                    this._ngZone.run(() => this.previewChange.emit({ value: null, event }));\n                }\n            }\n        };\n        _ngZone.runOutsideAngular(() => {\n            const element = _elementRef.nativeElement;\n            element.addEventListener('mouseenter', this._enterHandler, true);\n            element.addEventListener('focus', this._enterHandler, true);\n            element.addEventListener('mouseleave', this._leaveHandler, true);\n            element.addEventListener('blur', this._leaveHandler, true);\n        });\n    }\n    /** Called when a cell is clicked. */\n    _cellClicked(cell, event) {\n        if (cell.enabled) {\n            this.selectedValueChange.emit({ value: cell.value, event });\n        }\n    }\n    /** Returns whether a cell should be marked as selected. */\n    _isSelected(value) {\n        return this.startValue === value || this.endValue === value;\n    }\n    ngOnChanges(changes) {\n        const columnChanges = changes['numCols'];\n        const { rows, numCols } = this;\n        if (changes['rows'] || columnChanges) {\n            this._firstRowOffset = rows && rows.length && rows[0].length ? numCols - rows[0].length : 0;\n        }\n        if (changes['cellAspectRatio'] || columnChanges || !this._cellPadding) {\n            this._cellPadding = `${50 * this.cellAspectRatio / numCols}%`;\n        }\n        if (columnChanges || !this._cellWidth) {\n            this._cellWidth = `${100 / numCols}%`;\n        }\n    }\n    ngOnDestroy() {\n        const element = this._elementRef.nativeElement;\n        element.removeEventListener('mouseenter', this._enterHandler, true);\n        element.removeEventListener('focus', this._enterHandler, true);\n        element.removeEventListener('mouseleave', this._leaveHandler, true);\n        element.removeEventListener('blur', this._leaveHandler, true);\n    }\n    /** Returns whether a cell is active. */\n    _isActiveCell(rowIndex, colIndex) {\n        let cellNumber = rowIndex * this.numCols + colIndex;\n        // Account for the fact that the first row may not have as many cells.\n        if (rowIndex) {\n            cellNumber -= this._firstRowOffset;\n        }\n        return cellNumber == this.activeCell;\n    }\n    /** Focuses the active cell after the microtask queue is empty. */\n    _focusActiveCell(movePreview = true) {\n        this._ngZone.runOutsideAngular(() => {\n            this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n                const activeCell = this._elementRef.nativeElement.querySelector('.mat-calendar-body-active');\n                if (activeCell) {\n                    if (!movePreview) {\n                        this._skipNextFocus = true;\n                    }\n                    activeCell.focus();\n                }\n            });\n        });\n    }\n    /** Gets whether a value is the start of the main range. */\n    _isRangeStart(value) {\n        return isStart(value, this.startValue, this.endValue);\n    }\n    /** Gets whether a value is the end of the main range. */\n    _isRangeEnd(value) {\n        return isEnd(value, this.startValue, this.endValue);\n    }\n    /** Gets whether a value is within the currently-selected range. */\n    _isInRange(value) {\n        return isInRange(value, this.startValue, this.endValue, this.isRange);\n    }\n    /** Gets whether a value is the start of the comparison range. */\n    _isComparisonStart(value) {\n        return isStart(value, this.comparisonStart, this.comparisonEnd);\n    }\n    /** Whether the cell is a start bridge cell between the main and comparison ranges. */\n    _isComparisonBridgeStart(value, rowIndex, colIndex) {\n        if (!this._isComparisonStart(value) || this._isRangeStart(value) || !this._isInRange(value)) {\n            return false;\n        }\n        let previousCell = this.rows[rowIndex][colIndex - 1];\n        if (!previousCell) {\n            const previousRow = this.rows[rowIndex - 1];\n            previousCell = previousRow && previousRow[previousRow.length - 1];\n        }\n        return previousCell && !this._isRangeEnd(previousCell.compareValue);\n    }\n    /** Whether the cell is an end bridge cell between the main and comparison ranges. */\n    _isComparisonBridgeEnd(value, rowIndex, colIndex) {\n        if (!this._isComparisonEnd(value) || this._isRangeEnd(value) || !this._isInRange(value)) {\n            return false;\n        }\n        let nextCell = this.rows[rowIndex][colIndex + 1];\n        if (!nextCell) {\n            const nextRow = this.rows[rowIndex + 1];\n            nextCell = nextRow && nextRow[0];\n        }\n        return nextCell && !this._isRangeStart(nextCell.compareValue);\n    }\n    /** Gets whether a value is the end of the comparison range. */\n    _isComparisonEnd(value) {\n        return isEnd(value, this.comparisonStart, this.comparisonEnd);\n    }\n    /** Gets whether a value is within the current comparison range. */\n    _isInComparisonRange(value) {\n        return isInRange(value, this.comparisonStart, this.comparisonEnd, this.isRange);\n    }\n    /**\n     * Gets whether a value is the same as the start and end of the comparison range.\n     * For context, the functions that we use to determine whether something is the start/end of\n     * a range don't allow for the start and end to be on the same day, because we'd have to use\n     * much more specific CSS selectors to style them correctly in all scenarios. This is fine for\n     * the regular range, because when it happens, the selected styles take over and still show where\n     * the range would've been, however we don't have these selected styles for a comparison range.\n     * This function is used to apply a class that serves the same purpose as the one for selected\n     * dates, but it only applies in the context of a comparison range.\n     */\n    _isComparisonIdentical(value) {\n        // Note that we don't need to null check the start/end\n        // here, because the `value` will always be defined.\n        return this.comparisonStart === this.comparisonEnd && value === this.comparisonStart;\n    }\n    /** Gets whether a value is the start of the preview range. */\n    _isPreviewStart(value) {\n        return isStart(value, this.previewStart, this.previewEnd);\n    }\n    /** Gets whether a value is the end of the preview range. */\n    _isPreviewEnd(value) {\n        return isEnd(value, this.previewStart, this.previewEnd);\n    }\n    /** Gets whether a value is inside the preview range. */\n    _isInPreview(value) {\n        return isInRange(value, this.previewStart, this.previewEnd, this.isRange);\n    }\n    /** Finds the MatCalendarCell that corresponds to a DOM node. */\n    _getCellFromElement(element) {\n        let cell;\n        if (isTableCell(element)) {\n            cell = element;\n        }\n        else if (isTableCell(element.parentNode)) {\n            cell = element.parentNode;\n        }\n        if (cell) {\n            const row = cell.getAttribute('data-mat-row');\n            const col = cell.getAttribute('data-mat-col');\n            if (row && col) {\n                return this.rows[parseInt(row)][parseInt(col)];\n            }\n        }\n        return null;\n    }\n}\nMatCalendarBody.ɵfac = function MatCalendarBody_Factory(t) { return new (t || MatCalendarBody)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nMatCalendarBody.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCalendarBody, selectors: [[\"\", \"mat-calendar-body\", \"\"]], hostAttrs: [\"role\", \"grid\", \"aria-readonly\", \"true\", 1, \"mat-calendar-body\"], inputs: { numCols: \"numCols\", activeCell: \"activeCell\", isRange: \"isRange\", cellAspectRatio: \"cellAspectRatio\", previewStart: \"previewStart\", previewEnd: \"previewEnd\", label: \"label\", rows: \"rows\", todayValue: \"todayValue\", startValue: \"startValue\", endValue: \"endValue\", labelMinRequiredCells: \"labelMinRequiredCells\", comparisonStart: \"comparisonStart\", comparisonEnd: \"comparisonEnd\" }, outputs: { selectedValueChange: \"selectedValueChange\", previewChange: \"previewChange\" }, exportAs: [\"matCalendarBody\"], features: [ɵngcc0.ɵɵNgOnChangesFeature], attrs: _c0, decls: 2, vars: 2, consts: [[\"aria-hidden\", \"true\", 4, \"ngIf\"], [\"role\", \"row\", 4, \"ngFor\", \"ngForOf\"], [\"aria-hidden\", \"true\"], [1, \"mat-calendar-body-label\"], [\"role\", \"row\"], [\"aria-hidden\", \"true\", \"class\", \"mat-calendar-body-label\", 3, \"paddingTop\", \"paddingBottom\", 4, \"ngIf\"], [\"role\", \"gridcell\", \"class\", \"mat-calendar-body-cell\", 3, \"ngClass\", \"tabindex\", \"mat-calendar-body-disabled\", \"mat-calendar-body-active\", \"mat-calendar-body-range-start\", \"mat-calendar-body-range-end\", \"mat-calendar-body-in-range\", \"mat-calendar-body-comparison-bridge-start\", \"mat-calendar-body-comparison-bridge-end\", \"mat-calendar-body-comparison-start\", \"mat-calendar-body-comparison-end\", \"mat-calendar-body-in-comparison-range\", \"mat-calendar-body-preview-start\", \"mat-calendar-body-preview-end\", \"mat-calendar-body-in-preview\", \"width\", \"paddingTop\", \"paddingBottom\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"aria-hidden\", \"true\", 1, \"mat-calendar-body-label\"], [\"role\", \"gridcell\", 1, \"mat-calendar-body-cell\", 3, \"ngClass\", \"tabindex\", \"click\"], [1, \"mat-calendar-body-cell-content\", \"mat-focus-indicator\"], [1, \"mat-calendar-body-cell-preview\"]], template: function MatCalendarBody_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, MatCalendarBody_tr_0_Template, 3, 6, \"tr\", 0);\n        ɵngcc0.ɵɵtemplate(1, MatCalendarBody_tr_1_Template, 3, 2, \"tr\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._firstRowOffset < ctx.labelMinRequiredCells);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.rows);\n    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgForOf, ɵngcc1.NgClass], styles: [\".mat-calendar-body{min-width:224px}.mat-calendar-body-label{height:0;line-height:0;text-align:left;padding-left:4.7142857143%;padding-right:4.7142857143%}.mat-calendar-body-cell{position:relative;height:0;line-height:0;text-align:center;outline:none;cursor:pointer}.mat-calendar-body-cell::before,.mat-calendar-body-cell::after,.mat-calendar-body-cell-preview{content:\\\"\\\";position:absolute;top:5%;left:0;z-index:0;box-sizing:border-box;height:90%;width:100%}.mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-start::after,.mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,.mat-calendar-body-comparison-start::after,.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:5%;width:95%;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,[dir=rtl] .mat-calendar-body-comparison-start::after,[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:0;border-radius:0;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,.mat-calendar-body-comparison-end::after,.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}[dir=rtl] .mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,[dir=rtl] .mat-calendar-body-comparison-end::after,[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{left:5%;border-radius:0;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-comparison-bridge-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-bridge-end.mat-calendar-body-range-start::after{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end.mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-end.mat-calendar-body-range-start::after{width:90%}.mat-calendar-body-in-preview .mat-calendar-body-cell-preview{border-top:dashed 1px;border-bottom:dashed 1px}.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:dashed 1px}[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:0;border-right:dashed 1px}.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:dashed 1px}[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:0;border-left:dashed 1px}.mat-calendar-body-disabled{cursor:default}.cdk-high-contrast-active .mat-calendar-body-disabled{opacity:.5}.mat-calendar-body-cell-content{top:5%;left:5%;z-index:1;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;line-height:1;border-width:1px;border-style:solid;border-radius:999px}.mat-calendar-body-cell-content.mat-focus-indicator{position:absolute}.cdk-high-contrast-active .mat-calendar-body-cell-content{border:none}.mat-datepicker-dialog .mat-dialog-container{position:relative;overflow:visible}.cdk-high-contrast-active .mat-datepicker-popup:not(:empty),.cdk-high-contrast-active .mat-calendar-body-selected{outline:solid 1px}.cdk-high-contrast-active .mat-calendar-body-today{outline:dotted 1px}.cdk-high-contrast-active .cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected),.cdk-high-contrast-active .cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){outline:dotted 2px}[dir=rtl] .mat-calendar-body-label{text-align:right}@media(hover: none){.mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){background-color:transparent}}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatCalendarBody.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone }\n];\nMatCalendarBody.propDecorators = {\n    label: [{ type: Input }],\n    rows: [{ type: Input }],\n    todayValue: [{ type: Input }],\n    startValue: [{ type: Input }],\n    endValue: [{ type: Input }],\n    labelMinRequiredCells: [{ type: Input }],\n    numCols: [{ type: Input }],\n    activeCell: [{ type: Input }],\n    isRange: [{ type: Input }],\n    cellAspectRatio: [{ type: Input }],\n    comparisonStart: [{ type: Input }],\n    comparisonEnd: [{ type: Input }],\n    previewStart: [{ type: Input }],\n    previewEnd: [{ type: Input }],\n    selectedValueChange: [{ type: Output }],\n    previewChange: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCalendarBody, [{\n        type: Component,\n        args: [{\n                selector: '[mat-calendar-body]',\n                template: \"<!--\\n  If there's not enough space in the first row, create a separate label row. We mark this row as\\n  aria-hidden because we don't want it to be read out as one of the weeks in the month.\\n-->\\n<tr *ngIf=\\\"_firstRowOffset < labelMinRequiredCells\\\" aria-hidden=\\\"true\\\">\\n  <td class=\\\"mat-calendar-body-label\\\"\\n      [attr.colspan]=\\\"numCols\\\"\\n      [style.paddingTop]=\\\"_cellPadding\\\"\\n      [style.paddingBottom]=\\\"_cellPadding\\\">\\n    {{label}}\\n  </td>\\n</tr>\\n\\n<!-- Create the first row separately so we can include a special spacer cell. -->\\n<tr *ngFor=\\\"let row of rows; let rowIndex = index\\\" role=\\\"row\\\">\\n  <!--\\n    We mark this cell as aria-hidden so it doesn't get read out as one of the days in the week.\\n    The aspect ratio of the table cells is maintained by setting the top and bottom padding as a\\n    percentage of the width (a variant of the trick described here:\\n    https://www.w3schools.com/howto/howto_css_aspect_ratio.asp).\\n  -->\\n  <td *ngIf=\\\"rowIndex === 0 && _firstRowOffset\\\"\\n      aria-hidden=\\\"true\\\"\\n      class=\\\"mat-calendar-body-label\\\"\\n      [attr.colspan]=\\\"_firstRowOffset\\\"\\n      [style.paddingTop]=\\\"_cellPadding\\\"\\n      [style.paddingBottom]=\\\"_cellPadding\\\">\\n    {{_firstRowOffset >= labelMinRequiredCells ? label : ''}}\\n  </td>\\n  <td *ngFor=\\\"let item of row; let colIndex = index\\\"\\n      role=\\\"gridcell\\\"\\n      class=\\\"mat-calendar-body-cell\\\"\\n      [ngClass]=\\\"item.cssClasses\\\"\\n      [tabindex]=\\\"_isActiveCell(rowIndex, colIndex) ? 0 : -1\\\"\\n      [attr.data-mat-row]=\\\"rowIndex\\\"\\n      [attr.data-mat-col]=\\\"colIndex\\\"\\n      [class.mat-calendar-body-disabled]=\\\"!item.enabled\\\"\\n      [class.mat-calendar-body-active]=\\\"_isActiveCell(rowIndex, colIndex)\\\"\\n      [class.mat-calendar-body-range-start]=\\\"_isRangeStart(item.compareValue)\\\"\\n      [class.mat-calendar-body-range-end]=\\\"_isRangeEnd(item.compareValue)\\\"\\n      [class.mat-calendar-body-in-range]=\\\"_isInRange(item.compareValue)\\\"\\n      [class.mat-calendar-body-comparison-bridge-start]=\\\"_isComparisonBridgeStart(item.compareValue, rowIndex, colIndex)\\\"\\n      [class.mat-calendar-body-comparison-bridge-end]=\\\"_isComparisonBridgeEnd(item.compareValue, rowIndex, colIndex)\\\"\\n      [class.mat-calendar-body-comparison-start]=\\\"_isComparisonStart(item.compareValue)\\\"\\n      [class.mat-calendar-body-comparison-end]=\\\"_isComparisonEnd(item.compareValue)\\\"\\n      [class.mat-calendar-body-in-comparison-range]=\\\"_isInComparisonRange(item.compareValue)\\\"\\n      [class.mat-calendar-body-preview-start]=\\\"_isPreviewStart(item.compareValue)\\\"\\n      [class.mat-calendar-body-preview-end]=\\\"_isPreviewEnd(item.compareValue)\\\"\\n      [class.mat-calendar-body-in-preview]=\\\"_isInPreview(item.compareValue)\\\"\\n      [attr.aria-label]=\\\"item.ariaLabel\\\"\\n      [attr.aria-disabled]=\\\"!item.enabled || null\\\"\\n      [attr.aria-selected]=\\\"_isSelected(item.compareValue)\\\"\\n      (click)=\\\"_cellClicked(item, $event)\\\"\\n      [style.width]=\\\"_cellWidth\\\"\\n      [style.paddingTop]=\\\"_cellPadding\\\"\\n      [style.paddingBottom]=\\\"_cellPadding\\\">\\n      <div class=\\\"mat-calendar-body-cell-content mat-focus-indicator\\\"\\n        [class.mat-calendar-body-selected]=\\\"_isSelected(item.compareValue)\\\"\\n        [class.mat-calendar-body-comparison-identical]=\\\"_isComparisonIdentical(item.compareValue)\\\"\\n        [class.mat-calendar-body-today]=\\\"todayValue === item.compareValue\\\">\\n        {{item.displayValue}}\\n      </div>\\n      <div class=\\\"mat-calendar-body-cell-preview\\\"></div>\\n  </td>\\n</tr>\\n\",\n                host: {\n                    'class': 'mat-calendar-body',\n                    'role': 'grid',\n                    'aria-readonly': 'true'\n                },\n                exportAs: 'matCalendarBody',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-calendar-body{min-width:224px}.mat-calendar-body-label{height:0;line-height:0;text-align:left;padding-left:4.7142857143%;padding-right:4.7142857143%}.mat-calendar-body-cell{position:relative;height:0;line-height:0;text-align:center;outline:none;cursor:pointer}.mat-calendar-body-cell::before,.mat-calendar-body-cell::after,.mat-calendar-body-cell-preview{content:\\\"\\\";position:absolute;top:5%;left:0;z-index:0;box-sizing:border-box;height:90%;width:100%}.mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-start::after,.mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,.mat-calendar-body-comparison-start::after,.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:5%;width:95%;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,[dir=rtl] .mat-calendar-body-comparison-start::after,[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:0;border-radius:0;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,.mat-calendar-body-comparison-end::after,.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}[dir=rtl] .mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,[dir=rtl] .mat-calendar-body-comparison-end::after,[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{left:5%;border-radius:0;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-comparison-bridge-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-bridge-end.mat-calendar-body-range-start::after{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end.mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-end.mat-calendar-body-range-start::after{width:90%}.mat-calendar-body-in-preview .mat-calendar-body-cell-preview{border-top:dashed 1px;border-bottom:dashed 1px}.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:dashed 1px}[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:0;border-right:dashed 1px}.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:dashed 1px}[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:0;border-left:dashed 1px}.mat-calendar-body-disabled{cursor:default}.cdk-high-contrast-active .mat-calendar-body-disabled{opacity:.5}.mat-calendar-body-cell-content{top:5%;left:5%;z-index:1;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;line-height:1;border-width:1px;border-style:solid;border-radius:999px}.mat-calendar-body-cell-content.mat-focus-indicator{position:absolute}.cdk-high-contrast-active .mat-calendar-body-cell-content{border:none}.mat-datepicker-dialog .mat-dialog-container{position:relative;overflow:visible}.cdk-high-contrast-active .mat-datepicker-popup:not(:empty),.cdk-high-contrast-active .mat-calendar-body-selected{outline:solid 1px}.cdk-high-contrast-active .mat-calendar-body-today{outline:dotted 1px}.cdk-high-contrast-active .cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected),.cdk-high-contrast-active .cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){outline:dotted 2px}[dir=rtl] .mat-calendar-body-label{text-align:right}@media(hover: none){.mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){background-color:transparent}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, { numCols: [{\n            type: Input\n        }], activeCell: [{\n            type: Input\n        }], isRange: [{\n            type: Input\n        }], cellAspectRatio: [{\n            type: Input\n        }], previewStart: [{\n            type: Input\n        }], previewEnd: [{\n            type: Input\n        }], selectedValueChange: [{\n            type: Output\n        }], previewChange: [{\n            type: Output\n        }], label: [{\n            type: Input\n        }], rows: [{\n            type: Input\n        }], todayValue: [{\n            type: Input\n        }], startValue: [{\n            type: Input\n        }], endValue: [{\n            type: Input\n        }], labelMinRequiredCells: [{\n            type: Input\n        }], comparisonStart: [{\n            type: Input\n        }], comparisonEnd: [{\n            type: Input\n        }] }); })();\n/** Checks whether a node is a table cell element. */\nfunction isTableCell(node) {\n    return node.nodeName === 'TD';\n}\n/** Checks whether a value is the start of a range. */\nfunction isStart(value, start, end) {\n    return end !== null && start !== end && value < end && value === start;\n}\n/** Checks whether a value is the end of a range. */\nfunction isEnd(value, start, end) {\n    return start !== null && start !== end && value >= start && value === end;\n}\n/** Checks whether a value is inside of a range. */\nfunction isInRange(value, start, end, rangeEnabled) {\n    return rangeEnabled && start !== null && end !== null && start !== end &&\n        value >= start && value <= end;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** A class representing a range of dates. */\nclass DateRange {\n    constructor(\n    /** The start date of the range. */\n    start, \n    /** The end date of the range. */\n    end) {\n        this.start = start;\n        this.end = end;\n    }\n}\n/**\n * A selection model containing a date selection.\n * @docs-private\n */\nclass MatDateSelectionModel {\n    constructor(\n    /** The current selection. */\n    selection, _adapter) {\n        this.selection = selection;\n        this._adapter = _adapter;\n        this._selectionChanged = new Subject();\n        /** Emits when the selection has changed. */\n        this.selectionChanged = this._selectionChanged;\n        this.selection = selection;\n    }\n    /**\n     * Updates the current selection in the model.\n     * @param value New selection that should be assigned.\n     * @param source Object that triggered the selection change.\n     */\n    updateSelection(value, source) {\n        const oldValue = this.selection;\n        this.selection = value;\n        this._selectionChanged.next({ selection: value, source, oldValue });\n    }\n    ngOnDestroy() {\n        this._selectionChanged.complete();\n    }\n    _isValidDateInstance(date) {\n        return this._adapter.isDateInstance(date) && this._adapter.isValid(date);\n    }\n    /**\n     * Clones the selection model.\n     * @deprecated To be turned into an abstract method.\n     * @breaking-change 12.0.0\n     */\n    clone() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw Error('Not implemented');\n        }\n        return null;\n    }\n}\nMatDateSelectionModel.ɵfac = function MatDateSelectionModel_Factory(t) { return new (t || MatDateSelectionModel)(ɵngcc0.ɵɵinject(undefined), ɵngcc0.ɵɵinject(ɵngcc2.DateAdapter)); };\nMatDateSelectionModel.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: MatDateSelectionModel, factory: MatDateSelectionModel.ɵfac });\nMatDateSelectionModel.ctorParameters = () => [\n    { type: undefined },\n    { type: DateAdapter }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDateSelectionModel, [{\n        type: Injectable\n    }], function () { return [{ type: undefined }, { type: ɵngcc2.DateAdapter }]; }, null); })();\n/**\n * A selection model that contains a single date.\n * @docs-private\n */\nclass MatSingleDateSelectionModel extends MatDateSelectionModel {\n    constructor(adapter) {\n        super(null, adapter);\n    }\n    /**\n     * Adds a date to the current selection. In the case of a single date selection, the added date\n     * simply overwrites the previous selection\n     */\n    add(date) {\n        super.updateSelection(date, this);\n    }\n    /** Checks whether the current selection is valid. */\n    isValid() {\n        return this.selection != null && this._isValidDateInstance(this.selection);\n    }\n    /**\n     * Checks whether the current selection is complete. In the case of a single date selection, this\n     * is true if the current selection is not null.\n     */\n    isComplete() {\n        return this.selection != null;\n    }\n    /** Clones the selection model. */\n    clone() {\n        const clone = new MatSingleDateSelectionModel(this._adapter);\n        clone.updateSelection(this.selection, this);\n        return clone;\n    }\n}\nMatSingleDateSelectionModel.ɵfac = function MatSingleDateSelectionModel_Factory(t) { return new (t || MatSingleDateSelectionModel)(ɵngcc0.ɵɵinject(ɵngcc2.DateAdapter)); };\nMatSingleDateSelectionModel.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: MatSingleDateSelectionModel, factory: MatSingleDateSelectionModel.ɵfac });\nMatSingleDateSelectionModel.ctorParameters = () => [\n    { type: DateAdapter }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSingleDateSelectionModel, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc2.DateAdapter }]; }, null); })();\n/**\n * A selection model that contains a date range.\n * @docs-private\n */\nclass MatRangeDateSelectionModel extends MatDateSelectionModel {\n    constructor(adapter) {\n        super(new DateRange(null, null), adapter);\n    }\n    /**\n     * Adds a date to the current selection. In the case of a date range selection, the added date\n     * fills in the next `null` value in the range. If both the start and the end already have a date,\n     * the selection is reset so that the given date is the new `start` and the `end` is null.\n     */\n    add(date) {\n        let { start, end } = this.selection;\n        if (start == null) {\n            start = date;\n        }\n        else if (end == null) {\n            end = date;\n        }\n        else {\n            start = date;\n            end = null;\n        }\n        super.updateSelection(new DateRange(start, end), this);\n    }\n    /** Checks whether the current selection is valid. */\n    isValid() {\n        const { start, end } = this.selection;\n        // Empty ranges are valid.\n        if (start == null && end == null) {\n            return true;\n        }\n        // Complete ranges are only valid if both dates are valid and the start is before the end.\n        if (start != null && end != null) {\n            return this._isValidDateInstance(start) && this._isValidDateInstance(end) &&\n                this._adapter.compareDate(start, end) <= 0;\n        }\n        // Partial ranges are valid if the start/end is valid.\n        return (start == null || this._isValidDateInstance(start)) &&\n            (end == null || this._isValidDateInstance(end));\n    }\n    /**\n     * Checks whether the current selection is complete. In the case of a date range selection, this\n     * is true if the current selection has a non-null `start` and `end`.\n     */\n    isComplete() {\n        return this.selection.start != null && this.selection.end != null;\n    }\n    /** Clones the selection model. */\n    clone() {\n        const clone = new MatRangeDateSelectionModel(this._adapter);\n        clone.updateSelection(this.selection, this);\n        return clone;\n    }\n}\nMatRangeDateSelectionModel.ɵfac = function MatRangeDateSelectionModel_Factory(t) { return new (t || MatRangeDateSelectionModel)(ɵngcc0.ɵɵinject(ɵngcc2.DateAdapter)); };\nMatRangeDateSelectionModel.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: MatRangeDateSelectionModel, factory: MatRangeDateSelectionModel.ɵfac });\nMatRangeDateSelectionModel.ctorParameters = () => [\n    { type: DateAdapter }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatRangeDateSelectionModel, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc2.DateAdapter }]; }, null); })();\n/** @docs-private */\nfunction MAT_SINGLE_DATE_SELECTION_MODEL_FACTORY(parent, adapter) {\n    return parent || new MatSingleDateSelectionModel(adapter);\n}\n/**\n * Used to provide a single selection model to a component.\n * @docs-private\n */\nconst MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER = {\n    provide: MatDateSelectionModel,\n    deps: [[new Optional(), new SkipSelf(), MatDateSelectionModel], DateAdapter],\n    useFactory: MAT_SINGLE_DATE_SELECTION_MODEL_FACTORY,\n};\n/** @docs-private */\nfunction MAT_RANGE_DATE_SELECTION_MODEL_FACTORY(parent, adapter) {\n    return parent || new MatRangeDateSelectionModel(adapter);\n}\n/**\n * Used to provide a range selection model to a component.\n * @docs-private\n */\nconst MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER = {\n    provide: MatDateSelectionModel,\n    deps: [[new Optional(), new SkipSelf(), MatDateSelectionModel], DateAdapter],\n    useFactory: MAT_RANGE_DATE_SELECTION_MODEL_FACTORY,\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token used to customize the date range selection behavior. */\nconst MAT_DATE_RANGE_SELECTION_STRATEGY = new InjectionToken('MAT_DATE_RANGE_SELECTION_STRATEGY');\n/** Provides the default date range selection behavior. */\nclass DefaultMatCalendarRangeStrategy {\n    constructor(_dateAdapter) {\n        this._dateAdapter = _dateAdapter;\n    }\n    selectionFinished(date, currentRange) {\n        let { start, end } = currentRange;\n        if (start == null) {\n            start = date;\n        }\n        else if (end == null && date && this._dateAdapter.compareDate(date, start) >= 0) {\n            end = date;\n        }\n        else {\n            start = date;\n            end = null;\n        }\n        return new DateRange(start, end);\n    }\n    createPreview(activeDate, currentRange) {\n        let start = null;\n        let end = null;\n        if (currentRange.start && !currentRange.end && activeDate) {\n            start = currentRange.start;\n            end = activeDate;\n        }\n        return new DateRange(start, end);\n    }\n}\nDefaultMatCalendarRangeStrategy.ɵfac = function DefaultMatCalendarRangeStrategy_Factory(t) { return new (t || DefaultMatCalendarRangeStrategy)(ɵngcc0.ɵɵinject(ɵngcc2.DateAdapter)); };\nDefaultMatCalendarRangeStrategy.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: DefaultMatCalendarRangeStrategy, factory: DefaultMatCalendarRangeStrategy.ɵfac });\nDefaultMatCalendarRangeStrategy.ctorParameters = () => [\n    { type: DateAdapter }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DefaultMatCalendarRangeStrategy, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc2.DateAdapter }]; }, null); })();\n/** @docs-private */\nfunction MAT_CALENDAR_RANGE_STRATEGY_PROVIDER_FACTORY(parent, adapter) {\n    return parent || new DefaultMatCalendarRangeStrategy(adapter);\n}\n/** @docs-private */\nconst MAT_CALENDAR_RANGE_STRATEGY_PROVIDER = {\n    provide: MAT_DATE_RANGE_SELECTION_STRATEGY,\n    deps: [[new Optional(), new SkipSelf(), MAT_DATE_RANGE_SELECTION_STRATEGY], DateAdapter],\n    useFactory: MAT_CALENDAR_RANGE_STRATEGY_PROVIDER_FACTORY,\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DAYS_PER_WEEK = 7;\n/**\n * An internal component used to display a single month in the datepicker.\n * @docs-private\n */\nclass MatMonthView {\n    constructor(_changeDetectorRef, _dateFormats, _dateAdapter, _dir, _rangeStrategy) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dateFormats = _dateFormats;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        this._rangeStrategy = _rangeStrategy;\n        this._rerenderSubscription = Subscription.EMPTY;\n        /** Emits when a new date is selected. */\n        this.selectedChange = new EventEmitter();\n        /** Emits when any date is selected. */\n        this._userSelection = new EventEmitter();\n        /** Emits when any date is activated. */\n        this.activeDateChange = new EventEmitter();\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._dateAdapter) {\n                throw createMissingDateImplError('DateAdapter');\n            }\n            if (!this._dateFormats) {\n                throw createMissingDateImplError('MAT_DATE_FORMATS');\n            }\n        }\n        this._activeDate = this._dateAdapter.today();\n    }\n    /**\n     * The date to display in this month view (everything other than the month and year is ignored).\n     */\n    get activeDate() { return this._activeDate; }\n    set activeDate(value) {\n        const oldActiveDate = this._activeDate;\n        const validDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n        this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n        if (!this._hasSameMonthAndYear(oldActiveDate, this._activeDate)) {\n            this._init();\n        }\n    }\n    /** The currently selected date. */\n    get selected() { return this._selected; }\n    set selected(value) {\n        if (value instanceof DateRange) {\n            this._selected = value;\n        }\n        else {\n            this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        }\n        this._setRanges(this._selected);\n    }\n    /** The minimum selectable date. */\n    get minDate() { return this._minDate; }\n    set minDate(value) {\n        this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** The maximum selectable date. */\n    get maxDate() { return this._maxDate; }\n    set maxDate(value) {\n        this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    ngAfterContentInit() {\n        this._rerenderSubscription = this._dateAdapter.localeChanges\n            .pipe(startWith(null))\n            .subscribe(() => this._init());\n    }\n    ngOnChanges(changes) {\n        const comparisonChange = changes['comparisonStart'] || changes['comparisonEnd'];\n        if (comparisonChange && !comparisonChange.firstChange) {\n            this._setRanges(this.selected);\n        }\n    }\n    ngOnDestroy() {\n        this._rerenderSubscription.unsubscribe();\n    }\n    /** Handles when a new date is selected. */\n    _dateSelected(event) {\n        const date = event.value;\n        const selectedYear = this._dateAdapter.getYear(this.activeDate);\n        const selectedMonth = this._dateAdapter.getMonth(this.activeDate);\n        const selectedDate = this._dateAdapter.createDate(selectedYear, selectedMonth, date);\n        let rangeStartDate;\n        let rangeEndDate;\n        if (this._selected instanceof DateRange) {\n            rangeStartDate = this._getDateInCurrentMonth(this._selected.start);\n            rangeEndDate = this._getDateInCurrentMonth(this._selected.end);\n        }\n        else {\n            rangeStartDate = rangeEndDate = this._getDateInCurrentMonth(this._selected);\n        }\n        if (rangeStartDate !== date || rangeEndDate !== date) {\n            this.selectedChange.emit(selectedDate);\n        }\n        this._userSelection.emit({ value: selectedDate, event: event.event });\n        this._previewStart = this._previewEnd = null;\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Handles keydown events on the calendar body when calendar is in month view. */\n    _handleCalendarBodyKeydown(event) {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        const oldActiveDate = this._activeDate;\n        const isRtl = this._isRtl();\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, -7);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 7);\n                break;\n            case HOME:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 1 - this._dateAdapter.getDate(this._activeDate));\n                break;\n            case END:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, (this._dateAdapter.getNumDaysInMonth(this._activeDate) -\n                    this._dateAdapter.getDate(this._activeDate)));\n                break;\n            case PAGE_UP:\n                this.activeDate = event.altKey ?\n                    this._dateAdapter.addCalendarYears(this._activeDate, -1) :\n                    this._dateAdapter.addCalendarMonths(this._activeDate, -1);\n                break;\n            case PAGE_DOWN:\n                this.activeDate = event.altKey ?\n                    this._dateAdapter.addCalendarYears(this._activeDate, 1) :\n                    this._dateAdapter.addCalendarMonths(this._activeDate, 1);\n                break;\n            case ENTER:\n            case SPACE:\n                if (!this.dateFilter || this.dateFilter(this._activeDate)) {\n                    this._dateSelected({ value: this._dateAdapter.getDate(this._activeDate), event });\n                    // Prevent unexpected default actions such as form submission.\n                    event.preventDefault();\n                }\n                return;\n            case ESCAPE:\n                // Abort the current range selection if the user presses escape mid-selection.\n                if (this._previewEnd != null && !hasModifierKey(event)) {\n                    this._previewStart = this._previewEnd = null;\n                    this.selectedChange.emit(null);\n                    this._userSelection.emit({ value: null, event });\n                    event.preventDefault();\n                    event.stopPropagation(); // Prevents the overlay from closing.\n                }\n                return;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n        this._focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n    /** Initializes this month view. */\n    _init() {\n        this._setRanges(this.selected);\n        this._todayDate = this._getCellCompareValue(this._dateAdapter.today());\n        this._monthLabel = this._dateFormats.display.monthLabel\n            ? this._dateAdapter.format(this.activeDate, this._dateFormats.display.monthLabel)\n            : this._dateAdapter.getMonthNames('short')[this._dateAdapter.getMonth(this.activeDate)]\n                .toLocaleUpperCase();\n        let firstOfMonth = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), 1);\n        this._firstWeekOffset =\n            (DAYS_PER_WEEK + this._dateAdapter.getDayOfWeek(firstOfMonth) -\n                this._dateAdapter.getFirstDayOfWeek()) % DAYS_PER_WEEK;\n        this._initWeekdays();\n        this._createWeekCells();\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Focuses the active cell after the microtask queue is empty. */\n    _focusActiveCell(movePreview) {\n        this._matCalendarBody._focusActiveCell(movePreview);\n    }\n    /** Called when the user has activated a new cell and the preview needs to be updated. */\n    _previewChanged({ event, value: cell }) {\n        if (this._rangeStrategy) {\n            // We can assume that this will be a range, because preview\n            // events aren't fired for single date selections.\n            const value = cell ? cell.rawValue : null;\n            const previewRange = this._rangeStrategy.createPreview(value, this.selected, event);\n            this._previewStart = this._getCellCompareValue(previewRange.start);\n            this._previewEnd = this._getCellCompareValue(previewRange.end);\n            // Note that here we need to use `detectChanges`, rather than `markForCheck`, because\n            // the way `_focusActiveCell` is set up at the moment makes it fire at the wrong time\n            // when navigating one month back using the keyboard which will cause this handler\n            // to throw a \"changed after checked\" error when updating the preview state.\n            this._changeDetectorRef.detectChanges();\n        }\n    }\n    /** Initializes the weekdays. */\n    _initWeekdays() {\n        const firstDayOfWeek = this._dateAdapter.getFirstDayOfWeek();\n        const narrowWeekdays = this._dateAdapter.getDayOfWeekNames('narrow');\n        const longWeekdays = this._dateAdapter.getDayOfWeekNames('long');\n        // Rotate the labels for days of the week based on the configured first day of the week.\n        let weekdays = longWeekdays.map((long, i) => {\n            return { long, narrow: narrowWeekdays[i] };\n        });\n        this._weekdays = weekdays.slice(firstDayOfWeek).concat(weekdays.slice(0, firstDayOfWeek));\n    }\n    /** Creates MatCalendarCells for the dates in this month. */\n    _createWeekCells() {\n        const daysInMonth = this._dateAdapter.getNumDaysInMonth(this.activeDate);\n        const dateNames = this._dateAdapter.getDateNames();\n        this._weeks = [[]];\n        for (let i = 0, cell = this._firstWeekOffset; i < daysInMonth; i++, cell++) {\n            if (cell == DAYS_PER_WEEK) {\n                this._weeks.push([]);\n                cell = 0;\n            }\n            const date = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), i + 1);\n            const enabled = this._shouldEnableDate(date);\n            const ariaLabel = this._dateAdapter.format(date, this._dateFormats.display.dateA11yLabel);\n            const cellClasses = this.dateClass ? this.dateClass(date, 'month') : undefined;\n            this._weeks[this._weeks.length - 1].push(new MatCalendarCell(i + 1, dateNames[i], ariaLabel, enabled, cellClasses, this._getCellCompareValue(date), date));\n        }\n    }\n    /** Date filter for the month */\n    _shouldEnableDate(date) {\n        return !!date &&\n            (!this.minDate || this._dateAdapter.compareDate(date, this.minDate) >= 0) &&\n            (!this.maxDate || this._dateAdapter.compareDate(date, this.maxDate) <= 0) &&\n            (!this.dateFilter || this.dateFilter(date));\n    }\n    /**\n     * Gets the date in this month that the given Date falls on.\n     * Returns null if the given Date is in another month.\n     */\n    _getDateInCurrentMonth(date) {\n        return date && this._hasSameMonthAndYear(date, this.activeDate) ?\n            this._dateAdapter.getDate(date) : null;\n    }\n    /** Checks whether the 2 dates are non-null and fall within the same month of the same year. */\n    _hasSameMonthAndYear(d1, d2) {\n        return !!(d1 && d2 && this._dateAdapter.getMonth(d1) == this._dateAdapter.getMonth(d2) &&\n            this._dateAdapter.getYear(d1) == this._dateAdapter.getYear(d2));\n    }\n    /** Gets the value that will be used to one cell to another. */\n    _getCellCompareValue(date) {\n        if (date) {\n            // We use the time since the Unix epoch to compare dates in this view, rather than the\n            // cell values, because we need to support ranges that span across multiple months/years.\n            const year = this._dateAdapter.getYear(date);\n            const month = this._dateAdapter.getMonth(date);\n            const day = this._dateAdapter.getDate(date);\n            return new Date(year, month, day).getTime();\n        }\n        return null;\n    }\n    /** Determines whether the user has the RTL layout direction. */\n    _isRtl() {\n        return this._dir && this._dir.value === 'rtl';\n    }\n    /** Sets the current range based on a model value. */\n    _setRanges(selectedValue) {\n        if (selectedValue instanceof DateRange) {\n            this._rangeStart = this._getCellCompareValue(selectedValue.start);\n            this._rangeEnd = this._getCellCompareValue(selectedValue.end);\n            this._isRange = true;\n        }\n        else {\n            this._rangeStart = this._rangeEnd = this._getCellCompareValue(selectedValue);\n            this._isRange = false;\n        }\n        this._comparisonRangeStart = this._getCellCompareValue(this.comparisonStart);\n        this._comparisonRangeEnd = this._getCellCompareValue(this.comparisonEnd);\n    }\n}\nMatMonthView.ɵfac = function MatMonthView_Factory(t) { return new (t || MatMonthView)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_RANGE_SELECTION_STRATEGY, 8)); };\nMatMonthView.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatMonthView, selectors: [[\"mat-month-view\"]], viewQuery: function MatMonthView_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatCalendarBody, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._matCalendarBody = _t.first);\n    } }, inputs: { activeDate: \"activeDate\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", dateFilter: \"dateFilter\", dateClass: \"dateClass\", comparisonStart: \"comparisonStart\", comparisonEnd: \"comparisonEnd\" }, outputs: { selectedChange: \"selectedChange\", _userSelection: \"_userSelection\", activeDateChange: \"activeDateChange\" }, exportAs: [\"matMonthView\"], features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 7, vars: 13, consts: [[\"role\", \"presentation\", 1, \"mat-calendar-table\"], [1, \"mat-calendar-table-header\"], [\"scope\", \"col\", 4, \"ngFor\", \"ngForOf\"], [\"colspan\", \"7\", \"aria-hidden\", \"true\", 1, \"mat-calendar-table-header-divider\"], [\"mat-calendar-body\", \"\", 3, \"label\", \"rows\", \"todayValue\", \"startValue\", \"endValue\", \"comparisonStart\", \"comparisonEnd\", \"previewStart\", \"previewEnd\", \"isRange\", \"labelMinRequiredCells\", \"activeCell\", \"selectedValueChange\", \"previewChange\", \"keydown\"], [\"scope\", \"col\"]], template: function MatMonthView_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"table\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"thead\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"tr\");\n        ɵngcc0.ɵɵtemplate(3, MatMonthView_th_3_Template, 2, 2, \"th\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(4, \"tr\");\n        ɵngcc0.ɵɵelement(5, \"th\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"tbody\", 4);\n        ɵngcc0.ɵɵlistener(\"selectedValueChange\", function MatMonthView_Template_tbody_selectedValueChange_6_listener($event) { return ctx._dateSelected($event); })(\"previewChange\", function MatMonthView_Template_tbody_previewChange_6_listener($event) { return ctx._previewChanged($event); })(\"keydown\", function MatMonthView_Template_tbody_keydown_6_listener($event) { return ctx._handleCalendarBodyKeydown($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._weekdays);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"label\", ctx._monthLabel)(\"rows\", ctx._weeks)(\"todayValue\", ctx._todayDate)(\"startValue\", ctx._rangeStart)(\"endValue\", ctx._rangeEnd)(\"comparisonStart\", ctx._comparisonRangeStart)(\"comparisonEnd\", ctx._comparisonRangeEnd)(\"previewStart\", ctx._previewStart)(\"previewEnd\", ctx._previewEnd)(\"isRange\", ctx._isRange)(\"labelMinRequiredCells\", 3)(\"activeCell\", ctx._dateAdapter.getDate(ctx.activeDate) - 1);\n    } }, directives: [ɵngcc1.NgForOf, MatCalendarBody], encapsulation: 2, changeDetection: 0 });\nMatMonthView.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DATE_RANGE_SELECTION_STRATEGY,] }, { type: Optional }] }\n];\nMatMonthView.propDecorators = {\n    activeDate: [{ type: Input }],\n    selected: [{ type: Input }],\n    minDate: [{ type: Input }],\n    maxDate: [{ type: Input }],\n    dateFilter: [{ type: Input }],\n    dateClass: [{ type: Input }],\n    comparisonStart: [{ type: Input }],\n    comparisonEnd: [{ type: Input }],\n    selectedChange: [{ type: Output }],\n    _userSelection: [{ type: Output }],\n    activeDateChange: [{ type: Output }],\n    _matCalendarBody: [{ type: ViewChild, args: [MatCalendarBody,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMonthView, [{\n        type: Component,\n        args: [{\n                selector: 'mat-month-view',\n                template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"presentation\\\">\\n  <thead class=\\\"mat-calendar-table-header\\\">\\n    <tr>\\n      <th scope=\\\"col\\\" *ngFor=\\\"let day of _weekdays\\\" [attr.aria-label]=\\\"day.long\\\">{{day.narrow}}</th>\\n    </tr>\\n    <tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"7\\\" aria-hidden=\\\"true\\\"></th></tr>\\n  </thead>\\n  <tbody mat-calendar-body\\n         [label]=\\\"_monthLabel\\\"\\n         [rows]=\\\"_weeks\\\"\\n         [todayValue]=\\\"_todayDate!\\\"\\n         [startValue]=\\\"_rangeStart!\\\"\\n         [endValue]=\\\"_rangeEnd!\\\"\\n         [comparisonStart]=\\\"_comparisonRangeStart\\\"\\n         [comparisonEnd]=\\\"_comparisonRangeEnd\\\"\\n         [previewStart]=\\\"_previewStart\\\"\\n         [previewEnd]=\\\"_previewEnd\\\"\\n         [isRange]=\\\"_isRange\\\"\\n         [labelMinRequiredCells]=\\\"3\\\"\\n         [activeCell]=\\\"_dateAdapter.getDate(activeDate) - 1\\\"\\n         (selectedValueChange)=\\\"_dateSelected($event)\\\"\\n         (previewChange)=\\\"_previewChanged($event)\\\"\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\n  </tbody>\\n</table>\\n\",\n                exportAs: 'matMonthView',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_DATE_RANGE_SELECTION_STRATEGY]\n            }, {\n                type: Optional\n            }] }]; }, { selectedChange: [{\n            type: Output\n        }], _userSelection: [{\n            type: Output\n        }], activeDateChange: [{\n            type: Output\n        }], activeDate: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], minDate: [{\n            type: Input\n        }], maxDate: [{\n            type: Input\n        }], dateFilter: [{\n            type: Input\n        }], dateClass: [{\n            type: Input\n        }], comparisonStart: [{\n            type: Input\n        }], comparisonEnd: [{\n            type: Input\n        }], _matCalendarBody: [{\n            type: ViewChild,\n            args: [MatCalendarBody]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst yearsPerPage = 24;\nconst yearsPerRow = 4;\n/**\n * An internal component used to display a year selector in the datepicker.\n * @docs-private\n */\nclass MatMultiYearView {\n    constructor(_changeDetectorRef, _dateAdapter, _dir) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        this._rerenderSubscription = Subscription.EMPTY;\n        /** Emits when a new year is selected. */\n        this.selectedChange = new EventEmitter();\n        /** Emits the selected year. This doesn't imply a change on the selected date */\n        this.yearSelected = new EventEmitter();\n        /** Emits when any date is activated. */\n        this.activeDateChange = new EventEmitter();\n        if (!this._dateAdapter && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        this._activeDate = this._dateAdapter.today();\n    }\n    /** The date to display in this multi-year view (everything other than the year is ignored). */\n    get activeDate() { return this._activeDate; }\n    set activeDate(value) {\n        let oldActiveDate = this._activeDate;\n        const validDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n        this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n        if (!isSameMultiYearView(this._dateAdapter, oldActiveDate, this._activeDate, this.minDate, this.maxDate)) {\n            this._init();\n        }\n    }\n    /** The currently selected date. */\n    get selected() { return this._selected; }\n    set selected(value) {\n        if (value instanceof DateRange) {\n            this._selected = value;\n        }\n        else {\n            this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        }\n        this._setSelectedYear(value);\n    }\n    /** The minimum selectable date. */\n    get minDate() { return this._minDate; }\n    set minDate(value) {\n        this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** The maximum selectable date. */\n    get maxDate() { return this._maxDate; }\n    set maxDate(value) {\n        this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    ngAfterContentInit() {\n        this._rerenderSubscription = this._dateAdapter.localeChanges\n            .pipe(startWith(null))\n            .subscribe(() => this._init());\n    }\n    ngOnDestroy() {\n        this._rerenderSubscription.unsubscribe();\n    }\n    /** Initializes this multi-year view. */\n    _init() {\n        this._todayYear = this._dateAdapter.getYear(this._dateAdapter.today());\n        // We want a range years such that we maximize the number of\n        // enabled dates visible at once. This prevents issues where the minimum year\n        // is the last item of a page OR the maximum year is the first item of a page.\n        // The offset from the active year to the \"slot\" for the starting year is the\n        // *actual* first rendered year in the multi-year view.\n        const activeYear = this._dateAdapter.getYear(this._activeDate);\n        const minYearOfPage = activeYear - getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate);\n        this._years = [];\n        for (let i = 0, row = []; i < yearsPerPage; i++) {\n            row.push(minYearOfPage + i);\n            if (row.length == yearsPerRow) {\n                this._years.push(row.map(year => this._createCellForYear(year)));\n                row = [];\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Handles when a new year is selected. */\n    _yearSelected(event) {\n        const year = event.value;\n        this.yearSelected.emit(this._dateAdapter.createDate(year, 0, 1));\n        let month = this._dateAdapter.getMonth(this.activeDate);\n        let daysInMonth = this._dateAdapter.getNumDaysInMonth(this._dateAdapter.createDate(year, month, 1));\n        this.selectedChange.emit(this._dateAdapter.createDate(year, month, Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n    }\n    /** Handles keydown events on the calendar body when calendar is in multi-year view. */\n    _handleCalendarBodyKeydown(event) {\n        const oldActiveDate = this._activeDate;\n        const isRtl = this._isRtl();\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -yearsPerRow);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerRow);\n                break;\n            case HOME:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate));\n                break;\n            case END:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerPage - getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate) - 1);\n                break;\n            case PAGE_UP:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -yearsPerPage * 10 : -yearsPerPage);\n                break;\n            case PAGE_DOWN:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? yearsPerPage * 10 : yearsPerPage);\n                break;\n            case ENTER:\n            case SPACE:\n                this._yearSelected({ value: this._dateAdapter.getYear(this._activeDate), event });\n                break;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n        this._focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n    _getActiveCell() {\n        return getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate);\n    }\n    /** Focuses the active cell after the microtask queue is empty. */\n    _focusActiveCell() {\n        this._matCalendarBody._focusActiveCell();\n    }\n    /** Creates an MatCalendarCell for the given year. */\n    _createCellForYear(year) {\n        const date = this._dateAdapter.createDate(year, 0, 1);\n        const yearName = this._dateAdapter.getYearName(date);\n        const cellClasses = this.dateClass ? this.dateClass(date, 'multi-year') : undefined;\n        return new MatCalendarCell(year, yearName, yearName, this._shouldEnableYear(year), cellClasses);\n    }\n    /** Whether the given year is enabled. */\n    _shouldEnableYear(year) {\n        // disable if the year is greater than maxDate lower than minDate\n        if (year === undefined || year === null ||\n            (this.maxDate && year > this._dateAdapter.getYear(this.maxDate)) ||\n            (this.minDate && year < this._dateAdapter.getYear(this.minDate))) {\n            return false;\n        }\n        // enable if it reaches here and there's no filter defined\n        if (!this.dateFilter) {\n            return true;\n        }\n        const firstOfYear = this._dateAdapter.createDate(year, 0, 1);\n        // If any date in the year is enabled count the year as enabled.\n        for (let date = firstOfYear; this._dateAdapter.getYear(date) == year; date = this._dateAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /** Determines whether the user has the RTL layout direction. */\n    _isRtl() {\n        return this._dir && this._dir.value === 'rtl';\n    }\n    /** Sets the currently-highlighted year based on a model value. */\n    _setSelectedYear(value) {\n        this._selectedYear = null;\n        if (value instanceof DateRange) {\n            const displayValue = value.start || value.end;\n            if (displayValue) {\n                this._selectedYear = this._dateAdapter.getYear(displayValue);\n            }\n        }\n        else if (value) {\n            this._selectedYear = this._dateAdapter.getYear(value);\n        }\n    }\n}\nMatMultiYearView.ɵfac = function MatMultiYearView_Factory(t) { return new (t || MatMultiYearView)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8)); };\nMatMultiYearView.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatMultiYearView, selectors: [[\"mat-multi-year-view\"]], viewQuery: function MatMultiYearView_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatCalendarBody, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._matCalendarBody = _t.first);\n    } }, inputs: { activeDate: \"activeDate\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", dateFilter: \"dateFilter\", dateClass: \"dateClass\" }, outputs: { selectedChange: \"selectedChange\", yearSelected: \"yearSelected\", activeDateChange: \"activeDateChange\" }, exportAs: [\"matMultiYearView\"], decls: 5, vars: 7, consts: [[\"role\", \"presentation\", 1, \"mat-calendar-table\"], [1, \"mat-calendar-table-header\"], [\"colspan\", \"4\", 1, \"mat-calendar-table-header-divider\"], [\"mat-calendar-body\", \"\", 3, \"rows\", \"todayValue\", \"startValue\", \"endValue\", \"numCols\", \"cellAspectRatio\", \"activeCell\", \"selectedValueChange\", \"keydown\"]], template: function MatMultiYearView_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"table\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"thead\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"tr\");\n        ɵngcc0.ɵɵelement(3, \"th\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(4, \"tbody\", 3);\n        ɵngcc0.ɵɵlistener(\"selectedValueChange\", function MatMultiYearView_Template_tbody_selectedValueChange_4_listener($event) { return ctx._yearSelected($event); })(\"keydown\", function MatMultiYearView_Template_tbody_keydown_4_listener($event) { return ctx._handleCalendarBodyKeydown($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"rows\", ctx._years)(\"todayValue\", ctx._todayYear)(\"startValue\", ctx._selectedYear)(\"endValue\", ctx._selectedYear)(\"numCols\", 4)(\"cellAspectRatio\", 4 / 7)(\"activeCell\", ctx._getActiveCell());\n    } }, directives: [MatCalendarBody], encapsulation: 2, changeDetection: 0 });\nMatMultiYearView.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nMatMultiYearView.propDecorators = {\n    activeDate: [{ type: Input }],\n    selected: [{ type: Input }],\n    minDate: [{ type: Input }],\n    maxDate: [{ type: Input }],\n    dateFilter: [{ type: Input }],\n    dateClass: [{ type: Input }],\n    selectedChange: [{ type: Output }],\n    yearSelected: [{ type: Output }],\n    activeDateChange: [{ type: Output }],\n    _matCalendarBody: [{ type: ViewChild, args: [MatCalendarBody,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMultiYearView, [{\n        type: Component,\n        args: [{\n                selector: 'mat-multi-year-view',\n                template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"presentation\\\">\\n  <thead class=\\\"mat-calendar-table-header\\\">\\n    <tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"4\\\"></th></tr>\\n  </thead>\\n  <tbody mat-calendar-body\\n         [rows]=\\\"_years\\\"\\n         [todayValue]=\\\"_todayYear\\\"\\n         [startValue]=\\\"_selectedYear!\\\"\\n         [endValue]=\\\"_selectedYear!\\\"\\n         [numCols]=\\\"4\\\"\\n         [cellAspectRatio]=\\\"4 / 7\\\"\\n         [activeCell]=\\\"_getActiveCell()\\\"\\n         (selectedValueChange)=\\\"_yearSelected($event)\\\"\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\n  </tbody>\\n</table>\\n\",\n                exportAs: 'matMultiYearView',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { selectedChange: [{\n            type: Output\n        }], yearSelected: [{\n            type: Output\n        }], activeDateChange: [{\n            type: Output\n        }], activeDate: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], minDate: [{\n            type: Input\n        }], maxDate: [{\n            type: Input\n        }], dateFilter: [{\n            type: Input\n        }], dateClass: [{\n            type: Input\n        }], _matCalendarBody: [{\n            type: ViewChild,\n            args: [MatCalendarBody]\n        }] }); })();\nfunction isSameMultiYearView(dateAdapter, date1, date2, minDate, maxDate) {\n    const year1 = dateAdapter.getYear(date1);\n    const year2 = dateAdapter.getYear(date2);\n    const startingYear = getStartingYear(dateAdapter, minDate, maxDate);\n    return Math.floor((year1 - startingYear) / yearsPerPage) ===\n        Math.floor((year2 - startingYear) / yearsPerPage);\n}\n/**\n * When the multi-year view is first opened, the active year will be in view.\n * So we compute how many years are between the active year and the *slot* where our\n * \"startingYear\" will render when paged into view.\n */\nfunction getActiveOffset(dateAdapter, activeDate, minDate, maxDate) {\n    const activeYear = dateAdapter.getYear(activeDate);\n    return euclideanModulo((activeYear - getStartingYear(dateAdapter, minDate, maxDate)), yearsPerPage);\n}\n/**\n * We pick a \"starting\" year such that either the maximum year would be at the end\n * or the minimum year would be at the beginning of a page.\n */\nfunction getStartingYear(dateAdapter, minDate, maxDate) {\n    let startingYear = 0;\n    if (maxDate) {\n        const maxYear = dateAdapter.getYear(maxDate);\n        startingYear = maxYear - yearsPerPage + 1;\n    }\n    else if (minDate) {\n        startingYear = dateAdapter.getYear(minDate);\n    }\n    return startingYear;\n}\n/** Gets remainder that is non-negative, even if first number is negative */\nfunction euclideanModulo(a, b) {\n    return (a % b + b) % b;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An internal component used to display a single year in the datepicker.\n * @docs-private\n */\nclass MatYearView {\n    constructor(_changeDetectorRef, _dateFormats, _dateAdapter, _dir) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dateFormats = _dateFormats;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        this._rerenderSubscription = Subscription.EMPTY;\n        /** Emits when a new month is selected. */\n        this.selectedChange = new EventEmitter();\n        /** Emits the selected month. This doesn't imply a change on the selected date */\n        this.monthSelected = new EventEmitter();\n        /** Emits when any date is activated. */\n        this.activeDateChange = new EventEmitter();\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._dateAdapter) {\n                throw createMissingDateImplError('DateAdapter');\n            }\n            if (!this._dateFormats) {\n                throw createMissingDateImplError('MAT_DATE_FORMATS');\n            }\n        }\n        this._activeDate = this._dateAdapter.today();\n    }\n    /** The date to display in this year view (everything other than the year is ignored). */\n    get activeDate() { return this._activeDate; }\n    set activeDate(value) {\n        let oldActiveDate = this._activeDate;\n        const validDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n        this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n        if (this._dateAdapter.getYear(oldActiveDate) !== this._dateAdapter.getYear(this._activeDate)) {\n            this._init();\n        }\n    }\n    /** The currently selected date. */\n    get selected() { return this._selected; }\n    set selected(value) {\n        if (value instanceof DateRange) {\n            this._selected = value;\n        }\n        else {\n            this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        }\n        this._setSelectedMonth(value);\n    }\n    /** The minimum selectable date. */\n    get minDate() { return this._minDate; }\n    set minDate(value) {\n        this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** The maximum selectable date. */\n    get maxDate() { return this._maxDate; }\n    set maxDate(value) {\n        this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    ngAfterContentInit() {\n        this._rerenderSubscription = this._dateAdapter.localeChanges\n            .pipe(startWith(null))\n            .subscribe(() => this._init());\n    }\n    ngOnDestroy() {\n        this._rerenderSubscription.unsubscribe();\n    }\n    /** Handles when a new month is selected. */\n    _monthSelected(event) {\n        const month = event.value;\n        const normalizedDate = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1);\n        this.monthSelected.emit(normalizedDate);\n        const daysInMonth = this._dateAdapter.getNumDaysInMonth(normalizedDate);\n        this.selectedChange.emit(this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n    }\n    /** Handles keydown events on the calendar body when calendar is in year view. */\n    _handleCalendarBodyKeydown(event) {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        const oldActiveDate = this._activeDate;\n        const isRtl = this._isRtl();\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -4);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 4);\n                break;\n            case HOME:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -this._dateAdapter.getMonth(this._activeDate));\n                break;\n            case END:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 11 - this._dateAdapter.getMonth(this._activeDate));\n                break;\n            case PAGE_UP:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -10 : -1);\n                break;\n            case PAGE_DOWN:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? 10 : 1);\n                break;\n            case ENTER:\n            case SPACE:\n                this._monthSelected({ value: this._dateAdapter.getMonth(this._activeDate), event });\n                break;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n        this._focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n    /** Initializes this year view. */\n    _init() {\n        this._setSelectedMonth(this.selected);\n        this._todayMonth = this._getMonthInCurrentYear(this._dateAdapter.today());\n        this._yearLabel = this._dateAdapter.getYearName(this.activeDate);\n        let monthNames = this._dateAdapter.getMonthNames('short');\n        // First row of months only contains 5 elements so we can fit the year label on the same row.\n        this._months = [[0, 1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11]].map(row => row.map(month => this._createCellForMonth(month, monthNames[month])));\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Focuses the active cell after the microtask queue is empty. */\n    _focusActiveCell() {\n        this._matCalendarBody._focusActiveCell();\n    }\n    /**\n     * Gets the month in this year that the given Date falls on.\n     * Returns null if the given Date is in another year.\n     */\n    _getMonthInCurrentYear(date) {\n        return date && this._dateAdapter.getYear(date) == this._dateAdapter.getYear(this.activeDate) ?\n            this._dateAdapter.getMonth(date) : null;\n    }\n    /** Creates an MatCalendarCell for the given month. */\n    _createCellForMonth(month, monthName) {\n        const date = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1);\n        const ariaLabel = this._dateAdapter.format(date, this._dateFormats.display.monthYearA11yLabel);\n        const cellClasses = this.dateClass ? this.dateClass(date, 'year') : undefined;\n        return new MatCalendarCell(month, monthName.toLocaleUpperCase(), ariaLabel, this._shouldEnableMonth(month), cellClasses);\n    }\n    /** Whether the given month is enabled. */\n    _shouldEnableMonth(month) {\n        const activeYear = this._dateAdapter.getYear(this.activeDate);\n        if (month === undefined || month === null ||\n            this._isYearAndMonthAfterMaxDate(activeYear, month) ||\n            this._isYearAndMonthBeforeMinDate(activeYear, month)) {\n            return false;\n        }\n        if (!this.dateFilter) {\n            return true;\n        }\n        const firstOfMonth = this._dateAdapter.createDate(activeYear, month, 1);\n        // If any date in the month is enabled count the month as enabled.\n        for (let date = firstOfMonth; this._dateAdapter.getMonth(date) == month; date = this._dateAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Tests whether the combination month/year is after this.maxDate, considering\n     * just the month and year of this.maxDate\n     */\n    _isYearAndMonthAfterMaxDate(year, month) {\n        if (this.maxDate) {\n            const maxYear = this._dateAdapter.getYear(this.maxDate);\n            const maxMonth = this._dateAdapter.getMonth(this.maxDate);\n            return year > maxYear || (year === maxYear && month > maxMonth);\n        }\n        return false;\n    }\n    /**\n     * Tests whether the combination month/year is before this.minDate, considering\n     * just the month and year of this.minDate\n     */\n    _isYearAndMonthBeforeMinDate(year, month) {\n        if (this.minDate) {\n            const minYear = this._dateAdapter.getYear(this.minDate);\n            const minMonth = this._dateAdapter.getMonth(this.minDate);\n            return year < minYear || (year === minYear && month < minMonth);\n        }\n        return false;\n    }\n    /** Determines whether the user has the RTL layout direction. */\n    _isRtl() {\n        return this._dir && this._dir.value === 'rtl';\n    }\n    /** Sets the currently-selected month based on a model value. */\n    _setSelectedMonth(value) {\n        if (value instanceof DateRange) {\n            this._selectedMonth = this._getMonthInCurrentYear(value.start) ||\n                this._getMonthInCurrentYear(value.end);\n        }\n        else {\n            this._selectedMonth = this._getMonthInCurrentYear(value);\n        }\n    }\n}\nMatYearView.ɵfac = function MatYearView_Factory(t) { return new (t || MatYearView)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8)); };\nMatYearView.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatYearView, selectors: [[\"mat-year-view\"]], viewQuery: function MatYearView_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatCalendarBody, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._matCalendarBody = _t.first);\n    } }, inputs: { activeDate: \"activeDate\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", dateFilter: \"dateFilter\", dateClass: \"dateClass\" }, outputs: { selectedChange: \"selectedChange\", monthSelected: \"monthSelected\", activeDateChange: \"activeDateChange\" }, exportAs: [\"matYearView\"], decls: 5, vars: 9, consts: [[\"role\", \"presentation\", 1, \"mat-calendar-table\"], [1, \"mat-calendar-table-header\"], [\"colspan\", \"4\", 1, \"mat-calendar-table-header-divider\"], [\"mat-calendar-body\", \"\", 3, \"label\", \"rows\", \"todayValue\", \"startValue\", \"endValue\", \"labelMinRequiredCells\", \"numCols\", \"cellAspectRatio\", \"activeCell\", \"selectedValueChange\", \"keydown\"]], template: function MatYearView_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"table\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"thead\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"tr\");\n        ɵngcc0.ɵɵelement(3, \"th\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(4, \"tbody\", 3);\n        ɵngcc0.ɵɵlistener(\"selectedValueChange\", function MatYearView_Template_tbody_selectedValueChange_4_listener($event) { return ctx._monthSelected($event); })(\"keydown\", function MatYearView_Template_tbody_keydown_4_listener($event) { return ctx._handleCalendarBodyKeydown($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"label\", ctx._yearLabel)(\"rows\", ctx._months)(\"todayValue\", ctx._todayMonth)(\"startValue\", ctx._selectedMonth)(\"endValue\", ctx._selectedMonth)(\"labelMinRequiredCells\", 2)(\"numCols\", 4)(\"cellAspectRatio\", 4 / 7)(\"activeCell\", ctx._dateAdapter.getMonth(ctx.activeDate));\n    } }, directives: [MatCalendarBody], encapsulation: 2, changeDetection: 0 });\nMatYearView.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nMatYearView.propDecorators = {\n    activeDate: [{ type: Input }],\n    selected: [{ type: Input }],\n    minDate: [{ type: Input }],\n    maxDate: [{ type: Input }],\n    dateFilter: [{ type: Input }],\n    dateClass: [{ type: Input }],\n    selectedChange: [{ type: Output }],\n    monthSelected: [{ type: Output }],\n    activeDateChange: [{ type: Output }],\n    _matCalendarBody: [{ type: ViewChild, args: [MatCalendarBody,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatYearView, [{\n        type: Component,\n        args: [{\n                selector: 'mat-year-view',\n                template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"presentation\\\">\\n  <thead class=\\\"mat-calendar-table-header\\\">\\n    <tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"4\\\"></th></tr>\\n  </thead>\\n  <tbody mat-calendar-body\\n         [label]=\\\"_yearLabel\\\"\\n         [rows]=\\\"_months\\\"\\n         [todayValue]=\\\"_todayMonth!\\\"\\n         [startValue]=\\\"_selectedMonth!\\\"\\n         [endValue]=\\\"_selectedMonth!\\\"\\n         [labelMinRequiredCells]=\\\"2\\\"\\n         [numCols]=\\\"4\\\"\\n         [cellAspectRatio]=\\\"4 / 7\\\"\\n         [activeCell]=\\\"_dateAdapter.getMonth(activeDate)\\\"\\n         (selectedValueChange)=\\\"_monthSelected($event)\\\"\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\n  </tbody>\\n</table>\\n\",\n                exportAs: 'matYearView',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { selectedChange: [{\n            type: Output\n        }], monthSelected: [{\n            type: Output\n        }], activeDateChange: [{\n            type: Output\n        }], activeDate: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], minDate: [{\n            type: Input\n        }], maxDate: [{\n            type: Input\n        }], dateFilter: [{\n            type: Input\n        }], dateClass: [{\n            type: Input\n        }], _matCalendarBody: [{\n            type: ViewChild,\n            args: [MatCalendarBody]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Counter used to generate unique IDs. */\nlet uniqueId = 0;\n/** Default header for MatCalendar */\nclass MatCalendarHeader {\n    constructor(_intl, calendar, _dateAdapter, _dateFormats, changeDetectorRef) {\n        this._intl = _intl;\n        this.calendar = calendar;\n        this._dateAdapter = _dateAdapter;\n        this._dateFormats = _dateFormats;\n        this._buttonDescriptionId = `mat-calendar-button-${uniqueId++}`;\n        this.calendar.stateChanges.subscribe(() => changeDetectorRef.markForCheck());\n    }\n    /** The label for the current calendar view. */\n    get periodButtonText() {\n        if (this.calendar.currentView == 'month') {\n            return this._dateAdapter\n                .format(this.calendar.activeDate, this._dateFormats.display.monthYearLabel)\n                .toLocaleUpperCase();\n        }\n        if (this.calendar.currentView == 'year') {\n            return this._dateAdapter.getYearName(this.calendar.activeDate);\n        }\n        // The offset from the active year to the \"slot\" for the starting year is the\n        // *actual* first rendered year in the multi-year view, and the last year is\n        // just yearsPerPage - 1 away.\n        const activeYear = this._dateAdapter.getYear(this.calendar.activeDate);\n        const minYearOfPage = activeYear - getActiveOffset(this._dateAdapter, this.calendar.activeDate, this.calendar.minDate, this.calendar.maxDate);\n        const maxYearOfPage = minYearOfPage + yearsPerPage - 1;\n        const minYearName = this._dateAdapter.getYearName(this._dateAdapter.createDate(minYearOfPage, 0, 1));\n        const maxYearName = this._dateAdapter.getYearName(this._dateAdapter.createDate(maxYearOfPage, 0, 1));\n        return this._intl.formatYearRange(minYearName, maxYearName);\n    }\n    get periodButtonLabel() {\n        return this.calendar.currentView == 'month' ?\n            this._intl.switchToMultiYearViewLabel : this._intl.switchToMonthViewLabel;\n    }\n    /** The label for the previous button. */\n    get prevButtonLabel() {\n        return {\n            'month': this._intl.prevMonthLabel,\n            'year': this._intl.prevYearLabel,\n            'multi-year': this._intl.prevMultiYearLabel\n        }[this.calendar.currentView];\n    }\n    /** The label for the next button. */\n    get nextButtonLabel() {\n        return {\n            'month': this._intl.nextMonthLabel,\n            'year': this._intl.nextYearLabel,\n            'multi-year': this._intl.nextMultiYearLabel\n        }[this.calendar.currentView];\n    }\n    /** Handles user clicks on the period label. */\n    currentPeriodClicked() {\n        this.calendar.currentView = this.calendar.currentView == 'month' ? 'multi-year' : 'month';\n    }\n    /** Handles user clicks on the previous button. */\n    previousClicked() {\n        this.calendar.activeDate = this.calendar.currentView == 'month' ?\n            this._dateAdapter.addCalendarMonths(this.calendar.activeDate, -1) :\n            this._dateAdapter.addCalendarYears(this.calendar.activeDate, this.calendar.currentView == 'year' ? -1 : -yearsPerPage);\n    }\n    /** Handles user clicks on the next button. */\n    nextClicked() {\n        this.calendar.activeDate = this.calendar.currentView == 'month' ?\n            this._dateAdapter.addCalendarMonths(this.calendar.activeDate, 1) :\n            this._dateAdapter.addCalendarYears(this.calendar.activeDate, this.calendar.currentView == 'year' ? 1 : yearsPerPage);\n    }\n    /** Whether the previous period button is enabled. */\n    previousEnabled() {\n        if (!this.calendar.minDate) {\n            return true;\n        }\n        return !this.calendar.minDate ||\n            !this._isSameView(this.calendar.activeDate, this.calendar.minDate);\n    }\n    /** Whether the next period button is enabled. */\n    nextEnabled() {\n        return !this.calendar.maxDate ||\n            !this._isSameView(this.calendar.activeDate, this.calendar.maxDate);\n    }\n    /** Whether the two dates represent the same view in the current view mode (month or year). */\n    _isSameView(date1, date2) {\n        if (this.calendar.currentView == 'month') {\n            return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2) &&\n                this._dateAdapter.getMonth(date1) == this._dateAdapter.getMonth(date2);\n        }\n        if (this.calendar.currentView == 'year') {\n            return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2);\n        }\n        // Otherwise we are in 'multi-year' view.\n        return isSameMultiYearView(this._dateAdapter, date1, date2, this.calendar.minDate, this.calendar.maxDate);\n    }\n}\nMatCalendarHeader.ɵfac = function MatCalendarHeader_Factory(t) { return new (t || MatCalendarHeader)(ɵngcc0.ɵɵdirectiveInject(MatDatepickerIntl), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => MatCalendar)), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatCalendarHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCalendarHeader, selectors: [[\"mat-calendar-header\"]], exportAs: [\"matCalendarHeader\"], ngContentSelectors: _c1, decls: 10, vars: 10, consts: [[1, \"mat-calendar-header\"], [1, \"mat-calendar-controls\"], [\"mat-button\", \"\", \"type\", \"button\", \"cdkAriaLive\", \"polite\", 1, \"mat-calendar-period-button\", 3, \"click\"], [1, \"mat-calendar-arrow\"], [1, \"mat-calendar-spacer\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-calendar-previous-button\", 3, \"disabled\", \"click\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-calendar-next-button\", 3, \"disabled\", \"click\"]], template: function MatCalendarHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"button\", 2);\n        ɵngcc0.ɵɵlistener(\"click\", function MatCalendarHeader_Template_button_click_2_listener() { return ctx.currentPeriodClicked(); });\n        ɵngcc0.ɵɵelementStart(3, \"span\");\n        ɵngcc0.ɵɵtext(4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(5, \"div\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(6, \"div\", 4);\n        ɵngcc0.ɵɵprojection(7);\n        ɵngcc0.ɵɵelementStart(8, \"button\", 5);\n        ɵngcc0.ɵɵlistener(\"click\", function MatCalendarHeader_Template_button_click_8_listener() { return ctx.previousClicked(); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(9, \"button\", 6);\n        ɵngcc0.ɵɵlistener(\"click\", function MatCalendarHeader_Template_button_click_9_listener() { return ctx.nextClicked(); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.periodButtonLabel)(\"aria-describedby\", ctx._buttonDescriptionId);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵattribute(\"id\", ctx._buttonDescriptionId);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate(ctx.periodButtonText);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"mat-calendar-invert\", ctx.calendar.currentView !== \"month\");\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"disabled\", !ctx.previousEnabled());\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.prevButtonLabel);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"disabled\", !ctx.nextEnabled());\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.nextButtonLabel);\n    } }, directives: [ɵngcc4.MatButton, ɵngcc5.CdkAriaLive], encapsulation: 2, changeDetection: 0 });\nMatCalendarHeader.ctorParameters = () => [\n    { type: MatDatepickerIntl },\n    { type: MatCalendar, decorators: [{ type: Inject, args: [forwardRef(() => MatCalendar),] }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: ChangeDetectorRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCalendarHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-calendar-header',\n                template: \"<div class=\\\"mat-calendar-header\\\">\\n  <div class=\\\"mat-calendar-controls\\\">\\n    <button mat-button type=\\\"button\\\" class=\\\"mat-calendar-period-button\\\"\\n            (click)=\\\"currentPeriodClicked()\\\" [attr.aria-label]=\\\"periodButtonLabel\\\"\\n            [attr.aria-describedby]=\\\"_buttonDescriptionId\\\"\\n            cdkAriaLive=\\\"polite\\\">\\n      <span [attr.id]=\\\"_buttonDescriptionId\\\">{{periodButtonText}}</span>\\n      <div class=\\\"mat-calendar-arrow\\\"\\n           [class.mat-calendar-invert]=\\\"calendar.currentView !== 'month'\\\"></div>\\n    </button>\\n\\n    <div class=\\\"mat-calendar-spacer\\\"></div>\\n\\n    <ng-content></ng-content>\\n\\n    <button mat-icon-button type=\\\"button\\\" class=\\\"mat-calendar-previous-button\\\"\\n            [disabled]=\\\"!previousEnabled()\\\" (click)=\\\"previousClicked()\\\"\\n            [attr.aria-label]=\\\"prevButtonLabel\\\">\\n    </button>\\n\\n    <button mat-icon-button type=\\\"button\\\" class=\\\"mat-calendar-next-button\\\"\\n            [disabled]=\\\"!nextEnabled()\\\" (click)=\\\"nextClicked()\\\"\\n            [attr.aria-label]=\\\"nextButtonLabel\\\">\\n    </button>\\n  </div>\\n</div>\\n\",\n                exportAs: 'matCalendarHeader',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: MatDatepickerIntl }, { type: MatCalendar, decorators: [{\n                type: Inject,\n                args: [forwardRef(() => MatCalendar)]\n            }] }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, null); })();\n/**\n * A calendar that is used as part of the datepicker.\n * @docs-private\n */\nclass MatCalendar {\n    constructor(_intl, _dateAdapter, _dateFormats, _changeDetectorRef) {\n        this._dateAdapter = _dateAdapter;\n        this._dateFormats = _dateFormats;\n        this._changeDetectorRef = _changeDetectorRef;\n        /**\n         * Used for scheduling that focus should be moved to the active cell on the next tick.\n         * We need to schedule it, rather than do it immediately, because we have to wait\n         * for Angular to re-evaluate the view children.\n         */\n        this._moveFocusOnNextTick = false;\n        /** Whether the calendar should be started in month or year view. */\n        this.startView = 'month';\n        /** Emits when the currently selected date changes. */\n        this.selectedChange = new EventEmitter();\n        /**\n         * Emits the year chosen in multiyear view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.yearSelected = new EventEmitter();\n        /**\n         * Emits the month chosen in year view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.monthSelected = new EventEmitter();\n        /**\n         * Emits when the current view changes.\n         */\n        this.viewChanged = new EventEmitter(true);\n        /** Emits when any date is selected. */\n        this._userSelection = new EventEmitter();\n        /**\n         * Emits whenever there is a state change that the header may need to respond to.\n         */\n        this.stateChanges = new Subject();\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._dateAdapter) {\n                throw createMissingDateImplError('DateAdapter');\n            }\n            if (!this._dateFormats) {\n                throw createMissingDateImplError('MAT_DATE_FORMATS');\n            }\n        }\n        this._intlChanges = _intl.changes.subscribe(() => {\n            _changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        });\n    }\n    /** A date representing the period (month or year) to start the calendar in. */\n    get startAt() { return this._startAt; }\n    set startAt(value) {\n        this._startAt = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** The currently selected date. */\n    get selected() { return this._selected; }\n    set selected(value) {\n        if (value instanceof DateRange) {\n            this._selected = value;\n        }\n        else {\n            this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        }\n    }\n    /** The minimum selectable date. */\n    get minDate() { return this._minDate; }\n    set minDate(value) {\n        this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** The maximum selectable date. */\n    get maxDate() { return this._maxDate; }\n    set maxDate(value) {\n        this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The current active date. This determines which time period is shown and which date is\n     * highlighted when using keyboard navigation.\n     */\n    get activeDate() { return this._clampedActiveDate; }\n    set activeDate(value) {\n        this._clampedActiveDate = this._dateAdapter.clampDate(value, this.minDate, this.maxDate);\n        this.stateChanges.next();\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Whether the calendar is in month view. */\n    get currentView() { return this._currentView; }\n    set currentView(value) {\n        const viewChangedResult = this._currentView !== value ? value : null;\n        this._currentView = value;\n        this._moveFocusOnNextTick = true;\n        this._changeDetectorRef.markForCheck();\n        if (viewChangedResult) {\n            this.viewChanged.emit(viewChangedResult);\n        }\n    }\n    ngAfterContentInit() {\n        this._calendarHeaderPortal = new ComponentPortal(this.headerComponent || MatCalendarHeader);\n        this.activeDate = this.startAt || this._dateAdapter.today();\n        // Assign to the private property since we don't want to move focus on init.\n        this._currentView = this.startView;\n    }\n    ngAfterViewChecked() {\n        if (this._moveFocusOnNextTick) {\n            this._moveFocusOnNextTick = false;\n            this.focusActiveCell();\n        }\n    }\n    ngOnDestroy() {\n        this._intlChanges.unsubscribe();\n        this.stateChanges.complete();\n    }\n    ngOnChanges(changes) {\n        const change = changes['minDate'] || changes['maxDate'] || changes['dateFilter'];\n        if (change && !change.firstChange) {\n            const view = this._getCurrentViewComponent();\n            if (view) {\n                // We need to `detectChanges` manually here, because the `minDate`, `maxDate` etc. are\n                // passed down to the view via data bindings which won't be up-to-date when we call `_init`.\n                this._changeDetectorRef.detectChanges();\n                view._init();\n            }\n        }\n        this.stateChanges.next();\n    }\n    focusActiveCell() {\n        this._getCurrentViewComponent()._focusActiveCell(false);\n    }\n    /** Updates today's date after an update of the active date */\n    updateTodaysDate() {\n        const currentView = this.currentView;\n        let view;\n        if (currentView === 'month') {\n            view = this.monthView;\n        }\n        else if (currentView === 'year') {\n            view = this.yearView;\n        }\n        else {\n            view = this.multiYearView;\n        }\n        view._init();\n    }\n    /** Handles date selection in the month view. */\n    _dateSelected(event) {\n        const date = event.value;\n        if (this.selected instanceof DateRange ||\n            (date && !this._dateAdapter.sameDate(date, this.selected))) {\n            this.selectedChange.emit(date);\n        }\n        this._userSelection.emit(event);\n    }\n    /** Handles year selection in the multiyear view. */\n    _yearSelectedInMultiYearView(normalizedYear) {\n        this.yearSelected.emit(normalizedYear);\n    }\n    /** Handles month selection in the year view. */\n    _monthSelectedInYearView(normalizedMonth) {\n        this.monthSelected.emit(normalizedMonth);\n    }\n    /** Handles year/month selection in the multi-year/year views. */\n    _goToDateInView(date, view) {\n        this.activeDate = date;\n        this.currentView = view;\n    }\n    /** Returns the component instance that corresponds to the current calendar view. */\n    _getCurrentViewComponent() {\n        return this.monthView || this.yearView || this.multiYearView;\n    }\n}\nMatCalendar.ɵfac = function MatCalendar_Factory(t) { return new (t || MatCalendar)(ɵngcc0.ɵɵdirectiveInject(MatDatepickerIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatCalendar.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCalendar, selectors: [[\"mat-calendar\"]], viewQuery: function MatCalendar_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatMonthView, 1);\n        ɵngcc0.ɵɵviewQuery(MatYearView, 1);\n        ɵngcc0.ɵɵviewQuery(MatMultiYearView, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.monthView = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.yearView = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.multiYearView = _t.first);\n    } }, hostAttrs: [1, \"mat-calendar\"], inputs: { startView: \"startView\", startAt: \"startAt\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", headerComponent: \"headerComponent\", dateFilter: \"dateFilter\", dateClass: \"dateClass\", comparisonStart: \"comparisonStart\", comparisonEnd: \"comparisonEnd\" }, outputs: { selectedChange: \"selectedChange\", yearSelected: \"yearSelected\", monthSelected: \"monthSelected\", viewChanged: \"viewChanged\", _userSelection: \"_userSelection\" }, exportAs: [\"matCalendar\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER]), ɵngcc0.ɵɵNgOnChangesFeature], decls: 5, vars: 5, consts: [[3, \"cdkPortalOutlet\"], [\"cdkMonitorSubtreeFocus\", \"\", \"tabindex\", \"-1\", 1, \"mat-calendar-content\", 3, \"ngSwitch\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\", \"comparisonStart\", \"comparisonEnd\", \"activeDateChange\", \"_userSelection\", 4, \"ngSwitchCase\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\", \"activeDateChange\", \"monthSelected\", \"selectedChange\", 4, \"ngSwitchCase\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\", \"activeDateChange\", \"yearSelected\", \"selectedChange\", 4, \"ngSwitchCase\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\", \"comparisonStart\", \"comparisonEnd\", \"activeDateChange\", \"_userSelection\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\", \"activeDateChange\", \"monthSelected\", \"selectedChange\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\", \"activeDateChange\", \"yearSelected\", \"selectedChange\"]], template: function MatCalendar_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, MatCalendar_ng_template_0_Template, 0, 0, \"ng-template\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatCalendar_mat_month_view_2_Template, 1, 8, \"mat-month-view\", 2);\n        ɵngcc0.ɵɵtemplate(3, MatCalendar_mat_year_view_3_Template, 1, 6, \"mat-year-view\", 3);\n        ɵngcc0.ɵɵtemplate(4, MatCalendar_mat_multi_year_view_4_Template, 1, 6, \"mat-multi-year-view\", 4);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", ctx._calendarHeaderPortal);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.currentView);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"month\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"year\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"multi-year\");\n    } }, directives: [ɵngcc6.CdkPortalOutlet, ɵngcc5.CdkMonitorFocus, ɵngcc1.NgSwitch, ɵngcc1.NgSwitchCase, MatMonthView, MatYearView, MatMultiYearView], styles: [\".mat-calendar{display:block}.mat-calendar-header{padding:8px 8px 0 8px}.mat-calendar-content{padding:0 8px 8px 8px;outline:none}.mat-calendar-controls{display:flex;margin:5% calc(33% / 7 - 16px)}.mat-calendar-controls .mat-icon-button:hover .mat-button-focus-overlay{opacity:.04}.mat-calendar-spacer{flex:1 1 auto}.mat-calendar-period-button{min-width:0}.mat-calendar-arrow{display:inline-block;width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top-width:5px;border-top-style:solid;margin:0 0 0 5px;vertical-align:middle}.mat-calendar-arrow.mat-calendar-invert{transform:rotate(180deg)}[dir=rtl] .mat-calendar-arrow{margin:0 5px 0 0}.mat-calendar-previous-button,.mat-calendar-next-button{position:relative}.mat-calendar-previous-button::after,.mat-calendar-next-button::after{top:0;left:0;right:0;bottom:0;position:absolute;content:\\\"\\\";margin:15.5px;border:0 solid currentColor;border-top-width:2px}[dir=rtl] .mat-calendar-previous-button,[dir=rtl] .mat-calendar-next-button{transform:rotate(180deg)}.mat-calendar-previous-button::after{border-left-width:2px;transform:translateX(2px) rotate(-45deg)}.mat-calendar-next-button::after{border-right-width:2px;transform:translateX(-2px) rotate(45deg)}.mat-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mat-calendar-table-header th{text-align:center;padding:0 0 8px 0}.mat-calendar-table-header-divider{position:relative;height:1px}.mat-calendar-table-header-divider::after{content:\\\"\\\";position:absolute;top:0;left:-8px;right:-8px;height:1px}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatCalendar.ctorParameters = () => [\n    { type: MatDatepickerIntl },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: ChangeDetectorRef }\n];\nMatCalendar.propDecorators = {\n    headerComponent: [{ type: Input }],\n    startAt: [{ type: Input }],\n    startView: [{ type: Input }],\n    selected: [{ type: Input }],\n    minDate: [{ type: Input }],\n    maxDate: [{ type: Input }],\n    dateFilter: [{ type: Input }],\n    dateClass: [{ type: Input }],\n    comparisonStart: [{ type: Input }],\n    comparisonEnd: [{ type: Input }],\n    selectedChange: [{ type: Output }],\n    yearSelected: [{ type: Output }],\n    monthSelected: [{ type: Output }],\n    viewChanged: [{ type: Output }],\n    _userSelection: [{ type: Output }],\n    monthView: [{ type: ViewChild, args: [MatMonthView,] }],\n    yearView: [{ type: ViewChild, args: [MatYearView,] }],\n    multiYearView: [{ type: ViewChild, args: [MatMultiYearView,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCalendar, [{\n        type: Component,\n        args: [{\n                selector: 'mat-calendar',\n                template: \"<ng-template [cdkPortalOutlet]=\\\"_calendarHeaderPortal\\\"></ng-template>\\n\\n<div class=\\\"mat-calendar-content\\\" [ngSwitch]=\\\"currentView\\\" cdkMonitorSubtreeFocus tabindex=\\\"-1\\\">\\n  <mat-month-view\\n      *ngSwitchCase=\\\"'month'\\\"\\n      [(activeDate)]=\\\"activeDate\\\"\\n      [selected]=\\\"selected\\\"\\n      [dateFilter]=\\\"dateFilter\\\"\\n      [maxDate]=\\\"maxDate\\\"\\n      [minDate]=\\\"minDate\\\"\\n      [dateClass]=\\\"dateClass\\\"\\n      [comparisonStart]=\\\"comparisonStart\\\"\\n      [comparisonEnd]=\\\"comparisonEnd\\\"\\n      (_userSelection)=\\\"_dateSelected($event)\\\">\\n  </mat-month-view>\\n\\n  <mat-year-view\\n      *ngSwitchCase=\\\"'year'\\\"\\n      [(activeDate)]=\\\"activeDate\\\"\\n      [selected]=\\\"selected\\\"\\n      [dateFilter]=\\\"dateFilter\\\"\\n      [maxDate]=\\\"maxDate\\\"\\n      [minDate]=\\\"minDate\\\"\\n      [dateClass]=\\\"dateClass\\\"\\n      (monthSelected)=\\\"_monthSelectedInYearView($event)\\\"\\n      (selectedChange)=\\\"_goToDateInView($event, 'month')\\\">\\n  </mat-year-view>\\n\\n  <mat-multi-year-view\\n      *ngSwitchCase=\\\"'multi-year'\\\"\\n      [(activeDate)]=\\\"activeDate\\\"\\n      [selected]=\\\"selected\\\"\\n      [dateFilter]=\\\"dateFilter\\\"\\n      [maxDate]=\\\"maxDate\\\"\\n      [minDate]=\\\"minDate\\\"\\n      [dateClass]=\\\"dateClass\\\"\\n      (yearSelected)=\\\"_yearSelectedInMultiYearView($event)\\\"\\n      (selectedChange)=\\\"_goToDateInView($event, 'year')\\\">\\n  </mat-multi-year-view>\\n</div>\\n\",\n                host: {\n                    'class': 'mat-calendar'\n                },\n                exportAs: 'matCalendar',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER],\n                styles: [\".mat-calendar{display:block}.mat-calendar-header{padding:8px 8px 0 8px}.mat-calendar-content{padding:0 8px 8px 8px;outline:none}.mat-calendar-controls{display:flex;margin:5% calc(33% / 7 - 16px)}.mat-calendar-controls .mat-icon-button:hover .mat-button-focus-overlay{opacity:.04}.mat-calendar-spacer{flex:1 1 auto}.mat-calendar-period-button{min-width:0}.mat-calendar-arrow{display:inline-block;width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top-width:5px;border-top-style:solid;margin:0 0 0 5px;vertical-align:middle}.mat-calendar-arrow.mat-calendar-invert{transform:rotate(180deg)}[dir=rtl] .mat-calendar-arrow{margin:0 5px 0 0}.mat-calendar-previous-button,.mat-calendar-next-button{position:relative}.mat-calendar-previous-button::after,.mat-calendar-next-button::after{top:0;left:0;right:0;bottom:0;position:absolute;content:\\\"\\\";margin:15.5px;border:0 solid currentColor;border-top-width:2px}[dir=rtl] .mat-calendar-previous-button,[dir=rtl] .mat-calendar-next-button{transform:rotate(180deg)}.mat-calendar-previous-button::after{border-left-width:2px;transform:translateX(2px) rotate(-45deg)}.mat-calendar-next-button::after{border-right-width:2px;transform:translateX(-2px) rotate(45deg)}.mat-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mat-calendar-table-header th{text-align:center;padding:0 0 8px 0}.mat-calendar-table-header-divider{position:relative;height:1px}.mat-calendar-table-header-divider::after{content:\\\"\\\";position:absolute;top:0;left:-8px;right:-8px;height:1px}\\n\"]\n            }]\n    }], function () { return [{ type: MatDatepickerIntl }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { startView: [{\n            type: Input\n        }], selectedChange: [{\n            type: Output\n        }], yearSelected: [{\n            type: Output\n        }], monthSelected: [{\n            type: Output\n        }], viewChanged: [{\n            type: Output\n        }], _userSelection: [{\n            type: Output\n        }], startAt: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], minDate: [{\n            type: Input\n        }], maxDate: [{\n            type: Input\n        }], headerComponent: [{\n            type: Input\n        }], dateFilter: [{\n            type: Input\n        }], dateClass: [{\n            type: Input\n        }], comparisonStart: [{\n            type: Input\n        }], comparisonEnd: [{\n            type: Input\n        }], monthView: [{\n            type: ViewChild,\n            args: [MatMonthView]\n        }], yearView: [{\n            type: ViewChild,\n            args: [MatYearView]\n        }], multiYearView: [{\n            type: ViewChild,\n            args: [MatMultiYearView]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the Material datepicker.\n * @docs-private\n */\nconst matDatepickerAnimations = {\n    /** Transforms the height of the datepicker's calendar. */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(1, 0.8)'\n        })),\n        transition('void => enter', animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({\n            opacity: 1,\n            transform: 'scale(1, 1)'\n        }))),\n        transition('* => void', animate('100ms linear', style({ opacity: 0 })))\n    ]),\n    /** Fades in the content of the calendar. */\n    fadeInCalendar: trigger('fadeInCalendar', [\n        state('void', style({ opacity: 0 })),\n        state('enter', style({ opacity: 1 })),\n        // TODO(crisbeto): this animation should be removed since it isn't quite on spec, but we\n        // need to keep it until #12440 gets in, otherwise the exit animation will look glitchy.\n        transition('void => *', animate('120ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'))\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate a unique ID for each datepicker instance. */\nlet datepickerUid = 0;\n/** Injection token that determines the scroll handling while the calendar is open. */\nconst MAT_DATEPICKER_SCROLL_STRATEGY = new InjectionToken('mat-datepicker-scroll-strategy');\n/** @docs-private */\nfunction MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** @docs-private */\nconst MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_DATEPICKER_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY,\n};\n// Boilerplate for applying mixins to MatDatepickerContent.\n/** @docs-private */\nclass MatDatepickerContentBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatDatepickerContentMixinBase = mixinColor(MatDatepickerContentBase);\n/**\n * Component used as the content for the datepicker dialog and popup. We use this instead of using\n * MatCalendar directly as the content so we can control the initial focus. This also gives us a\n * place to put additional features of the popup that are not part of the calendar itself in the\n * future. (e.g. confirmation buttons).\n * @docs-private\n */\nclass MatDatepickerContent extends _MatDatepickerContentMixinBase {\n    constructor(elementRef, _changeDetectorRef, _globalModel, _dateAdapter, _rangeSelectionStrategy, \n    /**\n     * @deprecated `intl` argument to become required.\n     * @breaking-change 12.0.0\n     */\n    intl) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._globalModel = _globalModel;\n        this._dateAdapter = _dateAdapter;\n        this._rangeSelectionStrategy = _rangeSelectionStrategy;\n        this._subscriptions = new Subscription();\n        /** Current state of the animation. */\n        this._animationState = 'enter';\n        /** Emits when an animation has finished. */\n        this._animationDone = new Subject();\n        /** Portal with projected action buttons. */\n        this._actionsPortal = null;\n        // @breaking-change 12.0.0 Remove fallback for `intl`.\n        this._closeButtonText = (intl === null || intl === void 0 ? void 0 : intl.closeCalendarLabel) || 'Close calendar';\n    }\n    ngOnInit() {\n        // If we have actions, clone the model so that we have the ability to cancel the selection,\n        // otherwise update the global model directly. Note that we want to assign this as soon as\n        // possible, but `_actionsPortal` isn't available in the constructor so we do it in `ngOnInit`.\n        this._model = this._actionsPortal ? this._globalModel.clone() : this._globalModel;\n    }\n    ngAfterViewInit() {\n        this._subscriptions.add(this.datepicker.stateChanges.subscribe(() => {\n            this._changeDetectorRef.markForCheck();\n        }));\n        this._calendar.focusActiveCell();\n    }\n    ngOnDestroy() {\n        this._subscriptions.unsubscribe();\n        this._animationDone.complete();\n    }\n    _handleUserSelection(event) {\n        const selection = this._model.selection;\n        const value = event.value;\n        const isRange = selection instanceof DateRange;\n        // If we're selecting a range and we have a selection strategy, always pass the value through\n        // there. Otherwise don't assign null values to the model, unless we're selecting a range.\n        // A null value when picking a range means that the user cancelled the selection (e.g. by\n        // pressing escape), whereas when selecting a single value it means that the value didn't\n        // change. This isn't very intuitive, but it's here for backwards-compatibility.\n        if (isRange && this._rangeSelectionStrategy) {\n            const newSelection = this._rangeSelectionStrategy.selectionFinished(value, selection, event.event);\n            this._model.updateSelection(newSelection, this);\n        }\n        else if (value && (isRange ||\n            !this._dateAdapter.sameDate(value, selection))) {\n            this._model.add(value);\n        }\n        // Delegate closing the popup to the actions.\n        if ((!this._model || this._model.isComplete()) && !this._actionsPortal) {\n            this.datepicker.close();\n        }\n    }\n    _startExitAnimation() {\n        this._animationState = 'void';\n        this._changeDetectorRef.markForCheck();\n    }\n    _getSelected() {\n        return this._model.selection;\n    }\n    /** Applies the current pending selection to the global model. */\n    _applyPendingSelection() {\n        if (this._model !== this._globalModel) {\n            this._globalModel.updateSelection(this._model.selection, this);\n        }\n    }\n}\nMatDatepickerContent.ɵfac = function MatDatepickerContent_Factory(t) { return new (t || MatDatepickerContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MatDateSelectionModel), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_RANGE_SELECTION_STRATEGY, 8), ɵngcc0.ɵɵdirectiveInject(MatDatepickerIntl)); };\nMatDatepickerContent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDatepickerContent, selectors: [[\"mat-datepicker-content\"]], viewQuery: function MatDatepickerContent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatCalendar, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._calendar = _t.first);\n    } }, hostAttrs: [1, \"mat-datepicker-content\"], hostVars: 3, hostBindings: function MatDatepickerContent_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵsyntheticHostListener(\"@transformPanel.done\", function MatDatepickerContent_animation_transformPanel_done_HostBindingHandler() { return ctx._animationDone.next(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵsyntheticHostProperty(\"@transformPanel\", ctx._animationState);\n        ɵngcc0.ɵɵclassProp(\"mat-datepicker-content-touch\", ctx.datepicker.touchUi);\n    } }, inputs: { color: \"color\" }, exportAs: [\"matDatepickerContent\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 5, vars: 20, consts: [[\"cdkTrapFocus\", \"\", 1, \"mat-datepicker-content-container\"], [3, \"id\", \"ngClass\", \"startAt\", \"startView\", \"minDate\", \"maxDate\", \"dateFilter\", \"headerComponent\", \"selected\", \"dateClass\", \"comparisonStart\", \"comparisonEnd\", \"yearSelected\", \"monthSelected\", \"viewChanged\", \"_userSelection\"], [3, \"cdkPortalOutlet\"], [\"type\", \"button\", \"mat-raised-button\", \"\", 1, \"mat-datepicker-close-button\", 3, \"color\", \"focus\", \"blur\", \"click\"]], template: function MatDatepickerContent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"mat-calendar\", 1);\n        ɵngcc0.ɵɵlistener(\"yearSelected\", function MatDatepickerContent_Template_mat_calendar_yearSelected_1_listener($event) { return ctx.datepicker._selectYear($event); })(\"monthSelected\", function MatDatepickerContent_Template_mat_calendar_monthSelected_1_listener($event) { return ctx.datepicker._selectMonth($event); })(\"viewChanged\", function MatDatepickerContent_Template_mat_calendar_viewChanged_1_listener($event) { return ctx.datepicker._viewChanged($event); })(\"_userSelection\", function MatDatepickerContent_Template_mat_calendar__userSelection_1_listener($event) { return ctx._handleUserSelection($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(2, MatDatepickerContent_ng_template_2_Template, 0, 0, \"ng-template\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"button\", 3);\n        ɵngcc0.ɵɵlistener(\"focus\", function MatDatepickerContent_Template_button_focus_3_listener() { return ctx._closeButtonFocused = true; })(\"blur\", function MatDatepickerContent_Template_button_blur_3_listener() { return ctx._closeButtonFocused = false; })(\"click\", function MatDatepickerContent_Template_button_click_3_listener() { return ctx.datepicker.close(); });\n        ɵngcc0.ɵɵtext(4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-datepicker-content-container-with-actions\", ctx._actionsPortal);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.datepicker.id)(\"ngClass\", ctx.datepicker.panelClass)(\"startAt\", ctx.datepicker.startAt)(\"startView\", ctx.datepicker.startView)(\"minDate\", ctx.datepicker._getMinDate())(\"maxDate\", ctx.datepicker._getMaxDate())(\"dateFilter\", ctx.datepicker._getDateFilter())(\"headerComponent\", ctx.datepicker.calendarHeaderComponent)(\"selected\", ctx._getSelected())(\"dateClass\", ctx.datepicker.dateClass)(\"comparisonStart\", ctx.comparisonStart)(\"comparisonEnd\", ctx.comparisonEnd)(\"@fadeInCalendar\", \"enter\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", ctx._actionsPortal);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"cdk-visually-hidden\", !ctx._closeButtonFocused);\n        ɵngcc0.ɵɵproperty(\"color\", ctx.color || \"primary\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate(ctx._closeButtonText);\n    } }, directives: [ɵngcc5.CdkTrapFocus, MatCalendar, ɵngcc1.NgClass, ɵngcc6.CdkPortalOutlet, ɵngcc4.MatButton], styles: [\".mat-datepicker-content{display:block;border-radius:4px}.mat-datepicker-content .mat-calendar{width:296px;height:354px}.mat-datepicker-content .mat-datepicker-close-button{position:absolute;top:100%;left:0;margin-top:8px}.ng-animating .mat-datepicker-content .mat-datepicker-close-button{display:none}.mat-datepicker-content-container{display:flex;flex-direction:column;justify-content:space-between}.mat-datepicker-content-touch{display:block;max-height:80vh;overflow:auto;margin:-24px}.mat-datepicker-content-touch .mat-datepicker-content-container{min-height:312px;max-height:788px;min-width:250px;max-width:750px}.mat-datepicker-content-touch .mat-calendar{width:100%;height:auto}@media all and (orientation: landscape){.mat-datepicker-content-touch .mat-datepicker-content-container{width:64vh;height:80vh}}@media all and (orientation: portrait){.mat-datepicker-content-touch .mat-datepicker-content-container{width:80vw;height:100vw}.mat-datepicker-content-touch .mat-datepicker-content-container-with-actions{height:115vw}}\\n\"], encapsulation: 2, data: { animation: [\n            matDatepickerAnimations.transformPanel,\n            matDatepickerAnimations.fadeInCalendar,\n        ] }, changeDetection: 0 });\nMatDatepickerContent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: MatDateSelectionModel },\n    { type: DateAdapter },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_RANGE_SELECTION_STRATEGY,] }] },\n    { type: MatDatepickerIntl }\n];\nMatDatepickerContent.propDecorators = {\n    _calendar: [{ type: ViewChild, args: [MatCalendar,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerContent, [{\n        type: Component,\n        args: [{\n                selector: 'mat-datepicker-content',\n                template: \"<div\\n  cdkTrapFocus\\n  class=\\\"mat-datepicker-content-container\\\"\\n  [class.mat-datepicker-content-container-with-actions]=\\\"_actionsPortal\\\">\\n  <mat-calendar\\n    [id]=\\\"datepicker.id\\\"\\n    [ngClass]=\\\"datepicker.panelClass\\\"\\n    [startAt]=\\\"datepicker.startAt\\\"\\n    [startView]=\\\"datepicker.startView\\\"\\n    [minDate]=\\\"datepicker._getMinDate()\\\"\\n    [maxDate]=\\\"datepicker._getMaxDate()\\\"\\n    [dateFilter]=\\\"datepicker._getDateFilter()\\\"\\n    [headerComponent]=\\\"datepicker.calendarHeaderComponent\\\"\\n    [selected]=\\\"_getSelected()\\\"\\n    [dateClass]=\\\"datepicker.dateClass\\\"\\n    [comparisonStart]=\\\"comparisonStart\\\"\\n    [comparisonEnd]=\\\"comparisonEnd\\\"\\n    [@fadeInCalendar]=\\\"'enter'\\\"\\n    (yearSelected)=\\\"datepicker._selectYear($event)\\\"\\n    (monthSelected)=\\\"datepicker._selectMonth($event)\\\"\\n    (viewChanged)=\\\"datepicker._viewChanged($event)\\\"\\n    (_userSelection)=\\\"_handleUserSelection($event)\\\"></mat-calendar>\\n\\n  <ng-template [cdkPortalOutlet]=\\\"_actionsPortal\\\"></ng-template>\\n\\n  <!-- Invisible close button for screen reader users. -->\\n  <button\\n    type=\\\"button\\\"\\n    mat-raised-button\\n    [color]=\\\"color || 'primary'\\\"\\n    class=\\\"mat-datepicker-close-button\\\"\\n    [class.cdk-visually-hidden]=\\\"!_closeButtonFocused\\\"\\n    (focus)=\\\"_closeButtonFocused = true\\\"\\n    (blur)=\\\"_closeButtonFocused = false\\\"\\n    (click)=\\\"datepicker.close()\\\">{{ _closeButtonText }}</button>\\n</div>\\n\",\n                host: {\n                    'class': 'mat-datepicker-content',\n                    '[@transformPanel]': '_animationState',\n                    '(@transformPanel.done)': '_animationDone.next()',\n                    '[class.mat-datepicker-content-touch]': 'datepicker.touchUi'\n                },\n                animations: [\n                    matDatepickerAnimations.transformPanel,\n                    matDatepickerAnimations.fadeInCalendar,\n                ],\n                exportAs: 'matDatepickerContent',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['color'],\n                styles: [\".mat-datepicker-content{display:block;border-radius:4px}.mat-datepicker-content .mat-calendar{width:296px;height:354px}.mat-datepicker-content .mat-datepicker-close-button{position:absolute;top:100%;left:0;margin-top:8px}.ng-animating .mat-datepicker-content .mat-datepicker-close-button{display:none}.mat-datepicker-content-container{display:flex;flex-direction:column;justify-content:space-between}.mat-datepicker-content-touch{display:block;max-height:80vh;overflow:auto;margin:-24px}.mat-datepicker-content-touch .mat-datepicker-content-container{min-height:312px;max-height:788px;min-width:250px;max-width:750px}.mat-datepicker-content-touch .mat-calendar{width:100%;height:auto}@media all and (orientation: landscape){.mat-datepicker-content-touch .mat-datepicker-content-container{width:64vh;height:80vh}}@media all and (orientation: portrait){.mat-datepicker-content-touch .mat-datepicker-content-container{width:80vw;height:100vw}.mat-datepicker-content-touch .mat-datepicker-content-container-with-actions{height:115vw}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: MatDateSelectionModel }, { type: ɵngcc2.DateAdapter }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_RANGE_SELECTION_STRATEGY]\n            }] }, { type: MatDatepickerIntl }]; }, { _calendar: [{\n            type: ViewChild,\n            args: [MatCalendar]\n        }] }); })();\n/** Base class for a datepicker. */\nclass MatDatepickerBase {\n    constructor(_dialog, _overlay, _ngZone, _viewContainerRef, scrollStrategy, _dateAdapter, _dir, _document, _model) {\n        this._dialog = _dialog;\n        this._overlay = _overlay;\n        this._ngZone = _ngZone;\n        this._viewContainerRef = _viewContainerRef;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        this._document = _document;\n        this._model = _model;\n        this._inputStateChanges = Subscription.EMPTY;\n        /** The view that the calendar should start in. */\n        this.startView = 'month';\n        this._touchUi = false;\n        /** Preferred position of the datepicker in the X axis. */\n        this.xPosition = 'start';\n        /** Preferred position of the datepicker in the Y axis. */\n        this.yPosition = 'below';\n        this._restoreFocus = true;\n        /**\n         * Emits selected year in multiyear view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.yearSelected = new EventEmitter();\n        /**\n         * Emits selected month in year view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.monthSelected = new EventEmitter();\n        /**\n         * Emits when the current view changes.\n         */\n        this.viewChanged = new EventEmitter(true);\n        /** Emits when the datepicker has been opened. */\n        this.openedStream = new EventEmitter();\n        /** Emits when the datepicker has been closed. */\n        this.closedStream = new EventEmitter();\n        this._opened = false;\n        /** The id for the datepicker calendar. */\n        this.id = `mat-datepicker-${datepickerUid++}`;\n        /** The element that was focused before the datepicker was opened. */\n        this._focusedElementBeforeOpen = null;\n        /** Unique class that will be added to the backdrop so that the test harnesses can look it up. */\n        this._backdropHarnessClass = `${this.id}-backdrop`;\n        /** Emits when the datepicker's state changes. */\n        this.stateChanges = new Subject();\n        if (!this._dateAdapter && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        this._scrollStrategy = scrollStrategy;\n    }\n    /** The date to open the calendar to initially. */\n    get startAt() {\n        // If an explicit startAt is set we start there, otherwise we start at whatever the currently\n        // selected value is.\n        return this._startAt || (this.datepickerInput ? this.datepickerInput.getStartValue() : null);\n    }\n    set startAt(value) {\n        this._startAt = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** Color palette to use on the datepicker's calendar. */\n    get color() {\n        return this._color ||\n            (this.datepickerInput ? this.datepickerInput.getThemePalette() : undefined);\n    }\n    set color(value) {\n        this._color = value;\n    }\n    /**\n     * Whether the calendar UI is in touch mode. In touch mode the calendar opens in a dialog rather\n     * than a popup and elements have more padding to allow for bigger touch targets.\n     */\n    get touchUi() { return this._touchUi; }\n    set touchUi(value) {\n        this._touchUi = coerceBooleanProperty(value);\n    }\n    /** Whether the datepicker pop-up should be disabled. */\n    get disabled() {\n        return this._disabled === undefined && this.datepickerInput ?\n            this.datepickerInput.disabled : !!this._disabled;\n    }\n    set disabled(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this.stateChanges.next(undefined);\n        }\n    }\n    /**\n     * Whether to restore focus to the previously-focused element when the calendar is closed.\n     * Note that automatic focus restoration is an accessibility feature and it is recommended that\n     * you provide your own equivalent, if you decide to turn it off.\n     */\n    get restoreFocus() { return this._restoreFocus; }\n    set restoreFocus(value) {\n        this._restoreFocus = coerceBooleanProperty(value);\n    }\n    /**\n     * Classes to be passed to the date picker panel.\n     * Supports string and string array values, similar to `ngClass`.\n     */\n    get panelClass() { return this._panelClass; }\n    set panelClass(value) {\n        this._panelClass = coerceStringArray(value);\n    }\n    /** Whether the calendar is open. */\n    get opened() { return this._opened; }\n    set opened(value) {\n        coerceBooleanProperty(value) ? this.open() : this.close();\n    }\n    /** The minimum selectable date. */\n    _getMinDate() {\n        return this.datepickerInput && this.datepickerInput.min;\n    }\n    /** The maximum selectable date. */\n    _getMaxDate() {\n        return this.datepickerInput && this.datepickerInput.max;\n    }\n    _getDateFilter() {\n        return this.datepickerInput && this.datepickerInput.dateFilter;\n    }\n    ngOnChanges(changes) {\n        const positionChange = changes['xPosition'] || changes['yPosition'];\n        if (positionChange && !positionChange.firstChange && this._popupRef) {\n            this._setConnectedPositions(this._popupRef.getConfig().positionStrategy);\n            if (this.opened) {\n                this._popupRef.updatePosition();\n            }\n        }\n        this.stateChanges.next(undefined);\n    }\n    ngOnDestroy() {\n        this._destroyPopup();\n        this.close();\n        this._inputStateChanges.unsubscribe();\n        this.stateChanges.complete();\n    }\n    /** Selects the given date */\n    select(date) {\n        this._model.add(date);\n    }\n    /** Emits the selected year in multiyear view */\n    _selectYear(normalizedYear) {\n        this.yearSelected.emit(normalizedYear);\n    }\n    /** Emits selected month in year view */\n    _selectMonth(normalizedMonth) {\n        this.monthSelected.emit(normalizedMonth);\n    }\n    /** Emits changed view */\n    _viewChanged(view) {\n        this.viewChanged.emit(view);\n    }\n    /**\n     * Register an input with this datepicker.\n     * @param input The datepicker input to register with this datepicker.\n     * @returns Selection model that the input should hook itself up to.\n     */\n    registerInput(input) {\n        if (this.datepickerInput && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('A MatDatepicker can only be associated with a single input.');\n        }\n        this._inputStateChanges.unsubscribe();\n        this.datepickerInput = input;\n        this._inputStateChanges =\n            input.stateChanges.subscribe(() => this.stateChanges.next(undefined));\n        return this._model;\n    }\n    /**\n     * Registers a portal containing action buttons with the datepicker.\n     * @param portal Portal to be registered.\n     */\n    registerActions(portal) {\n        if (this._actionsPortal && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('A MatDatepicker can only be associated with a single actions row.');\n        }\n        this._actionsPortal = portal;\n    }\n    /**\n     * Removes a portal containing action buttons from the datepicker.\n     * @param portal Portal to be removed.\n     */\n    removeActions(portal) {\n        if (portal === this._actionsPortal) {\n            this._actionsPortal = null;\n        }\n    }\n    /** Open the calendar. */\n    open() {\n        if (this._opened || this.disabled) {\n            return;\n        }\n        if (!this.datepickerInput && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('Attempted to open an MatDatepicker with no associated input.');\n        }\n        if (this._document) {\n            this._focusedElementBeforeOpen = this._document.activeElement;\n        }\n        this.touchUi ? this._openAsDialog() : this._openAsPopup();\n        this._opened = true;\n        this.openedStream.emit();\n    }\n    /** Close the calendar. */\n    close() {\n        if (!this._opened) {\n            return;\n        }\n        if (this._popupComponentRef && this._popupRef) {\n            const instance = this._popupComponentRef.instance;\n            instance._startExitAnimation();\n            instance._animationDone.pipe(take(1)).subscribe(() => this._destroyPopup());\n        }\n        if (this._dialogRef) {\n            this._dialogRef.close();\n            this._dialogRef = null;\n        }\n        const completeClose = () => {\n            // The `_opened` could've been reset already if\n            // we got two events in quick succession.\n            if (this._opened) {\n                this._opened = false;\n                this.closedStream.emit();\n                this._focusedElementBeforeOpen = null;\n            }\n        };\n        if (this._restoreFocus && this._focusedElementBeforeOpen &&\n            typeof this._focusedElementBeforeOpen.focus === 'function') {\n            // Because IE moves focus asynchronously, we can't count on it being restored before we've\n            // marked the datepicker as closed. If the event fires out of sequence and the element that\n            // we're refocusing opens the datepicker on focus, the user could be stuck with not being\n            // able to close the calendar at all. We work around it by making the logic, that marks\n            // the datepicker as closed, async as well.\n            this._focusedElementBeforeOpen.focus();\n            setTimeout(completeClose);\n        }\n        else {\n            completeClose();\n        }\n    }\n    /** Applies the current pending selection on the popup to the model. */\n    _applyPendingSelection() {\n        var _a, _b;\n        const instance = ((_a = this._popupComponentRef) === null || _a === void 0 ? void 0 : _a.instance) || ((_b = this._dialogRef) === null || _b === void 0 ? void 0 : _b.componentInstance);\n        instance === null || instance === void 0 ? void 0 : instance._applyPendingSelection();\n    }\n    /** Open the calendar as a dialog. */\n    _openAsDialog() {\n        // Usually this would be handled by `open` which ensures that we can only have one overlay\n        // open at a time, however since we reset the variables in async handlers some overlays\n        // may slip through if the user opens and closes multiple times in quick succession (e.g.\n        // by holding down the enter key).\n        if (this._dialogRef) {\n            this._dialogRef.close();\n        }\n        this._dialogRef = this._dialog.open(MatDatepickerContent, {\n            direction: this._dir ? this._dir.value : 'ltr',\n            viewContainerRef: this._viewContainerRef,\n            panelClass: 'mat-datepicker-dialog',\n            // These values are all the same as the defaults, but we set them explicitly so that the\n            // datepicker dialog behaves consistently even if the user changed the defaults.\n            hasBackdrop: true,\n            disableClose: false,\n            backdropClass: ['cdk-overlay-dark-backdrop', this._backdropHarnessClass],\n            width: '',\n            height: '',\n            minWidth: '',\n            minHeight: '',\n            maxWidth: '80vw',\n            maxHeight: '',\n            position: {},\n            // Disable the dialog's automatic focus capturing, because it'll go to the close button\n            // automatically. The calendar will move focus on its own once it renders.\n            autoFocus: false,\n            // `MatDialog` has focus restoration built in, however we want to disable it since the\n            // datepicker also has focus restoration for dropdown mode. We want to do this, in order\n            // to ensure that the timing is consistent between dropdown and dialog modes since `MatDialog`\n            // restores focus when the animation is finished, but the datepicker does it immediately.\n            // Furthermore, this avoids any conflicts where the datepicker consumer might move focus\n            // inside the `closed` event which is dispatched immediately.\n            restoreFocus: false\n        });\n        this._dialogRef.afterClosed().subscribe(() => this.close());\n        this._forwardContentValues(this._dialogRef.componentInstance);\n    }\n    /** Open the calendar as a popup. */\n    _openAsPopup() {\n        const portal = new ComponentPortal(MatDatepickerContent, this._viewContainerRef);\n        this._destroyPopup();\n        this._createPopup();\n        this._popupComponentRef = this._popupRef.attach(portal);\n        this._forwardContentValues(this._popupComponentRef.instance);\n        // Update the position once the calendar has rendered.\n        this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n            this._popupRef.updatePosition();\n        });\n    }\n    /** Forwards relevant values from the datepicker to the datepicker content inside the overlay. */\n    _forwardContentValues(instance) {\n        instance.datepicker = this;\n        instance.color = this.color;\n        instance._actionsPortal = this._actionsPortal;\n    }\n    /** Create the popup. */\n    _createPopup() {\n        const positionStrategy = this._overlay.position()\n            .flexibleConnectedTo(this.datepickerInput.getConnectedOverlayOrigin())\n            .withTransformOriginOn('.mat-datepicker-content')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(8)\n            .withLockedPosition();\n        const overlayConfig = new OverlayConfig({\n            positionStrategy: this._setConnectedPositions(positionStrategy),\n            hasBackdrop: true,\n            backdropClass: ['mat-overlay-transparent-backdrop', this._backdropHarnessClass],\n            direction: this._dir,\n            scrollStrategy: this._scrollStrategy(),\n            panelClass: 'mat-datepicker-popup',\n        });\n        this._popupRef = this._overlay.create(overlayConfig);\n        this._popupRef.overlayElement.setAttribute('role', 'dialog');\n        merge(this._popupRef.backdropClick(), this._popupRef.detachments(), this._popupRef.keydownEvents().pipe(filter(event => {\n            // Closing on alt + up is only valid when there's an input associated with the datepicker.\n            return (event.keyCode === ESCAPE && !hasModifierKey(event)) || (this.datepickerInput &&\n                hasModifierKey(event, 'altKey') && event.keyCode === UP_ARROW);\n        }))).subscribe(event => {\n            if (event) {\n                event.preventDefault();\n            }\n            this.close();\n        });\n    }\n    /** Destroys the current popup overlay. */\n    _destroyPopup() {\n        if (this._popupRef) {\n            this._popupRef.dispose();\n            this._popupRef = this._popupComponentRef = null;\n        }\n    }\n    /** Sets the positions of the datepicker in dropdown mode based on the current configuration. */\n    _setConnectedPositions(strategy) {\n        const primaryX = this.xPosition === 'end' ? 'end' : 'start';\n        const secondaryX = primaryX === 'start' ? 'end' : 'start';\n        const primaryY = this.yPosition === 'above' ? 'bottom' : 'top';\n        const secondaryY = primaryY === 'top' ? 'bottom' : 'top';\n        return strategy.withPositions([\n            {\n                originX: primaryX,\n                originY: secondaryY,\n                overlayX: primaryX,\n                overlayY: primaryY\n            },\n            {\n                originX: primaryX,\n                originY: primaryY,\n                overlayX: primaryX,\n                overlayY: secondaryY\n            },\n            {\n                originX: secondaryX,\n                originY: secondaryY,\n                overlayX: secondaryX,\n                overlayY: primaryY\n            },\n            {\n                originX: secondaryX,\n                originY: primaryY,\n                overlayX: secondaryX,\n                overlayY: secondaryY\n            }\n        ]);\n    }\n}\nMatDatepickerBase.ɵfac = function MatDatepickerBase_Factory(t) { return new (t || MatDatepickerBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc7.MatDialog), ɵngcc0.ɵɵdirectiveInject(ɵngcc8.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(MAT_DATEPICKER_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(MatDateSelectionModel)); };\nMatDatepickerBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatDatepickerBase, inputs: { startView: \"startView\", xPosition: \"xPosition\", yPosition: \"yPosition\", startAt: \"startAt\", color: \"color\", touchUi: \"touchUi\", disabled: \"disabled\", restoreFocus: \"restoreFocus\", panelClass: \"panelClass\", opened: \"opened\", calendarHeaderComponent: \"calendarHeaderComponent\", dateClass: \"dateClass\" }, outputs: { yearSelected: \"yearSelected\", monthSelected: \"monthSelected\", viewChanged: \"viewChanged\", openedStream: \"opened\", closedStream: \"closed\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nMatDatepickerBase.ctorParameters = () => [\n    { type: MatDialog },\n    { type: Overlay },\n    { type: NgZone },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DATEPICKER_SCROLL_STRATEGY,] }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: MatDateSelectionModel }\n];\nMatDatepickerBase.propDecorators = {\n    calendarHeaderComponent: [{ type: Input }],\n    startAt: [{ type: Input }],\n    startView: [{ type: Input }],\n    color: [{ type: Input }],\n    touchUi: [{ type: Input }],\n    disabled: [{ type: Input }],\n    xPosition: [{ type: Input }],\n    yPosition: [{ type: Input }],\n    restoreFocus: [{ type: Input }],\n    yearSelected: [{ type: Output }],\n    monthSelected: [{ type: Output }],\n    viewChanged: [{ type: Output }],\n    dateClass: [{ type: Input }],\n    openedStream: [{ type: Output, args: ['opened',] }],\n    closedStream: [{ type: Output, args: ['closed',] }],\n    panelClass: [{ type: Input }],\n    opened: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc7.MatDialog }, { type: ɵngcc8.Overlay }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_DATEPICKER_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: MatDateSelectionModel }]; }, { startView: [{\n            type: Input\n        }], xPosition: [{\n            type: Input\n        }], yPosition: [{\n            type: Input\n        }], yearSelected: [{\n            type: Output\n        }], monthSelected: [{\n            type: Output\n        }], viewChanged: [{\n            type: Output\n        }], openedStream: [{\n            type: Output,\n            args: ['opened']\n        }], closedStream: [{\n            type: Output,\n            args: ['closed']\n        }], startAt: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }], touchUi: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], restoreFocus: [{\n            type: Input\n        }], panelClass: [{\n            type: Input\n        }], opened: [{\n            type: Input\n        }], calendarHeaderComponent: [{\n            type: Input\n        }], dateClass: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(mmalerba): We use a component instead of a directive here so the user can use implicit\n// template reference variables (e.g. #d vs #d=\"matDatepicker\"). We can change this to a directive\n// if angular adds support for `exportAs: '$implicit'` on directives.\n/** Component responsible for managing the datepicker popup/dialog. */\nclass MatDatepicker extends MatDatepickerBase {\n}\nMatDatepicker.ɵfac = function MatDatepicker_Factory(t) { return ɵMatDatepicker_BaseFactory(t || MatDatepicker); };\nMatDatepicker.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDatepicker, selectors: [[\"mat-datepicker\"]], exportAs: [\"matDatepicker\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER,\n            { provide: MatDatepickerBase, useExisting: MatDatepicker },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function MatDatepicker_Template(rf, ctx) { }, encapsulation: 2, changeDetection: 0 });\nconst ɵMatDatepicker_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatDatepicker);\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepicker, [{\n        type: Component,\n        args: [{\n                selector: 'mat-datepicker',\n                template: '',\n                exportAs: 'matDatepicker',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                providers: [\n                    MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER,\n                    { provide: MatDatepickerBase, useExisting: MatDatepicker },\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An event used for datepicker input and change events. We don't always have access to a native\n * input or change event because the event may have been triggered by the user clicking on the\n * calendar popup. For consistency, we always use MatDatepickerInputEvent instead.\n */\nclass MatDatepickerInputEvent {\n    constructor(\n    /** Reference to the datepicker input component that emitted the event. */\n    target, \n    /** Reference to the native input element associated with the datepicker input. */\n    targetElement) {\n        this.target = target;\n        this.targetElement = targetElement;\n        this.value = this.target.value;\n    }\n}\n/** Base class for datepicker inputs. */\nclass MatDatepickerInputBase {\n    constructor(_elementRef, _dateAdapter, _dateFormats) {\n        this._elementRef = _elementRef;\n        this._dateAdapter = _dateAdapter;\n        this._dateFormats = _dateFormats;\n        /** Emits when a `change` event is fired on this `<input>`. */\n        this.dateChange = new EventEmitter();\n        /** Emits when an `input` event is fired on this `<input>`. */\n        this.dateInput = new EventEmitter();\n        /** Emits when the internal state has changed */\n        this.stateChanges = new Subject();\n        this._onTouched = () => { };\n        this._validatorOnChange = () => { };\n        this._cvaOnChange = () => { };\n        this._valueChangesSubscription = Subscription.EMPTY;\n        this._localeSubscription = Subscription.EMPTY;\n        /** The form control validator for whether the input parses. */\n        this._parseValidator = () => {\n            return this._lastValueValid ?\n                null : { 'matDatepickerParse': { 'text': this._elementRef.nativeElement.value } };\n        };\n        /** The form control validator for the date filter. */\n        this._filterValidator = (control) => {\n            const controlValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            return !controlValue || this._matchesFilter(controlValue) ?\n                null : { 'matDatepickerFilter': true };\n        };\n        /** The form control validator for the min date. */\n        this._minValidator = (control) => {\n            const controlValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            const min = this._getMinDate();\n            return (!min || !controlValue ||\n                this._dateAdapter.compareDate(min, controlValue) <= 0) ?\n                null : { 'matDatepickerMin': { 'min': min, 'actual': controlValue } };\n        };\n        /** The form control validator for the max date. */\n        this._maxValidator = (control) => {\n            const controlValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            const max = this._getMaxDate();\n            return (!max || !controlValue ||\n                this._dateAdapter.compareDate(max, controlValue) >= 0) ?\n                null : { 'matDatepickerMax': { 'max': max, 'actual': controlValue } };\n        };\n        /** Whether the last value set on the input was valid. */\n        this._lastValueValid = false;\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._dateAdapter) {\n                throw createMissingDateImplError('DateAdapter');\n            }\n            if (!this._dateFormats) {\n                throw createMissingDateImplError('MAT_DATE_FORMATS');\n            }\n        }\n        // Update the displayed date when the locale changes.\n        this._localeSubscription = _dateAdapter.localeChanges.subscribe(() => {\n            this._assignValueProgrammatically(this.value);\n        });\n    }\n    /** The value of the input. */\n    get value() {\n        return this._model ? this._getValueFromModel(this._model.selection) : this._pendingValue;\n    }\n    set value(value) {\n        this._assignValueProgrammatically(value);\n    }\n    /** Whether the datepicker-input is disabled. */\n    get disabled() { return !!this._disabled || this._parentDisabled(); }\n    set disabled(value) {\n        const newValue = coerceBooleanProperty(value);\n        const element = this._elementRef.nativeElement;\n        if (this._disabled !== newValue) {\n            this._disabled = newValue;\n            this.stateChanges.next(undefined);\n        }\n        // We need to null check the `blur` method, because it's undefined during SSR.\n        // In Ivy static bindings are invoked earlier, before the element is attached to the DOM.\n        // This can cause an error to be thrown in some browsers (IE/Edge) which assert that the\n        // element has been inserted.\n        if (newValue && this._isInitialized && element.blur) {\n            // Normally, native input elements automatically blur if they turn disabled. This behavior\n            // is problematic, because it would mean that it triggers another change detection cycle,\n            // which then causes a changed after checked error if the input element was focused before.\n            element.blur();\n        }\n    }\n    /** Gets the base validator functions. */\n    _getValidators() {\n        return [this._parseValidator, this._minValidator, this._maxValidator, this._filterValidator];\n    }\n    /** Registers a date selection model with the input. */\n    _registerModel(model) {\n        this._model = model;\n        this._valueChangesSubscription.unsubscribe();\n        if (this._pendingValue) {\n            this._assignValue(this._pendingValue);\n        }\n        this._valueChangesSubscription = this._model.selectionChanged.subscribe(event => {\n            if (this._shouldHandleChangeEvent(event)) {\n                const value = this._getValueFromModel(event.selection);\n                this._lastValueValid = this._isValidValue(value);\n                this._cvaOnChange(value);\n                this._onTouched();\n                this._formatValue(value);\n                this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n                this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n            }\n        });\n    }\n    ngAfterViewInit() {\n        this._isInitialized = true;\n    }\n    ngOnChanges(changes) {\n        if (dateInputsHaveChanged(changes, this._dateAdapter)) {\n            this.stateChanges.next(undefined);\n        }\n    }\n    ngOnDestroy() {\n        this._valueChangesSubscription.unsubscribe();\n        this._localeSubscription.unsubscribe();\n        this.stateChanges.complete();\n    }\n    /** @docs-private */\n    registerOnValidatorChange(fn) {\n        this._validatorOnChange = fn;\n    }\n    /** @docs-private */\n    validate(c) {\n        return this._validator ? this._validator(c) : null;\n    }\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value) {\n        this._assignValueProgrammatically(value);\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn) {\n        this._cvaOnChange = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    _onKeydown(event) {\n        const isAltDownArrow = event.altKey && event.keyCode === DOWN_ARROW;\n        if (isAltDownArrow && !this._elementRef.nativeElement.readOnly) {\n            this._openPopup();\n            event.preventDefault();\n        }\n    }\n    _onInput(value) {\n        const lastValueWasValid = this._lastValueValid;\n        let date = this._dateAdapter.parse(value, this._dateFormats.parse.dateInput);\n        this._lastValueValid = this._isValidValue(date);\n        date = this._dateAdapter.getValidDateOrNull(date);\n        if (!this._dateAdapter.sameDate(date, this.value)) {\n            this._assignValue(date);\n            this._cvaOnChange(date);\n            this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n        }\n        else {\n            // Call the CVA change handler for invalid values\n            // since this is what marks the control as dirty.\n            if (value && !this.value) {\n                this._cvaOnChange(date);\n            }\n            if (lastValueWasValid !== this._lastValueValid) {\n                this._validatorOnChange();\n            }\n        }\n    }\n    _onChange() {\n        this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n    }\n    /** Handles blur events on the input. */\n    _onBlur() {\n        // Reformat the input only if we have a valid value.\n        if (this.value) {\n            this._formatValue(this.value);\n        }\n        this._onTouched();\n    }\n    /** Formats a value and sets it on the input element. */\n    _formatValue(value) {\n        this._elementRef.nativeElement.value =\n            value ? this._dateAdapter.format(value, this._dateFormats.display.dateInput) : '';\n    }\n    /** Assigns a value to the model. */\n    _assignValue(value) {\n        // We may get some incoming values before the model was\n        // assigned. Save the value so that we can assign it later.\n        if (this._model) {\n            this._assignValueToModel(value);\n            this._pendingValue = null;\n        }\n        else {\n            this._pendingValue = value;\n        }\n    }\n    /** Whether a value is considered valid. */\n    _isValidValue(value) {\n        return !value || this._dateAdapter.isValid(value);\n    }\n    /**\n     * Checks whether a parent control is disabled. This is in place so that it can be overridden\n     * by inputs extending this one which can be placed inside of a group that can be disabled.\n     */\n    _parentDisabled() {\n        return false;\n    }\n    /** Programmatically assigns a value to the input. */\n    _assignValueProgrammatically(value) {\n        value = this._dateAdapter.deserialize(value);\n        this._lastValueValid = this._isValidValue(value);\n        value = this._dateAdapter.getValidDateOrNull(value);\n        this._assignValue(value);\n        this._formatValue(value);\n    }\n    /** Gets whether a value matches the current date filter. */\n    _matchesFilter(value) {\n        const filter = this._getDateFilter();\n        return !filter || filter(value);\n    }\n}\nMatDatepickerInputBase.ɵfac = function MatDatepickerInputBase_Factory(t) { return new (t || MatDatepickerInputBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8)); };\nMatDatepickerInputBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatDatepickerInputBase, inputs: { value: \"value\", disabled: \"disabled\" }, outputs: { dateChange: \"dateChange\", dateInput: \"dateInput\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nMatDatepickerInputBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] }\n];\nMatDatepickerInputBase.propDecorators = {\n    value: [{ type: Input }],\n    disabled: [{ type: Input }],\n    dateChange: [{ type: Output }],\n    dateInput: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerInputBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }]; }, { dateChange: [{\n            type: Output\n        }], dateInput: [{\n            type: Output\n        }], value: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }] }); })();\n/**\n * Checks whether the `SimpleChanges` object from an `ngOnChanges`\n * callback has any changes, accounting for date objects.\n */\nfunction dateInputsHaveChanged(changes, adapter) {\n    const keys = Object.keys(changes);\n    for (let key of keys) {\n        const { previousValue, currentValue } = changes[key];\n        if (adapter.isDateInstance(previousValue) && adapter.isDateInstance(currentValue)) {\n            if (!adapter.sameDate(previousValue, currentValue)) {\n                return true;\n            }\n        }\n        else {\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nconst MAT_DATEPICKER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatDatepickerInput),\n    multi: true\n};\n/** @docs-private */\nconst MAT_DATEPICKER_VALIDATORS = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MatDatepickerInput),\n    multi: true\n};\n/** Directive used to connect an input to a MatDatepicker. */\nclass MatDatepickerInput extends MatDatepickerInputBase {\n    constructor(elementRef, dateAdapter, dateFormats, _formField) {\n        super(elementRef, dateAdapter, dateFormats);\n        this._formField = _formField;\n        this._closedSubscription = Subscription.EMPTY;\n        this._validator = Validators.compose(super._getValidators());\n    }\n    /** The datepicker that this input is associated with. */\n    set matDatepicker(datepicker) {\n        if (datepicker) {\n            this._datepicker = datepicker;\n            this._closedSubscription = datepicker.closedStream.subscribe(() => this._onTouched());\n            this._registerModel(datepicker.registerInput(this));\n        }\n    }\n    /** The minimum valid date. */\n    get min() { return this._min; }\n    set min(value) {\n        const validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        if (!this._dateAdapter.sameDate(validValue, this._min)) {\n            this._min = validValue;\n            this._validatorOnChange();\n        }\n    }\n    /** The maximum valid date. */\n    get max() { return this._max; }\n    set max(value) {\n        const validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        if (!this._dateAdapter.sameDate(validValue, this._max)) {\n            this._max = validValue;\n            this._validatorOnChange();\n        }\n    }\n    /** Function that can be used to filter out dates within the datepicker. */\n    get dateFilter() { return this._dateFilter; }\n    set dateFilter(value) {\n        const wasMatchingValue = this._matchesFilter(this.value);\n        this._dateFilter = value;\n        if (this._matchesFilter(this.value) !== wasMatchingValue) {\n            this._validatorOnChange();\n        }\n    }\n    /**\n     * Gets the element that the datepicker popup should be connected to.\n     * @return The element to connect the popup to.\n     */\n    getConnectedOverlayOrigin() {\n        return this._formField ? this._formField.getConnectedOverlayOrigin() : this._elementRef;\n    }\n    /** Returns the palette used by the input's form field, if any. */\n    getThemePalette() {\n        return this._formField ? this._formField.color : undefined;\n    }\n    /** Gets the value at which the calendar should start. */\n    getStartValue() {\n        return this.value;\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._closedSubscription.unsubscribe();\n    }\n    /** Opens the associated datepicker. */\n    _openPopup() {\n        if (this._datepicker) {\n            this._datepicker.open();\n        }\n    }\n    _getValueFromModel(modelValue) {\n        return modelValue;\n    }\n    _assignValueToModel(value) {\n        if (this._model) {\n            this._model.updateSelection(value, this);\n        }\n    }\n    /** Gets the input's minimum date. */\n    _getMinDate() {\n        return this._min;\n    }\n    /** Gets the input's maximum date. */\n    _getMaxDate() {\n        return this._max;\n    }\n    /** Gets the input's date filtering function. */\n    _getDateFilter() {\n        return this._dateFilter;\n    }\n    _shouldHandleChangeEvent(event) {\n        return event.source !== this;\n    }\n}\nMatDatepickerInput.ɵfac = function MatDatepickerInput_Factory(t) { return new (t || MatDatepickerInput)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD, 8)); };\nMatDatepickerInput.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatDatepickerInput, selectors: [[\"input\", \"matDatepicker\", \"\"]], hostAttrs: [1, \"mat-datepicker-input\"], hostVars: 6, hostBindings: function MatDatepickerInput_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"input\", function MatDatepickerInput_input_HostBindingHandler($event) { return ctx._onInput($event.target.value); })(\"change\", function MatDatepickerInput_change_HostBindingHandler() { return ctx._onChange(); })(\"blur\", function MatDatepickerInput_blur_HostBindingHandler() { return ctx._onBlur(); })(\"keydown\", function MatDatepickerInput_keydown_HostBindingHandler($event) { return ctx._onKeydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"disabled\", ctx.disabled);\n        ɵngcc0.ɵɵattribute(\"aria-haspopup\", ctx._datepicker ? \"dialog\" : null)(\"aria-owns\", (ctx._datepicker == null ? null : ctx._datepicker.opened) && ctx._datepicker.id || null)(\"min\", ctx.min ? ctx._dateAdapter.toIso8601(ctx.min) : null)(\"max\", ctx.max ? ctx._dateAdapter.toIso8601(ctx.max) : null)(\"data-mat-calendar\", ctx._datepicker ? ctx._datepicker.id : null);\n    } }, inputs: { matDatepicker: \"matDatepicker\", min: \"min\", max: \"max\", dateFilter: [\"matDatepickerFilter\", \"dateFilter\"] }, exportAs: [\"matDatepickerInput\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            MAT_DATEPICKER_VALUE_ACCESSOR,\n            MAT_DATEPICKER_VALIDATORS,\n            { provide: MAT_INPUT_VALUE_ACCESSOR, useExisting: MatDatepickerInput },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatDatepickerInput.ctorParameters = () => [\n    { type: ElementRef },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: MatFormField, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD,] }] }\n];\nMatDatepickerInput.propDecorators = {\n    matDatepicker: [{ type: Input }],\n    min: [{ type: Input }],\n    max: [{ type: Input }],\n    dateFilter: [{ type: Input, args: ['matDatepickerFilter',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerInput, [{\n        type: Directive,\n        args: [{\n                selector: 'input[matDatepicker]',\n                providers: [\n                    MAT_DATEPICKER_VALUE_ACCESSOR,\n                    MAT_DATEPICKER_VALIDATORS,\n                    { provide: MAT_INPUT_VALUE_ACCESSOR, useExisting: MatDatepickerInput },\n                ],\n                host: {\n                    'class': 'mat-datepicker-input',\n                    '[attr.aria-haspopup]': '_datepicker ? \"dialog\" : null',\n                    '[attr.aria-owns]': '(_datepicker?.opened && _datepicker.id) || null',\n                    '[attr.min]': 'min ? _dateAdapter.toIso8601(min) : null',\n                    '[attr.max]': 'max ? _dateAdapter.toIso8601(max) : null',\n                    // Used by the test harness to tie this input to its calendar. We can't depend on\n                    // `aria-owns` for this, because it's only defined while the calendar is open.\n                    '[attr.data-mat-calendar]': '_datepicker ? _datepicker.id : null',\n                    '[disabled]': 'disabled',\n                    '(input)': '_onInput($event.target.value)',\n                    '(change)': '_onChange()',\n                    '(blur)': '_onBlur()',\n                    '(keydown)': '_onKeydown($event)'\n                },\n                exportAs: 'matDatepickerInput'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }, { type: ɵngcc9.MatFormField, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD]\n            }] }]; }, { matDatepicker: [{\n            type: Input\n        }], min: [{\n            type: Input\n        }], max: [{\n            type: Input\n        }], dateFilter: [{\n            type: Input,\n            args: ['matDatepickerFilter']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Can be used to override the icon of a `matDatepickerToggle`. */\nclass MatDatepickerToggleIcon {\n}\nMatDatepickerToggleIcon.ɵfac = function MatDatepickerToggleIcon_Factory(t) { return new (t || MatDatepickerToggleIcon)(); };\nMatDatepickerToggleIcon.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatDatepickerToggleIcon, selectors: [[\"\", \"matDatepickerToggleIcon\", \"\"]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerToggleIcon, [{\n        type: Directive,\n        args: [{\n                selector: '[matDatepickerToggleIcon]'\n            }]\n    }], null, null); })();\nclass MatDatepickerToggle {\n    constructor(_intl, _changeDetectorRef, defaultTabIndex) {\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._stateChanges = Subscription.EMPTY;\n        const parsedTabIndex = Number(defaultTabIndex);\n        this.tabIndex = (parsedTabIndex || parsedTabIndex === 0) ? parsedTabIndex : null;\n    }\n    /** Whether the toggle button is disabled. */\n    get disabled() {\n        if (this._disabled === undefined && this.datepicker) {\n            return this.datepicker.disabled;\n        }\n        return !!this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    ngOnChanges(changes) {\n        if (changes['datepicker']) {\n            this._watchStateChanges();\n        }\n    }\n    ngOnDestroy() {\n        this._stateChanges.unsubscribe();\n    }\n    ngAfterContentInit() {\n        this._watchStateChanges();\n    }\n    _open(event) {\n        if (this.datepicker && !this.disabled) {\n            this.datepicker.open();\n            event.stopPropagation();\n        }\n    }\n    _watchStateChanges() {\n        const datepickerStateChanged = this.datepicker ? this.datepicker.stateChanges : of();\n        const inputStateChanged = this.datepicker && this.datepicker.datepickerInput ?\n            this.datepicker.datepickerInput.stateChanges : of();\n        const datepickerToggled = this.datepicker ?\n            merge(this.datepicker.openedStream, this.datepicker.closedStream) :\n            of();\n        this._stateChanges.unsubscribe();\n        this._stateChanges = merge(this._intl.changes, datepickerStateChanged, inputStateChanged, datepickerToggled).subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n}\nMatDatepickerToggle.ɵfac = function MatDatepickerToggle_Factory(t) { return new (t || MatDatepickerToggle)(ɵngcc0.ɵɵdirectiveInject(MatDatepickerIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵinjectAttribute('tabindex')); };\nMatDatepickerToggle.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDatepickerToggle, selectors: [[\"mat-datepicker-toggle\"]], contentQueries: function MatDatepickerToggle_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatDatepickerToggleIcon, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._customIcon = _t.first);\n    } }, viewQuery: function MatDatepickerToggle_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c2, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._button = _t.first);\n    } }, hostAttrs: [1, \"mat-datepicker-toggle\"], hostVars: 8, hostBindings: function MatDatepickerToggle_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatDatepickerToggle_click_HostBindingHandler($event) { return ctx._open($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"tabindex\", null)(\"data-mat-calendar\", ctx.datepicker ? ctx.datepicker.id : null);\n        ɵngcc0.ɵɵclassProp(\"mat-datepicker-toggle-active\", ctx.datepicker && ctx.datepicker.opened)(\"mat-accent\", ctx.datepicker && ctx.datepicker.color === \"accent\")(\"mat-warn\", ctx.datepicker && ctx.datepicker.color === \"warn\");\n    } }, inputs: { tabIndex: \"tabIndex\", disabled: \"disabled\", datepicker: [\"for\", \"datepicker\"], ariaLabel: [\"aria-label\", \"ariaLabel\"], disableRipple: \"disableRipple\" }, exportAs: [\"matDatepickerToggle\"], features: [ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c4, decls: 4, vars: 6, consts: [[\"mat-icon-button\", \"\", \"type\", \"button\", 3, \"disabled\", \"disableRipple\"], [\"button\", \"\"], [\"class\", \"mat-datepicker-toggle-default-icon\", \"viewBox\", \"0 0 24 24\", \"width\", \"24px\", \"height\", \"24px\", \"fill\", \"currentColor\", \"focusable\", \"false\", 4, \"ngIf\"], [\"viewBox\", \"0 0 24 24\", \"width\", \"24px\", \"height\", \"24px\", \"fill\", \"currentColor\", \"focusable\", \"false\", 1, \"mat-datepicker-toggle-default-icon\"], [\"d\", \"M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z\"]], template: function MatDatepickerToggle_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c3);\n        ɵngcc0.ɵɵelementStart(0, \"button\", 0, 1);\n        ɵngcc0.ɵɵtemplate(2, MatDatepickerToggle__svg_svg_2_Template, 2, 0, \"svg\", 2);\n        ɵngcc0.ɵɵprojection(3);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"disabled\", ctx.disabled)(\"disableRipple\", ctx.disableRipple);\n        ɵngcc0.ɵɵattribute(\"aria-haspopup\", ctx.datepicker ? \"dialog\" : null)(\"aria-label\", ctx.ariaLabel || ctx._intl.openCalendarLabel)(\"tabindex\", ctx.disabled ? -1 : ctx.tabIndex);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._customIcon);\n    } }, directives: [ɵngcc4.MatButton, ɵngcc1.NgIf], styles: [\".mat-form-field-appearance-legacy .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-datepicker-toggle-default-icon{width:1em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-datepicker-toggle-default-icon{display:block;width:1.5em;height:1.5em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-datepicker-toggle-default-icon{margin:auto}.cdk-high-contrast-active .mat-datepicker-toggle-default-icon{color:CanvasText}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatDatepickerToggle.ctorParameters = () => [\n    { type: MatDatepickerIntl },\n    { type: ChangeDetectorRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] }\n];\nMatDatepickerToggle.propDecorators = {\n    datepicker: [{ type: Input, args: ['for',] }],\n    tabIndex: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    disabled: [{ type: Input }],\n    disableRipple: [{ type: Input }],\n    _customIcon: [{ type: ContentChild, args: [MatDatepickerToggleIcon,] }],\n    _button: [{ type: ViewChild, args: ['button',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerToggle, [{\n        type: Component,\n        args: [{\n                selector: 'mat-datepicker-toggle',\n                template: \"<button\\n  #button\\n  mat-icon-button\\n  type=\\\"button\\\"\\n  [attr.aria-haspopup]=\\\"datepicker ? 'dialog' : null\\\"\\n  [attr.aria-label]=\\\"ariaLabel || _intl.openCalendarLabel\\\"\\n  [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\"\\n  [disabled]=\\\"disabled\\\"\\n  [disableRipple]=\\\"disableRipple\\\">\\n\\n  <svg\\n    *ngIf=\\\"!_customIcon\\\"\\n    class=\\\"mat-datepicker-toggle-default-icon\\\"\\n    viewBox=\\\"0 0 24 24\\\"\\n    width=\\\"24px\\\"\\n    height=\\\"24px\\\"\\n    fill=\\\"currentColor\\\"\\n    focusable=\\\"false\\\">\\n    <path d=\\\"M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z\\\"/>\\n  </svg>\\n\\n  <ng-content select=\\\"[matDatepickerToggleIcon]\\\"></ng-content>\\n</button>\\n\",\n                host: {\n                    'class': 'mat-datepicker-toggle',\n                    '[attr.tabindex]': 'null',\n                    '[class.mat-datepicker-toggle-active]': 'datepicker && datepicker.opened',\n                    '[class.mat-accent]': 'datepicker && datepicker.color === \"accent\"',\n                    '[class.mat-warn]': 'datepicker && datepicker.color === \"warn\"',\n                    // Used by the test harness to tie this toggle to its datepicker.\n                    '[attr.data-mat-calendar]': 'datepicker ? datepicker.id : null',\n                    // Bind the `click` on the host, rather than the inner `button`, so that we can call\n                    // `stopPropagation` on it without affecting the user's `click` handlers. We need to stop\n                    // it so that the input doesn't get focused automatically by the form field (See #21836).\n                    '(click)': '_open($event)'\n                },\n                exportAs: 'matDatepickerToggle',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-form-field-appearance-legacy .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-datepicker-toggle-default-icon{width:1em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-datepicker-toggle-default-icon{display:block;width:1.5em;height:1.5em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-datepicker-toggle-default-icon{margin:auto}.cdk-high-contrast-active .mat-datepicker-toggle-default-icon{color:CanvasText}\\n\"]\n            }]\n    }], function () { return [{ type: MatDatepickerIntl }, { type: ɵngcc0.ChangeDetectorRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }]; }, { tabIndex: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], datepicker: [{\n            type: Input,\n            args: ['for']\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], disableRipple: [{\n            type: Input\n        }], _customIcon: [{\n            type: ContentChild,\n            args: [MatDatepickerToggleIcon]\n        }], _button: [{\n            type: ViewChild,\n            args: ['button']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to provide the date range input wrapper component\n * to the parts without circular dependencies.\n */\nconst MAT_DATE_RANGE_INPUT_PARENT = new InjectionToken('MAT_DATE_RANGE_INPUT_PARENT');\n/**\n * Base class for the individual inputs that can be projected inside a `mat-date-range-input`.\n */\nclass MatDateRangeInputPartBase extends MatDatepickerInputBase {\n    constructor(_rangeInput, elementRef, _defaultErrorStateMatcher, _injector, _parentForm, _parentFormGroup, dateAdapter, dateFormats) {\n        super(elementRef, dateAdapter, dateFormats);\n        this._rangeInput = _rangeInput;\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._injector = _injector;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n    }\n    ngOnInit() {\n        // We need the date input to provide itself as a `ControlValueAccessor` and a `Validator`, while\n        // injecting its `NgControl` so that the error state is handled correctly. This introduces a\n        // circular dependency, because both `ControlValueAccessor` and `Validator` depend on the input\n        // itself. Usually we can work around it for the CVA, but there's no API to do it for the\n        // validator. We work around it here by injecting the `NgControl` in `ngOnInit`, after\n        // everything has been resolved.\n        const ngControl = this._injector.get(NgControl, null, InjectFlags.Self);\n        if (ngControl) {\n            this.ngControl = ngControl;\n        }\n    }\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n    }\n    /** Gets whether the input is empty. */\n    isEmpty() {\n        return this._elementRef.nativeElement.value.length === 0;\n    }\n    /** Gets the placeholder of the input. */\n    _getPlaceholder() {\n        return this._elementRef.nativeElement.placeholder;\n    }\n    /** Focuses the input. */\n    focus() {\n        this._elementRef.nativeElement.focus();\n    }\n    /** Handles `input` events on the input element. */\n    _onInput(value) {\n        super._onInput(value);\n        this._rangeInput._handleChildValueChange();\n    }\n    /** Opens the datepicker associated with the input. */\n    _openPopup() {\n        this._rangeInput._openDatepicker();\n    }\n    /** Gets the minimum date from the range input. */\n    _getMinDate() {\n        return this._rangeInput.min;\n    }\n    /** Gets the maximum date from the range input. */\n    _getMaxDate() {\n        return this._rangeInput.max;\n    }\n    /** Gets the date filter function from the range input. */\n    _getDateFilter() {\n        return this._rangeInput.dateFilter;\n    }\n    _parentDisabled() {\n        return this._rangeInput._groupDisabled;\n    }\n    _shouldHandleChangeEvent({ source }) {\n        return source !== this._rangeInput._startInput && source !== this._rangeInput._endInput;\n    }\n    _assignValueProgrammatically(value) {\n        super._assignValueProgrammatically(value);\n        const opposite = (this === this._rangeInput._startInput ? this._rangeInput._endInput :\n            this._rangeInput._startInput);\n        opposite === null || opposite === void 0 ? void 0 : opposite._validatorOnChange();\n    }\n}\nMatDateRangeInputPartBase.ɵfac = function MatDateRangeInputPartBase_Factory(t) { return new (t || MatDateRangeInputPartBase)(ɵngcc0.ɵɵdirectiveInject(MAT_DATE_RANGE_INPUT_PARENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ɵngcc10.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc10.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8)); };\nMatDateRangeInputPartBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatDateRangeInputPartBase, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatDateRangeInputPartBase.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DATE_RANGE_INPUT_PARENT,] }] },\n    { type: ElementRef },\n    { type: ErrorStateMatcher },\n    { type: Injector },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDateRangeInputPartBase, [{\n        type: Directive\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_DATE_RANGE_INPUT_PARENT]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc2.ErrorStateMatcher }, { type: ɵngcc0.Injector }, { type: ɵngcc10.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc10.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }]; }, null); })();\nconst _MatDateRangeInputBase = \n// Needs to be `as any`, because the base class is abstract.\nmixinErrorState(MatDateRangeInputPartBase);\n/** Input for entering the start date in a `mat-date-range-input`. */\nclass MatStartDate extends _MatDateRangeInputBase {\n    constructor(rangeInput, elementRef, defaultErrorStateMatcher, injector, parentForm, parentFormGroup, dateAdapter, dateFormats) {\n        // TODO(crisbeto): this constructor shouldn't be necessary, but ViewEngine doesn't seem to\n        // handle DI correctly when it is inherited from `MatDateRangeInputPartBase`. We can drop this\n        // constructor once ViewEngine is removed.\n        super(rangeInput, elementRef, defaultErrorStateMatcher, injector, parentForm, parentFormGroup, dateAdapter, dateFormats);\n        /** Validator that checks that the start date isn't after the end date. */\n        this._startValidator = (control) => {\n            const start = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            const end = this._model ? this._model.selection.end : null;\n            return (!start || !end ||\n                this._dateAdapter.compareDate(start, end) <= 0) ?\n                null : { 'matStartDateInvalid': { 'end': end, 'actual': start } };\n        };\n        this._validator = Validators.compose([...super._getValidators(), this._startValidator]);\n    }\n    ngOnInit() {\n        // Normally this happens automatically, but it seems to break if not added explicitly when all\n        // of the criteria below are met:\n        // 1) The class extends a TS mixin.\n        // 2) The application is running in ViewEngine.\n        // 3) The application is being transpiled through tsickle.\n        // This can be removed once google3 is completely migrated to Ivy.\n        super.ngOnInit();\n    }\n    ngDoCheck() {\n        // Normally this happens automatically, but it seems to break if not added explicitly when all\n        // of the criteria below are met:\n        // 1) The class extends a TS mixin.\n        // 2) The application is running in ViewEngine.\n        // 3) The application is being transpiled through tsickle.\n        // This can be removed once google3 is completely migrated to Ivy.\n        super.ngDoCheck();\n    }\n    _getValueFromModel(modelValue) {\n        return modelValue.start;\n    }\n    _shouldHandleChangeEvent(change) {\n        var _a;\n        if (!super._shouldHandleChangeEvent(change)) {\n            return false;\n        }\n        else {\n            return !((_a = change.oldValue) === null || _a === void 0 ? void 0 : _a.start) ? !!change.selection.start :\n                !change.selection.start ||\n                    !!this._dateAdapter.compareDate(change.oldValue.start, change.selection.start);\n        }\n    }\n    _assignValueToModel(value) {\n        if (this._model) {\n            const range = new DateRange(value, this._model.selection.end);\n            this._model.updateSelection(range, this);\n        }\n    }\n    _formatValue(value) {\n        super._formatValue(value);\n        // Any time the input value is reformatted we need to tell the parent.\n        this._rangeInput._handleChildValueChange();\n    }\n    /** Gets the value that should be used when mirroring the input's size. */\n    getMirrorValue() {\n        const element = this._elementRef.nativeElement;\n        const value = element.value;\n        return value.length > 0 ? value : element.placeholder;\n    }\n}\nMatStartDate.ɵfac = function MatStartDate_Factory(t) { return new (t || MatStartDate)(ɵngcc0.ɵɵdirectiveInject(MAT_DATE_RANGE_INPUT_PARENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ɵngcc10.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc10.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8)); };\nMatStartDate.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatStartDate, selectors: [[\"input\", \"matStartDate\", \"\"]], hostAttrs: [\"type\", \"text\", 1, \"mat-start-date\", \"mat-date-range-input-inner\"], hostVars: 6, hostBindings: function MatStartDate_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"input\", function MatStartDate_input_HostBindingHandler($event) { return ctx._onInput($event.target.value); })(\"change\", function MatStartDate_change_HostBindingHandler() { return ctx._onChange(); })(\"keydown\", function MatStartDate_keydown_HostBindingHandler($event) { return ctx._onKeydown($event); })(\"blur\", function MatStartDate_blur_HostBindingHandler() { return ctx._onBlur(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"disabled\", ctx.disabled);\n        ɵngcc0.ɵɵattribute(\"id\", ctx._rangeInput.id)(\"aria-haspopup\", ctx._rangeInput.rangePicker ? \"dialog\" : null)(\"aria-owns\", (ctx._rangeInput.rangePicker == null ? null : ctx._rangeInput.rangePicker.opened) && ctx._rangeInput.rangePicker.id || null)(\"min\", ctx._getMinDate() ? ctx._dateAdapter.toIso8601(ctx._getMinDate()) : null)(\"max\", ctx._getMaxDate() ? ctx._dateAdapter.toIso8601(ctx._getMaxDate()) : null);\n    } }, inputs: { errorStateMatcher: \"errorStateMatcher\" }, outputs: { dateChange: \"dateChange\", dateInput: \"dateInput\" }, features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: NG_VALUE_ACCESSOR, useExisting: MatStartDate, multi: true },\n            { provide: NG_VALIDATORS, useExisting: MatStartDate, multi: true }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatStartDate.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DATE_RANGE_INPUT_PARENT,] }] },\n    { type: ElementRef },\n    { type: ErrorStateMatcher },\n    { type: Injector },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatStartDate, [{\n        type: Directive,\n        args: [{\n                selector: 'input[matStartDate]',\n                host: {\n                    'class': 'mat-start-date mat-date-range-input-inner',\n                    '[disabled]': 'disabled',\n                    '(input)': '_onInput($event.target.value)',\n                    '(change)': '_onChange()',\n                    '(keydown)': '_onKeydown($event)',\n                    '[attr.id]': '_rangeInput.id',\n                    '[attr.aria-haspopup]': '_rangeInput.rangePicker ? \"dialog\" : null',\n                    '[attr.aria-owns]': '(_rangeInput.rangePicker?.opened && _rangeInput.rangePicker.id) || null',\n                    '[attr.min]': '_getMinDate() ? _dateAdapter.toIso8601(_getMinDate()) : null',\n                    '[attr.max]': '_getMaxDate() ? _dateAdapter.toIso8601(_getMaxDate()) : null',\n                    '(blur)': '_onBlur()',\n                    'type': 'text'\n                },\n                providers: [\n                    { provide: NG_VALUE_ACCESSOR, useExisting: MatStartDate, multi: true },\n                    { provide: NG_VALIDATORS, useExisting: MatStartDate, multi: true }\n                ],\n                // These need to be specified explicitly, because some tooling doesn't\n                // seem to pick them up from the base class. See #20932.\n                outputs: ['dateChange', 'dateInput'],\n                inputs: ['errorStateMatcher']\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_DATE_RANGE_INPUT_PARENT]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc2.ErrorStateMatcher }, { type: ɵngcc0.Injector }, { type: ɵngcc10.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc10.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }]; }, null); })();\n/** Input for entering the end date in a `mat-date-range-input`. */\nclass MatEndDate extends _MatDateRangeInputBase {\n    constructor(rangeInput, elementRef, defaultErrorStateMatcher, injector, parentForm, parentFormGroup, dateAdapter, dateFormats) {\n        // TODO(crisbeto): this constructor shouldn't be necessary, but ViewEngine doesn't seem to\n        // handle DI correctly when it is inherited from `MatDateRangeInputPartBase`. We can drop this\n        // constructor once ViewEngine is removed.\n        super(rangeInput, elementRef, defaultErrorStateMatcher, injector, parentForm, parentFormGroup, dateAdapter, dateFormats);\n        /** Validator that checks that the end date isn't before the start date. */\n        this._endValidator = (control) => {\n            const end = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            const start = this._model ? this._model.selection.start : null;\n            return (!end || !start ||\n                this._dateAdapter.compareDate(end, start) >= 0) ?\n                null : { 'matEndDateInvalid': { 'start': start, 'actual': end } };\n        };\n        this._validator = Validators.compose([...super._getValidators(), this._endValidator]);\n    }\n    ngOnInit() {\n        // Normally this happens automatically, but it seems to break if not added explicitly when all\n        // of the criteria below are met:\n        // 1) The class extends a TS mixin.\n        // 2) The application is running in ViewEngine.\n        // 3) The application is being transpiled through tsickle.\n        // This can be removed once google3 is completely migrated to Ivy.\n        super.ngOnInit();\n    }\n    ngDoCheck() {\n        // Normally this happens automatically, but it seems to break if not added explicitly when all\n        // of the criteria below are met:\n        // 1) The class extends a TS mixin.\n        // 2) The application is running in ViewEngine.\n        // 3) The application is being transpiled through tsickle.\n        // This can be removed once google3 is completely migrated to Ivy.\n        super.ngDoCheck();\n    }\n    _getValueFromModel(modelValue) {\n        return modelValue.end;\n    }\n    _shouldHandleChangeEvent(change) {\n        var _a;\n        if (!super._shouldHandleChangeEvent(change)) {\n            return false;\n        }\n        else {\n            return !((_a = change.oldValue) === null || _a === void 0 ? void 0 : _a.end) ? !!change.selection.end :\n                !change.selection.end ||\n                    !!this._dateAdapter.compareDate(change.oldValue.end, change.selection.end);\n        }\n    }\n    _assignValueToModel(value) {\n        if (this._model) {\n            const range = new DateRange(this._model.selection.start, value);\n            this._model.updateSelection(range, this);\n        }\n    }\n    _onKeydown(event) {\n        // If the user is pressing backspace on an empty end input, move focus back to the start.\n        if (event.keyCode === BACKSPACE && !this._elementRef.nativeElement.value) {\n            this._rangeInput._startInput.focus();\n        }\n        super._onKeydown(event);\n    }\n}\nMatEndDate.ɵfac = function MatEndDate_Factory(t) { return new (t || MatEndDate)(ɵngcc0.ɵɵdirectiveInject(MAT_DATE_RANGE_INPUT_PARENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ɵngcc10.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc10.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8)); };\nMatEndDate.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatEndDate, selectors: [[\"input\", \"matEndDate\", \"\"]], hostAttrs: [\"type\", \"text\", 1, \"mat-end-date\", \"mat-date-range-input-inner\"], hostVars: 5, hostBindings: function MatEndDate_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"input\", function MatEndDate_input_HostBindingHandler($event) { return ctx._onInput($event.target.value); })(\"change\", function MatEndDate_change_HostBindingHandler() { return ctx._onChange(); })(\"keydown\", function MatEndDate_keydown_HostBindingHandler($event) { return ctx._onKeydown($event); })(\"blur\", function MatEndDate_blur_HostBindingHandler() { return ctx._onBlur(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"disabled\", ctx.disabled);\n        ɵngcc0.ɵɵattribute(\"aria-haspopup\", ctx._rangeInput.rangePicker ? \"dialog\" : null)(\"aria-owns\", (ctx._rangeInput.rangePicker == null ? null : ctx._rangeInput.rangePicker.opened) && ctx._rangeInput.rangePicker.id || null)(\"min\", ctx._getMinDate() ? ctx._dateAdapter.toIso8601(ctx._getMinDate()) : null)(\"max\", ctx._getMaxDate() ? ctx._dateAdapter.toIso8601(ctx._getMaxDate()) : null);\n    } }, inputs: { errorStateMatcher: \"errorStateMatcher\" }, outputs: { dateChange: \"dateChange\", dateInput: \"dateInput\" }, features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: NG_VALUE_ACCESSOR, useExisting: MatEndDate, multi: true },\n            { provide: NG_VALIDATORS, useExisting: MatEndDate, multi: true }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatEndDate.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DATE_RANGE_INPUT_PARENT,] }] },\n    { type: ElementRef },\n    { type: ErrorStateMatcher },\n    { type: Injector },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatEndDate, [{\n        type: Directive,\n        args: [{\n                selector: 'input[matEndDate]',\n                host: {\n                    'class': 'mat-end-date mat-date-range-input-inner',\n                    '[disabled]': 'disabled',\n                    '(input)': '_onInput($event.target.value)',\n                    '(change)': '_onChange()',\n                    '(keydown)': '_onKeydown($event)',\n                    '[attr.aria-haspopup]': '_rangeInput.rangePicker ? \"dialog\" : null',\n                    '[attr.aria-owns]': '(_rangeInput.rangePicker?.opened && _rangeInput.rangePicker.id) || null',\n                    '[attr.min]': '_getMinDate() ? _dateAdapter.toIso8601(_getMinDate()) : null',\n                    '[attr.max]': '_getMaxDate() ? _dateAdapter.toIso8601(_getMaxDate()) : null',\n                    '(blur)': '_onBlur()',\n                    'type': 'text'\n                },\n                providers: [\n                    { provide: NG_VALUE_ACCESSOR, useExisting: MatEndDate, multi: true },\n                    { provide: NG_VALIDATORS, useExisting: MatEndDate, multi: true }\n                ],\n                // These need to be specified explicitly, because some tooling doesn't\n                // seem to pick them up from the base class. See #20932.\n                outputs: ['dateChange', 'dateInput'],\n                inputs: ['errorStateMatcher']\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_DATE_RANGE_INPUT_PARENT]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc2.ErrorStateMatcher }, { type: ɵngcc0.Injector }, { type: ɵngcc10.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc10.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId = 0;\nclass MatDateRangeInput {\n    constructor(_changeDetectorRef, _elementRef, control, _dateAdapter, _formField) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._dateAdapter = _dateAdapter;\n        this._formField = _formField;\n        this._closedSubscription = Subscription.EMPTY;\n        /** Unique ID for the input. */\n        this.id = `mat-date-range-input-${nextUniqueId++}`;\n        /** Whether the control is focused. */\n        this.focused = false;\n        /** Name of the form control. */\n        this.controlType = 'mat-date-range-input';\n        this._groupDisabled = false;\n        /** Value for the `aria-describedby` attribute of the inputs. */\n        this._ariaDescribedBy = null;\n        /** Separator text to be shown between the inputs. */\n        this.separator = '–';\n        /** Start of the comparison range that should be shown in the calendar. */\n        this.comparisonStart = null;\n        /** End of the comparison range that should be shown in the calendar. */\n        this.comparisonEnd = null;\n        /** Emits when the input's state has changed. */\n        this.stateChanges = new Subject();\n        if (!_dateAdapter && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        // The datepicker module can be used both with MDC and non-MDC form fields. We have\n        // to conditionally add the MDC input class so that the range picker looks correctly.\n        if (_formField === null || _formField === void 0 ? void 0 : _formField._elementRef.nativeElement.classList.contains('mat-mdc-form-field')) {\n            _elementRef.nativeElement.classList.add('mat-mdc-input-element');\n        }\n        // TODO(crisbeto): remove `as any` after #18206 lands.\n        this.ngControl = control;\n    }\n    /** Current value of the range input. */\n    get value() {\n        return this._model ? this._model.selection : null;\n    }\n    /** Whether the control's label should float. */\n    get shouldLabelFloat() {\n        return this.focused || !this.empty;\n    }\n    /**\n     * Implemented as a part of `MatFormFieldControl`.\n     * Set the placeholder attribute on `matStartDate` and `matEndDate`.\n     * @docs-private\n     */\n    get placeholder() {\n        var _a, _b;\n        const start = ((_a = this._startInput) === null || _a === void 0 ? void 0 : _a._getPlaceholder()) || '';\n        const end = ((_b = this._endInput) === null || _b === void 0 ? void 0 : _b._getPlaceholder()) || '';\n        return (start || end) ? `${start} ${this.separator} ${end}` : '';\n    }\n    /** The range picker that this input is associated with. */\n    get rangePicker() { return this._rangePicker; }\n    set rangePicker(rangePicker) {\n        if (rangePicker) {\n            this._model = rangePicker.registerInput(this);\n            this._rangePicker = rangePicker;\n            this._closedSubscription.unsubscribe();\n            this._closedSubscription = rangePicker.closedStream.subscribe(() => {\n                var _a, _b;\n                (_a = this._startInput) === null || _a === void 0 ? void 0 : _a._onTouched();\n                (_b = this._endInput) === null || _b === void 0 ? void 0 : _b._onTouched();\n            });\n            this._registerModel(this._model);\n        }\n    }\n    /** Whether the input is required. */\n    get required() { return !!this._required; }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n    }\n    /** Function that can be used to filter out dates within the date range picker. */\n    get dateFilter() { return this._dateFilter; }\n    set dateFilter(value) {\n        const start = this._startInput;\n        const end = this._endInput;\n        const wasMatchingStart = start && start._matchesFilter(start.value);\n        const wasMatchingEnd = end && end._matchesFilter(start.value);\n        this._dateFilter = value;\n        if (start && start._matchesFilter(start.value) !== wasMatchingStart) {\n            start._validatorOnChange();\n        }\n        if (end && end._matchesFilter(end.value) !== wasMatchingEnd) {\n            end._validatorOnChange();\n        }\n    }\n    /** The minimum valid date. */\n    get min() { return this._min; }\n    set min(value) {\n        const validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        if (!this._dateAdapter.sameDate(validValue, this._min)) {\n            this._min = validValue;\n            this._revalidate();\n        }\n    }\n    /** The maximum valid date. */\n    get max() { return this._max; }\n    set max(value) {\n        const validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        if (!this._dateAdapter.sameDate(validValue, this._max)) {\n            this._max = validValue;\n            this._revalidate();\n        }\n    }\n    /** Whether the input is disabled. */\n    get disabled() {\n        return (this._startInput && this._endInput) ?\n            (this._startInput.disabled && this._endInput.disabled) :\n            this._groupDisabled;\n    }\n    set disabled(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._groupDisabled) {\n            this._groupDisabled = newValue;\n            this.stateChanges.next(undefined);\n        }\n    }\n    /** Whether the input is in an error state. */\n    get errorState() {\n        if (this._startInput && this._endInput) {\n            return this._startInput.errorState || this._endInput.errorState;\n        }\n        return false;\n    }\n    /** Whether the datepicker input is empty. */\n    get empty() {\n        const startEmpty = this._startInput ? this._startInput.isEmpty() : false;\n        const endEmpty = this._endInput ? this._endInput.isEmpty() : false;\n        return startEmpty && endEmpty;\n    }\n    /**\n     * Implemented as a part of `MatFormFieldControl`.\n     * @docs-private\n     */\n    setDescribedByIds(ids) {\n        this._ariaDescribedBy = ids.length ? ids.join(' ') : null;\n    }\n    /**\n     * Implemented as a part of `MatFormFieldControl`.\n     * @docs-private\n     */\n    onContainerClick() {\n        if (!this.focused && !this.disabled) {\n            if (!this._model || !this._model.selection.start) {\n                this._startInput.focus();\n            }\n            else {\n                this._endInput.focus();\n            }\n        }\n    }\n    ngAfterContentInit() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._startInput) {\n                throw Error('mat-date-range-input must contain a matStartDate input');\n            }\n            if (!this._endInput) {\n                throw Error('mat-date-range-input must contain a matEndDate input');\n            }\n        }\n        if (this._model) {\n            this._registerModel(this._model);\n        }\n        // We don't need to unsubscribe from this, because we\n        // know that the input streams will be completed on destroy.\n        merge(this._startInput.stateChanges, this._endInput.stateChanges).subscribe(() => {\n            this.stateChanges.next(undefined);\n        });\n    }\n    ngOnChanges(changes) {\n        if (dateInputsHaveChanged(changes, this._dateAdapter)) {\n            this.stateChanges.next(undefined);\n        }\n    }\n    ngOnDestroy() {\n        this._closedSubscription.unsubscribe();\n        this.stateChanges.complete();\n    }\n    /** Gets the date at which the calendar should start. */\n    getStartValue() {\n        return this.value ? this.value.start : null;\n    }\n    /** Gets the input's theme palette. */\n    getThemePalette() {\n        return this._formField ? this._formField.color : undefined;\n    }\n    /** Gets the element to which the calendar overlay should be attached. */\n    getConnectedOverlayOrigin() {\n        return this._formField ? this._formField.getConnectedOverlayOrigin() : this._elementRef;\n    }\n    /** Gets the value that is used to mirror the state input. */\n    _getInputMirrorValue() {\n        return this._startInput ? this._startInput.getMirrorValue() : '';\n    }\n    /** Whether the input placeholders should be hidden. */\n    _shouldHidePlaceholders() {\n        return this._startInput ? !this._startInput.isEmpty() : false;\n    }\n    /** Handles the value in one of the child inputs changing. */\n    _handleChildValueChange() {\n        this.stateChanges.next(undefined);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Opens the date range picker associated with the input. */\n    _openDatepicker() {\n        if (this._rangePicker) {\n            this._rangePicker.open();\n        }\n    }\n    /** Whether the separate text should be hidden. */\n    _shouldHideSeparator() {\n        return (!this._formField || (this._formField.getLabelId() &&\n            !this._formField._shouldLabelFloat())) && this.empty;\n    }\n    /** Gets the value for the `aria-labelledby` attribute of the inputs. */\n    _getAriaLabelledby() {\n        const formField = this._formField;\n        return formField && formField._hasFloatingLabel() ? formField._labelId : null;\n    }\n    /** Updates the focused state of the range input. */\n    _updateFocus(origin) {\n        this.focused = origin !== null;\n        this.stateChanges.next();\n    }\n    /** Re-runs the validators on the start/end inputs. */\n    _revalidate() {\n        if (this._startInput) {\n            this._startInput._validatorOnChange();\n        }\n        if (this._endInput) {\n            this._endInput._validatorOnChange();\n        }\n    }\n    /** Registers the current date selection model with the start/end inputs. */\n    _registerModel(model) {\n        if (this._startInput) {\n            this._startInput._registerModel(model);\n        }\n        if (this._endInput) {\n            this._endInput._registerModel(model);\n        }\n    }\n}\nMatDateRangeInput.ɵfac = function MatDateRangeInput_Factory(t) { return new (t || MatDateRangeInput)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc10.ControlContainer, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD, 8)); };\nMatDateRangeInput.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDateRangeInput, selectors: [[\"mat-date-range-input\"]], contentQueries: function MatDateRangeInput_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatStartDate, 1);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatEndDate, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._startInput = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._endInput = _t.first);\n    } }, hostAttrs: [\"role\", \"group\", 1, \"mat-date-range-input\"], hostVars: 8, hostBindings: function MatDateRangeInput_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", null)(\"aria-labelledby\", ctx._getAriaLabelledby())(\"aria-describedby\", ctx._ariaDescribedBy)(\"data-mat-calendar\", ctx.rangePicker ? ctx.rangePicker.id : null);\n        ɵngcc0.ɵɵclassProp(\"mat-date-range-input-hide-placeholders\", ctx._shouldHidePlaceholders())(\"mat-date-range-input-required\", ctx.required);\n    } }, inputs: { separator: \"separator\", comparisonStart: \"comparisonStart\", comparisonEnd: \"comparisonEnd\", rangePicker: \"rangePicker\", required: \"required\", dateFilter: \"dateFilter\", min: \"min\", max: \"max\", disabled: \"disabled\" }, exportAs: [\"matDateRangeInput\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MatFormFieldControl, useExisting: MatDateRangeInput },\n            { provide: MAT_DATE_RANGE_INPUT_PARENT, useExisting: MatDateRangeInput },\n        ]), ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c6, decls: 9, vars: 4, consts: [[\"cdkMonitorSubtreeFocus\", \"\", 1, \"mat-date-range-input-container\", 3, \"cdkFocusChange\"], [1, \"mat-date-range-input-start-wrapper\"], [\"aria-hidden\", \"true\", 1, \"mat-date-range-input-mirror\"], [1, \"mat-date-range-input-separator\"], [1, \"mat-date-range-input-end-wrapper\"]], template: function MatDateRangeInput_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c5);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵlistener(\"cdkFocusChange\", function MatDateRangeInput_Template_div_cdkFocusChange_0_listener($event) { return ctx._updateFocus($event); });\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementStart(3, \"span\", 2);\n        ɵngcc0.ɵɵtext(4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(5, \"span\", 3);\n        ɵngcc0.ɵɵtext(6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(7, \"div\", 4);\n        ɵngcc0.ɵɵprojection(8, 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵtextInterpolate(ctx._getInputMirrorValue());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"mat-date-range-input-separator-hidden\", ctx._shouldHideSeparator());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate(ctx.separator);\n    } }, directives: [ɵngcc5.CdkMonitorFocus], styles: [\".mat-date-range-input{display:block;width:100%}.mat-date-range-input-container{display:flex;align-items:center}.mat-date-range-input-separator{transition:opacity 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1);margin:0 4px}.mat-date-range-input-separator-hidden{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;opacity:0;transition:none}.mat-date-range-input-inner{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;vertical-align:bottom;text-align:inherit;-webkit-appearance:none;width:100%}.mat-date-range-input-inner::-ms-clear,.mat-date-range-input-inner::-ms-reveal{display:none}.mat-date-range-input-inner:-moz-ui-invalid{box-shadow:none}.mat-date-range-input-inner::placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner::-moz-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner::-webkit-input-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner:-ms-input-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-hide-placeholder .mat-date-range-input-inner::placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-date-range-input-inner::-moz-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-date-range-input-inner::-webkit-input-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-date-range-input-inner:-ms-input-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-date-range-input-mirror{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;visibility:hidden;white-space:nowrap;display:inline-block;min-width:2px}.mat-date-range-input-start-wrapper{position:relative;overflow:hidden;max-width:calc(50% - 4px)}.mat-date-range-input-start-wrapper .mat-date-range-input-inner{position:absolute;top:0;left:0}.mat-date-range-input-end-wrapper{flex-grow:1;max-width:calc(50% - 4px)}.mat-form-field-type-mat-date-range-input .mat-form-field-infix{width:200px}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatDateRangeInput.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: ControlContainer, decorators: [{ type: Optional }, { type: Self }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: MatFormField, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD,] }] }\n];\nMatDateRangeInput.propDecorators = {\n    rangePicker: [{ type: Input }],\n    required: [{ type: Input }],\n    dateFilter: [{ type: Input }],\n    min: [{ type: Input }],\n    max: [{ type: Input }],\n    disabled: [{ type: Input }],\n    separator: [{ type: Input }],\n    comparisonStart: [{ type: Input }],\n    comparisonEnd: [{ type: Input }],\n    _startInput: [{ type: ContentChild, args: [MatStartDate,] }],\n    _endInput: [{ type: ContentChild, args: [MatEndDate,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDateRangeInput, [{\n        type: Component,\n        args: [{\n                selector: 'mat-date-range-input',\n                template: \"<div\\n  class=\\\"mat-date-range-input-container\\\"\\n  cdkMonitorSubtreeFocus\\n  (cdkFocusChange)=\\\"_updateFocus($event)\\\">\\n  <div class=\\\"mat-date-range-input-start-wrapper\\\">\\n    <ng-content select=\\\"input[matStartDate]\\\"></ng-content>\\n    <span\\n      class=\\\"mat-date-range-input-mirror\\\"\\n      aria-hidden=\\\"true\\\">{{_getInputMirrorValue()}}</span>\\n  </div>\\n\\n  <span\\n    class=\\\"mat-date-range-input-separator\\\"\\n    [class.mat-date-range-input-separator-hidden]=\\\"_shouldHideSeparator()\\\">{{separator}}</span>\\n\\n  <div class=\\\"mat-date-range-input-end-wrapper\\\">\\n    <ng-content select=\\\"input[matEndDate]\\\"></ng-content>\\n  </div>\\n</div>\\n\\n\",\n                exportAs: 'matDateRangeInput',\n                host: {\n                    'class': 'mat-date-range-input',\n                    '[class.mat-date-range-input-hide-placeholders]': '_shouldHidePlaceholders()',\n                    '[class.mat-date-range-input-required]': 'required',\n                    '[attr.id]': 'null',\n                    'role': 'group',\n                    '[attr.aria-labelledby]': '_getAriaLabelledby()',\n                    '[attr.aria-describedby]': '_ariaDescribedBy',\n                    // Used by the test harness to tie this input to its calendar. We can't depend on\n                    // `aria-owns` for this, because it's only defined while the calendar is open.\n                    '[attr.data-mat-calendar]': 'rangePicker ? rangePicker.id : null'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                providers: [\n                    { provide: MatFormFieldControl, useExisting: MatDateRangeInput },\n                    { provide: MAT_DATE_RANGE_INPUT_PARENT, useExisting: MatDateRangeInput },\n                ],\n                styles: [\".mat-date-range-input{display:block;width:100%}.mat-date-range-input-container{display:flex;align-items:center}.mat-date-range-input-separator{transition:opacity 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1);margin:0 4px}.mat-date-range-input-separator-hidden{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;opacity:0;transition:none}.mat-date-range-input-inner{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;vertical-align:bottom;text-align:inherit;-webkit-appearance:none;width:100%}.mat-date-range-input-inner::-ms-clear,.mat-date-range-input-inner::-ms-reveal{display:none}.mat-date-range-input-inner:-moz-ui-invalid{box-shadow:none}.mat-date-range-input-inner::placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner::-moz-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner::-webkit-input-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner:-ms-input-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-hide-placeholder .mat-date-range-input-inner::placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-date-range-input-inner::-moz-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-date-range-input-inner::-webkit-input-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-date-range-input-inner:-ms-input-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-date-range-input-mirror{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;visibility:hidden;white-space:nowrap;display:inline-block;min-width:2px}.mat-date-range-input-start-wrapper{position:relative;overflow:hidden;max-width:calc(50% - 4px)}.mat-date-range-input-start-wrapper .mat-date-range-input-inner{position:absolute;top:0;left:0}.mat-date-range-input-end-wrapper{flex-grow:1;max-width:calc(50% - 4px)}.mat-form-field-type-mat-date-range-input .mat-form-field-infix{width:200px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc10.ControlContainer, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }] }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc9.MatFormField, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD]\n            }] }]; }, { separator: [{\n            type: Input\n        }], comparisonStart: [{\n            type: Input\n        }], comparisonEnd: [{\n            type: Input\n        }], rangePicker: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], dateFilter: [{\n            type: Input\n        }], min: [{\n            type: Input\n        }], max: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], _startInput: [{\n            type: ContentChild,\n            args: [MatStartDate]\n        }], _endInput: [{\n            type: ContentChild,\n            args: [MatEndDate]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(mmalerba): We use a component instead of a directive here so the user can use implicit\n// template reference variables (e.g. #d vs #d=\"matDateRangePicker\"). We can change this to a\n// directive if angular adds support for `exportAs: '$implicit'` on directives.\n/** Component responsible for managing the date range picker popup/dialog. */\nclass MatDateRangePicker extends MatDatepickerBase {\n    _forwardContentValues(instance) {\n        super._forwardContentValues(instance);\n        const input = this.datepickerInput;\n        if (input) {\n            instance.comparisonStart = input.comparisonStart;\n            instance.comparisonEnd = input.comparisonEnd;\n        }\n    }\n}\nMatDateRangePicker.ɵfac = function MatDateRangePicker_Factory(t) { return ɵMatDateRangePicker_BaseFactory(t || MatDateRangePicker); };\nMatDateRangePicker.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDateRangePicker, selectors: [[\"mat-date-range-picker\"]], exportAs: [\"matDateRangePicker\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER,\n            MAT_CALENDAR_RANGE_STRATEGY_PROVIDER,\n            { provide: MatDatepickerBase, useExisting: MatDateRangePicker },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function MatDateRangePicker_Template(rf, ctx) { }, encapsulation: 2, changeDetection: 0 });\nconst ɵMatDateRangePicker_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatDateRangePicker);\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDateRangePicker, [{\n        type: Component,\n        args: [{\n                selector: 'mat-date-range-picker',\n                template: '',\n                exportAs: 'matDateRangePicker',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                providers: [\n                    MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER,\n                    MAT_CALENDAR_RANGE_STRATEGY_PROVIDER,\n                    { provide: MatDatepickerBase, useExisting: MatDateRangePicker },\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Button that will close the datepicker and assign the current selection to the data model. */\nclass MatDatepickerApply {\n    constructor(_datepicker) {\n        this._datepicker = _datepicker;\n    }\n    _applySelection() {\n        this._datepicker._applyPendingSelection();\n        this._datepicker.close();\n    }\n}\nMatDatepickerApply.ɵfac = function MatDatepickerApply_Factory(t) { return new (t || MatDatepickerApply)(ɵngcc0.ɵɵdirectiveInject(MatDatepickerBase)); };\nMatDatepickerApply.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatDatepickerApply, selectors: [[\"\", \"matDatepickerApply\", \"\"], [\"\", \"matDateRangePickerApply\", \"\"]], hostBindings: function MatDatepickerApply_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatDatepickerApply_click_HostBindingHandler() { return ctx._applySelection(); });\n    } } });\nMatDatepickerApply.ctorParameters = () => [\n    { type: MatDatepickerBase }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerApply, [{\n        type: Directive,\n        args: [{\n                selector: '[matDatepickerApply], [matDateRangePickerApply]',\n                host: { '(click)': '_applySelection()' }\n            }]\n    }], function () { return [{ type: MatDatepickerBase }]; }, null); })();\n/** Button that will close the datepicker and discard the current selection. */\nclass MatDatepickerCancel {\n    constructor(_datepicker) {\n        this._datepicker = _datepicker;\n    }\n}\nMatDatepickerCancel.ɵfac = function MatDatepickerCancel_Factory(t) { return new (t || MatDatepickerCancel)(ɵngcc0.ɵɵdirectiveInject(MatDatepickerBase)); };\nMatDatepickerCancel.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatDatepickerCancel, selectors: [[\"\", \"matDatepickerCancel\", \"\"], [\"\", \"matDateRangePickerCancel\", \"\"]], hostBindings: function MatDatepickerCancel_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatDatepickerCancel_click_HostBindingHandler() { return ctx._datepicker.close(); });\n    } } });\nMatDatepickerCancel.ctorParameters = () => [\n    { type: MatDatepickerBase }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerCancel, [{\n        type: Directive,\n        args: [{\n                selector: '[matDatepickerCancel], [matDateRangePickerCancel]',\n                host: { '(click)': '_datepicker.close()' }\n            }]\n    }], function () { return [{ type: MatDatepickerBase }]; }, null); })();\n/**\n * Container that can be used to project a row of action buttons\n * to the bottom of a datepicker or date range picker.\n */\nclass MatDatepickerActions {\n    constructor(_datepicker, _viewContainerRef) {\n        this._datepicker = _datepicker;\n        this._viewContainerRef = _viewContainerRef;\n    }\n    ngAfterViewInit() {\n        this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n        this._datepicker.registerActions(this._portal);\n    }\n    ngOnDestroy() {\n        var _a;\n        this._datepicker.removeActions(this._portal);\n        // Needs to be null checked since we initialize it in `ngAfterViewInit`.\n        if (this._portal && this._portal.isAttached) {\n            (_a = this._portal) === null || _a === void 0 ? void 0 : _a.detach();\n        }\n    }\n}\nMatDatepickerActions.ɵfac = function MatDatepickerActions_Factory(t) { return new (t || MatDatepickerActions)(ɵngcc0.ɵɵdirectiveInject(MatDatepickerBase), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef)); };\nMatDatepickerActions.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDatepickerActions, selectors: [[\"mat-datepicker-actions\"], [\"mat-date-range-picker-actions\"]], viewQuery: function MatDatepickerActions_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(TemplateRef, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._template = _t.first);\n    } }, ngContentSelectors: _c1, decls: 1, vars: 0, consts: [[1, \"mat-datepicker-actions\"]], template: function MatDatepickerActions_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatDatepickerActions_ng_template_0_Template, 2, 0, \"ng-template\");\n    } }, styles: [\".mat-datepicker-actions{display:flex;justify-content:flex-end;align-items:center;padding:0 8px 8px 8px}.mat-datepicker-actions .mat-button-base+.mat-button-base{margin-left:8px}[dir=rtl] .mat-datepicker-actions .mat-button-base+.mat-button-base{margin-left:0;margin-right:8px}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatDatepickerActions.ctorParameters = () => [\n    { type: MatDatepickerBase },\n    { type: ViewContainerRef }\n];\nMatDatepickerActions.propDecorators = {\n    _template: [{ type: ViewChild, args: [TemplateRef,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerActions, [{\n        type: Component,\n        args: [{\n                selector: 'mat-datepicker-actions, mat-date-range-picker-actions',\n                template: `\n    <ng-template>\n      <div class=\"mat-datepicker-actions\">\n        <ng-content></ng-content>\n      </div>\n    </ng-template>\n  `,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-datepicker-actions{display:flex;justify-content:flex-end;align-items:center;padding:0 8px 8px 8px}.mat-datepicker-actions .mat-button-base+.mat-button-base{margin-left:8px}[dir=rtl] .mat-datepicker-actions .mat-button-base+.mat-button-base{margin-left:0;margin-right:8px}\\n\"]\n            }]\n    }], function () { return [{ type: MatDatepickerBase }, { type: ɵngcc0.ViewContainerRef }]; }, { _template: [{\n            type: ViewChild,\n            args: [TemplateRef]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatDatepickerModule {\n}\nMatDatepickerModule.ɵfac = function MatDatepickerModule_Factory(t) { return new (t || MatDatepickerModule)(); };\nMatDatepickerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatDatepickerModule });\nMatDatepickerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ providers: [\n        MatDatepickerIntl,\n        MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER\n    ], imports: [[\n            CommonModule,\n            MatButtonModule,\n            MatDialogModule,\n            OverlayModule,\n            A11yModule,\n            PortalModule,\n            MatCommonModule,\n        ], CdkScrollableModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatDatepickerModule, { declarations: function () { return [MatCalendar, MatCalendarBody, MatDatepicker, MatDatepickerContent, MatDatepickerInput, MatDatepickerToggle, MatDatepickerToggleIcon, MatMonthView, MatYearView, MatMultiYearView, MatCalendarHeader, MatDateRangeInput, MatStartDate, MatEndDate, MatDateRangePicker, MatDatepickerActions, MatDatepickerCancel, MatDatepickerApply]; }, imports: function () { return [CommonModule,\n        MatButtonModule,\n        MatDialogModule,\n        OverlayModule,\n        A11yModule,\n        PortalModule,\n        MatCommonModule]; }, exports: function () { return [CdkScrollableModule, MatCalendar, MatCalendarBody, MatDatepicker, MatDatepickerContent, MatDatepickerInput, MatDatepickerToggle, MatDatepickerToggleIcon, MatMonthView, MatYearView, MatMultiYearView, MatCalendarHeader, MatDateRangeInput, MatStartDate, MatEndDate, MatDateRangePicker, MatDatepickerActions, MatDatepickerCancel, MatDatepickerApply]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatButtonModule,\n                    MatDialogModule,\n                    OverlayModule,\n                    A11yModule,\n                    PortalModule,\n                    MatCommonModule,\n                ],\n                exports: [\n                    CdkScrollableModule,\n                    MatCalendar,\n                    MatCalendarBody,\n                    MatDatepicker,\n                    MatDatepickerContent,\n                    MatDatepickerInput,\n                    MatDatepickerToggle,\n                    MatDatepickerToggleIcon,\n                    MatMonthView,\n                    MatYearView,\n                    MatMultiYearView,\n                    MatCalendarHeader,\n                    MatDateRangeInput,\n                    MatStartDate,\n                    MatEndDate,\n                    MatDateRangePicker,\n                    MatDatepickerActions,\n                    MatDatepickerCancel,\n                    MatDatepickerApply\n                ],\n                declarations: [\n                    MatCalendar,\n                    MatCalendarBody,\n                    MatDatepicker,\n                    MatDatepickerContent,\n                    MatDatepickerInput,\n                    MatDatepickerToggle,\n                    MatDatepickerToggleIcon,\n                    MatMonthView,\n                    MatYearView,\n                    MatMultiYearView,\n                    MatCalendarHeader,\n                    MatDateRangeInput,\n                    MatStartDate,\n                    MatEndDate,\n                    MatDateRangePicker,\n                    MatDatepickerActions,\n                    MatDatepickerCancel,\n                    MatDatepickerApply\n                ],\n                providers: [\n                    MatDatepickerIntl,\n                    MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER\n                ],\n                entryComponents: [\n                    MatDatepickerContent,\n                    MatCalendarHeader,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DateRange, DefaultMatCalendarRangeStrategy, MAT_DATEPICKER_SCROLL_STRATEGY, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER, MAT_DATEPICKER_VALIDATORS, MAT_DATEPICKER_VALUE_ACCESSOR, MAT_DATE_RANGE_SELECTION_STRATEGY, MAT_RANGE_DATE_SELECTION_MODEL_FACTORY, MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER, MAT_SINGLE_DATE_SELECTION_MODEL_FACTORY, MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER, MatCalendar, MatCalendarBody, MatCalendarCell, MatCalendarHeader, MatDateRangeInput, MatDateRangePicker, MatDateSelectionModel, MatDatepicker, MatDatepickerActions, MatDatepickerApply, MatDatepickerCancel, MatDatepickerContent, MatDatepickerInput, MatDatepickerInputEvent, MatDatepickerIntl, MatDatepickerModule, MatDatepickerToggle, MatDatepickerToggleIcon, MatEndDate, MatMonthView, MatMultiYearView, MatRangeDateSelectionModel, MatSingleDateSelectionModel, MatStartDate, MatYearView, matDatepickerAnimations, yearsPerPage, yearsPerRow, MAT_CALENDAR_RANGE_STRATEGY_PROVIDER_FACTORY as ɵangular_material_src_material_datepicker_datepicker_a, MAT_CALENDAR_RANGE_STRATEGY_PROVIDER as ɵangular_material_src_material_datepicker_datepicker_b, MatDatepickerBase as ɵangular_material_src_material_datepicker_datepicker_c, MatDatepickerInputBase as ɵangular_material_src_material_datepicker_datepicker_d, MAT_DATE_RANGE_INPUT_PARENT as ɵangular_material_src_material_datepicker_datepicker_e };\n\n//# sourceMappingURL=datepicker.js.map"]},"metadata":{},"sourceType":"module"}