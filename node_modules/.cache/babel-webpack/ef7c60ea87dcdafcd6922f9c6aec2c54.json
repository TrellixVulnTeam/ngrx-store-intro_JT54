{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Observable_1 = require(\"../Observable\");\n\nvar Subscription_1 = require(\"../Subscription\");\n\nvar iterator_1 = require(\"../symbol/iterator\");\n\nfunction scheduleIterable(input, scheduler) {\n  if (!input) {\n    throw new Error('Iterable cannot be null');\n  }\n\n  return new Observable_1.Observable(function (subscriber) {\n    var sub = new Subscription_1.Subscription();\n    var iterator;\n    sub.add(function () {\n      if (iterator && typeof iterator.return === 'function') {\n        iterator.return();\n      }\n    });\n    sub.add(scheduler.schedule(function () {\n      iterator = input[iterator_1.iterator]();\n      sub.add(scheduler.schedule(function () {\n        if (subscriber.closed) {\n          return;\n        }\n\n        var value;\n        var done;\n\n        try {\n          var result = iterator.next();\n          value = result.value;\n          done = result.done;\n        } catch (err) {\n          subscriber.error(err);\n          return;\n        }\n\n        if (done) {\n          subscriber.complete();\n        } else {\n          subscriber.next(value);\n          this.schedule();\n        }\n      }));\n    }));\n    return sub;\n  });\n}\n\nexports.scheduleIterable = scheduleIterable; //# sourceMappingURL=scheduleIterable.js.map","map":{"version":3,"sources":["/Users/volodymyrmaliarov/Projects/ngRxIntro/ngrx-store-intro/node_modules/rxjs/internal/scheduled/scheduleIterable.js"],"names":["Object","defineProperty","exports","value","Observable_1","require","Subscription_1","iterator_1","scheduleIterable","input","scheduler","Error","Observable","subscriber","sub","Subscription","iterator","add","return","schedule","closed","done","result","next","err","error","complete"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,YAAY,GAAGC,OAAO,CAAC,eAAD,CAA1B;;AACA,IAAIC,cAAc,GAAGD,OAAO,CAAC,iBAAD,CAA5B;;AACA,IAAIE,UAAU,GAAGF,OAAO,CAAC,oBAAD,CAAxB;;AACA,SAASG,gBAAT,CAA0BC,KAA1B,EAAiCC,SAAjC,EAA4C;AACxC,MAAI,CAACD,KAAL,EAAY;AACR,UAAM,IAAIE,KAAJ,CAAU,yBAAV,CAAN;AACH;;AACD,SAAO,IAAIP,YAAY,CAACQ,UAAjB,CAA4B,UAAUC,UAAV,EAAsB;AACrD,QAAIC,GAAG,GAAG,IAAIR,cAAc,CAACS,YAAnB,EAAV;AACA,QAAIC,QAAJ;AACAF,IAAAA,GAAG,CAACG,GAAJ,CAAQ,YAAY;AAChB,UAAID,QAAQ,IAAI,OAAOA,QAAQ,CAACE,MAAhB,KAA2B,UAA3C,EAAuD;AACnDF,QAAAA,QAAQ,CAACE,MAAT;AACH;AACJ,KAJD;AAKAJ,IAAAA,GAAG,CAACG,GAAJ,CAAQP,SAAS,CAACS,QAAV,CAAmB,YAAY;AACnCH,MAAAA,QAAQ,GAAGP,KAAK,CAACF,UAAU,CAACS,QAAZ,CAAL,EAAX;AACAF,MAAAA,GAAG,CAACG,GAAJ,CAAQP,SAAS,CAACS,QAAV,CAAmB,YAAY;AACnC,YAAIN,UAAU,CAACO,MAAf,EAAuB;AACnB;AACH;;AACD,YAAIjB,KAAJ;AACA,YAAIkB,IAAJ;;AACA,YAAI;AACA,cAAIC,MAAM,GAAGN,QAAQ,CAACO,IAAT,EAAb;AACApB,UAAAA,KAAK,GAAGmB,MAAM,CAACnB,KAAf;AACAkB,UAAAA,IAAI,GAAGC,MAAM,CAACD,IAAd;AACH,SAJD,CAKA,OAAOG,GAAP,EAAY;AACRX,UAAAA,UAAU,CAACY,KAAX,CAAiBD,GAAjB;AACA;AACH;;AACD,YAAIH,IAAJ,EAAU;AACNR,UAAAA,UAAU,CAACa,QAAX;AACH,SAFD,MAGK;AACDb,UAAAA,UAAU,CAACU,IAAX,CAAgBpB,KAAhB;AACA,eAAKgB,QAAL;AACH;AACJ,OAtBO,CAAR;AAuBH,KAzBO,CAAR;AA0BA,WAAOL,GAAP;AACH,GAnCM,CAAP;AAoCH;;AACDZ,OAAO,CAACM,gBAAR,GAA2BA,gBAA3B,C,CACA","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../Observable\");\nvar Subscription_1 = require(\"../Subscription\");\nvar iterator_1 = require(\"../symbol/iterator\");\nfunction scheduleIterable(input, scheduler) {\n    if (!input) {\n        throw new Error('Iterable cannot be null');\n    }\n    return new Observable_1.Observable(function (subscriber) {\n        var sub = new Subscription_1.Subscription();\n        var iterator;\n        sub.add(function () {\n            if (iterator && typeof iterator.return === 'function') {\n                iterator.return();\n            }\n        });\n        sub.add(scheduler.schedule(function () {\n            iterator = input[iterator_1.iterator]();\n            sub.add(scheduler.schedule(function () {\n                if (subscriber.closed) {\n                    return;\n                }\n                var value;\n                var done;\n                try {\n                    var result = iterator.next();\n                    value = result.value;\n                    done = result.done;\n                }\n                catch (err) {\n                    subscriber.error(err);\n                    return;\n                }\n                if (done) {\n                    subscriber.complete();\n                }\n                else {\n                    subscriber.next(value);\n                    this.schedule();\n                }\n            }));\n        }));\n        return sub;\n    });\n}\nexports.scheduleIterable = scheduleIterable;\n//# sourceMappingURL=scheduleIterable.js.map"]},"metadata":{},"sourceType":"script"}