{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar innerSubscribe_1 = require(\"../innerSubscribe\");\n\nfunction mergeScan(accumulator, seed, concurrent) {\n  if (concurrent === void 0) {\n    concurrent = Number.POSITIVE_INFINITY;\n  }\n\n  return function (source) {\n    return source.lift(new MergeScanOperator(accumulator, seed, concurrent));\n  };\n}\n\nexports.mergeScan = mergeScan;\n\nvar MergeScanOperator = function () {\n  function MergeScanOperator(accumulator, seed, concurrent) {\n    this.accumulator = accumulator;\n    this.seed = seed;\n    this.concurrent = concurrent;\n  }\n\n  MergeScanOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new MergeScanSubscriber(subscriber, this.accumulator, this.seed, this.concurrent));\n  };\n\n  return MergeScanOperator;\n}();\n\nexports.MergeScanOperator = MergeScanOperator;\n\nvar MergeScanSubscriber = function (_super) {\n  __extends(MergeScanSubscriber, _super);\n\n  function MergeScanSubscriber(destination, accumulator, acc, concurrent) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.accumulator = accumulator;\n    _this.acc = acc;\n    _this.concurrent = concurrent;\n    _this.hasValue = false;\n    _this.hasCompleted = false;\n    _this.buffer = [];\n    _this.active = 0;\n    _this.index = 0;\n    return _this;\n  }\n\n  MergeScanSubscriber.prototype._next = function (value) {\n    if (this.active < this.concurrent) {\n      var index = this.index++;\n      var destination = this.destination;\n      var ish = void 0;\n\n      try {\n        var accumulator = this.accumulator;\n        ish = accumulator(this.acc, value, index);\n      } catch (e) {\n        return destination.error(e);\n      }\n\n      this.active++;\n\n      this._innerSub(ish);\n    } else {\n      this.buffer.push(value);\n    }\n  };\n\n  MergeScanSubscriber.prototype._innerSub = function (ish) {\n    var innerSubscriber = new innerSubscribe_1.SimpleInnerSubscriber(this);\n    var destination = this.destination;\n    destination.add(innerSubscriber);\n    var innerSubscription = innerSubscribe_1.innerSubscribe(ish, innerSubscriber);\n\n    if (innerSubscription !== innerSubscriber) {\n      destination.add(innerSubscription);\n    }\n  };\n\n  MergeScanSubscriber.prototype._complete = function () {\n    this.hasCompleted = true;\n\n    if (this.active === 0 && this.buffer.length === 0) {\n      if (this.hasValue === false) {\n        this.destination.next(this.acc);\n      }\n\n      this.destination.complete();\n    }\n\n    this.unsubscribe();\n  };\n\n  MergeScanSubscriber.prototype.notifyNext = function (innerValue) {\n    var destination = this.destination;\n    this.acc = innerValue;\n    this.hasValue = true;\n    destination.next(innerValue);\n  };\n\n  MergeScanSubscriber.prototype.notifyComplete = function () {\n    var buffer = this.buffer;\n    this.active--;\n\n    if (buffer.length > 0) {\n      this._next(buffer.shift());\n    } else if (this.active === 0 && this.hasCompleted) {\n      if (this.hasValue === false) {\n        this.destination.next(this.acc);\n      }\n\n      this.destination.complete();\n    }\n  };\n\n  return MergeScanSubscriber;\n}(innerSubscribe_1.SimpleOuterSubscriber);\n\nexports.MergeScanSubscriber = MergeScanSubscriber; //# sourceMappingURL=mergeScan.js.map","map":{"version":3,"sources":["/Users/volodymyrmaliarov/Projects/ngRxIntro/ngrx-store-intro/node_modules/rxjs/internal/operators/mergeScan.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","defineProperty","exports","value","innerSubscribe_1","require","mergeScan","accumulator","seed","concurrent","Number","POSITIVE_INFINITY","source","lift","MergeScanOperator","call","subscriber","subscribe","MergeScanSubscriber","_super","destination","acc","_this","hasValue","hasCompleted","buffer","active","index","_next","ish","e","error","_innerSub","push","innerSubscriber","SimpleInnerSubscriber","add","innerSubscription","innerSubscribe","_complete","length","next","complete","unsubscribe","notifyNext","innerValue","notifyComplete","shift","SimpleOuterSubscriber"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar innerSubscribe_1 = require(\"../innerSubscribe\");\nfunction mergeScan(accumulator, seed, concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    return function (source) { return source.lift(new MergeScanOperator(accumulator, seed, concurrent)); };\n}\nexports.mergeScan = mergeScan;\nvar MergeScanOperator = (function () {\n    function MergeScanOperator(accumulator, seed, concurrent) {\n        this.accumulator = accumulator;\n        this.seed = seed;\n        this.concurrent = concurrent;\n    }\n    MergeScanOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MergeScanSubscriber(subscriber, this.accumulator, this.seed, this.concurrent));\n    };\n    return MergeScanOperator;\n}());\nexports.MergeScanOperator = MergeScanOperator;\nvar MergeScanSubscriber = (function (_super) {\n    __extends(MergeScanSubscriber, _super);\n    function MergeScanSubscriber(destination, accumulator, acc, concurrent) {\n        var _this = _super.call(this, destination) || this;\n        _this.accumulator = accumulator;\n        _this.acc = acc;\n        _this.concurrent = concurrent;\n        _this.hasValue = false;\n        _this.hasCompleted = false;\n        _this.buffer = [];\n        _this.active = 0;\n        _this.index = 0;\n        return _this;\n    }\n    MergeScanSubscriber.prototype._next = function (value) {\n        if (this.active < this.concurrent) {\n            var index = this.index++;\n            var destination = this.destination;\n            var ish = void 0;\n            try {\n                var accumulator = this.accumulator;\n                ish = accumulator(this.acc, value, index);\n            }\n            catch (e) {\n                return destination.error(e);\n            }\n            this.active++;\n            this._innerSub(ish);\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    MergeScanSubscriber.prototype._innerSub = function (ish) {\n        var innerSubscriber = new innerSubscribe_1.SimpleInnerSubscriber(this);\n        var destination = this.destination;\n        destination.add(innerSubscriber);\n        var innerSubscription = innerSubscribe_1.innerSubscribe(ish, innerSubscriber);\n        if (innerSubscription !== innerSubscriber) {\n            destination.add(innerSubscription);\n        }\n    };\n    MergeScanSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            if (this.hasValue === false) {\n                this.destination.next(this.acc);\n            }\n            this.destination.complete();\n        }\n        this.unsubscribe();\n    };\n    MergeScanSubscriber.prototype.notifyNext = function (innerValue) {\n        var destination = this.destination;\n        this.acc = innerValue;\n        this.hasValue = true;\n        destination.next(innerValue);\n    };\n    MergeScanSubscriber.prototype.notifyComplete = function () {\n        var buffer = this.buffer;\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            if (this.hasValue === false) {\n                this.destination.next(this.acc);\n            }\n            this.destination.complete();\n        }\n    };\n    return MergeScanSubscriber;\n}(innerSubscribe_1.SimpleOuterSubscriber));\nexports.MergeScanSubscriber = MergeScanSubscriber;\n//# sourceMappingURL=mergeScan.js.map"]},"metadata":{},"sourceType":"script"}