{"ast":null,"code":"import _classCallCheck from \"/Users/volodymyrmaliarov/Projects/ngRxIntro/ngrx-store-intro/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/volodymyrmaliarov/Projects/ngRxIntro/ngrx-store-intro/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { hasModifierKey, SPACE, ENTER } from '@angular/cdk/keycodes';\nimport { DOCUMENT } from '@angular/common';\nimport { Directive, ElementRef, TemplateRef, InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, forwardRef, Optional, ContentChild, ViewChild, Input, QueryList, EventEmitter, ChangeDetectorRef, ContentChildren, Output, HostListener, NgModule } from '@angular/core';\nimport { Subject, of } from 'rxjs';\nimport { startWith, takeUntil } from 'rxjs/operators';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\n\nfunction CdkStep_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0);\n  }\n}\n\nvar _c0 = [\"*\"];\n\nvar CdkStepHeader = /*#__PURE__*/function () {\n  function CdkStepHeader(_elementRef) {\n    _classCallCheck(this, CdkStepHeader);\n\n    this._elementRef = _elementRef;\n  }\n  /** Focuses the step header. */\n\n\n  _createClass(CdkStepHeader, [{\n    key: \"focus\",\n    value: function focus() {\n      this._elementRef.nativeElement.focus();\n    }\n  }]);\n\n  return CdkStepHeader;\n}();\n\nCdkStepHeader.ɵfac = function CdkStepHeader_Factory(t) {\n  return new (t || CdkStepHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nCdkStepHeader.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: CdkStepHeader,\n  selectors: [[\"\", \"cdkStepHeader\", \"\"]],\n  hostAttrs: [\"role\", \"tab\"]\n});\n\nCdkStepHeader.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkStepHeader, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkStepHeader]',\n      host: {\n        'role': 'tab'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar CdkStepLabel = /*#__PURE__*/_createClass(function CdkStepLabel(\n/** @docs-private */\ntemplate) {\n  _classCallCheck(this, CdkStepLabel);\n\n  this.template = template;\n});\n\nCdkStepLabel.ɵfac = function CdkStepLabel_Factory(t) {\n  return new (t || CdkStepLabel)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\n\nCdkStepLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: CdkStepLabel,\n  selectors: [[\"\", \"cdkStepLabel\", \"\"]]\n});\n\nCdkStepLabel.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkStepLabel, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkStepLabel]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Used to generate unique ID for each stepper component. */\n\n\nvar nextId = 0;\n/** Change event emitted on selection changes. */\n\nvar StepperSelectionEvent = /*#__PURE__*/_createClass(function StepperSelectionEvent() {\n  _classCallCheck(this, StepperSelectionEvent);\n});\n/** Enum to represent the different states of the steps. */\n\n\nvar STEP_STATE = {\n  NUMBER: 'number',\n  EDIT: 'edit',\n  DONE: 'done',\n  ERROR: 'error'\n};\n/** InjectionToken that can be used to specify the global stepper options. */\n\nvar STEPPER_GLOBAL_OPTIONS = new InjectionToken('STEPPER_GLOBAL_OPTIONS');\n/**\n * InjectionToken that can be used to specify the global stepper options.\n * @deprecated Use `STEPPER_GLOBAL_OPTIONS` instead.\n * @breaking-change 8.0.0.\n */\n\nvar MAT_STEPPER_GLOBAL_OPTIONS = STEPPER_GLOBAL_OPTIONS;\n\nvar CdkStep = /*#__PURE__*/function () {\n  /** @breaking-change 8.0.0 remove the `?` after `stepperOptions` */\n  function CdkStep(_stepper, stepperOptions) {\n    _classCallCheck(this, CdkStep);\n\n    this._stepper = _stepper;\n    /** Whether user has seen the expanded step content or not. */\n\n    this.interacted = false;\n    this._editable = true;\n    this._optional = false;\n    this._completedOverride = null;\n    this._customError = null;\n    this._stepperOptions = stepperOptions ? stepperOptions : {};\n    this._displayDefaultIndicatorType = this._stepperOptions.displayDefaultIndicatorType !== false;\n    this._showError = !!this._stepperOptions.showError;\n  }\n  /** Whether the user can return to this step once it has been marked as completed. */\n\n\n  _createClass(CdkStep, [{\n    key: \"editable\",\n    get: function get() {\n      return this._editable;\n    },\n    set: function set(value) {\n      this._editable = coerceBooleanProperty(value);\n    }\n    /** Whether the completion of step is optional. */\n\n  }, {\n    key: \"optional\",\n    get: function get() {\n      return this._optional;\n    },\n    set: function set(value) {\n      this._optional = coerceBooleanProperty(value);\n    }\n    /** Whether step is marked as completed. */\n\n  }, {\n    key: \"completed\",\n    get: function get() {\n      return this._completedOverride == null ? this._getDefaultCompleted() : this._completedOverride;\n    },\n    set: function set(value) {\n      this._completedOverride = coerceBooleanProperty(value);\n    }\n  }, {\n    key: \"_getDefaultCompleted\",\n    value: function _getDefaultCompleted() {\n      return this.stepControl ? this.stepControl.valid && this.interacted : this.interacted;\n    }\n    /** Whether step has an error. */\n\n  }, {\n    key: \"hasError\",\n    get: function get() {\n      return this._customError == null ? this._getDefaultError() : this._customError;\n    },\n    set: function set(value) {\n      this._customError = coerceBooleanProperty(value);\n    }\n  }, {\n    key: \"_getDefaultError\",\n    value: function _getDefaultError() {\n      return this.stepControl && this.stepControl.invalid && this.interacted;\n    }\n    /** Selects this step component. */\n\n  }, {\n    key: \"select\",\n    value: function select() {\n      this._stepper.selected = this;\n    }\n    /** Resets the step to its initial state. Note that this includes resetting form data. */\n\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.interacted = false;\n\n      if (this._completedOverride != null) {\n        this._completedOverride = false;\n      }\n\n      if (this._customError != null) {\n        this._customError = false;\n      }\n\n      if (this.stepControl) {\n        this.stepControl.reset();\n      }\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges() {\n      // Since basically all inputs of the MatStep get proxied through the view down to the\n      // underlying MatStepHeader, we have to make sure that change detection runs correctly.\n      this._stepper._stateChanged();\n    }\n  }]);\n\n  return CdkStep;\n}();\n\nCdkStep.ɵfac = function CdkStep_Factory(t) {\n  return new (t || CdkStep)(ɵngcc0.ɵɵdirectiveInject(forwardRef(function () {\n    return CdkStepper;\n  })), ɵngcc0.ɵɵdirectiveInject(STEPPER_GLOBAL_OPTIONS, 8));\n};\n\nCdkStep.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: CdkStep,\n  selectors: [[\"cdk-step\"]],\n  contentQueries: function CdkStep_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, CdkStepLabel, 1);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.stepLabel = _t.first);\n    }\n  },\n  viewQuery: function CdkStep_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(TemplateRef, 3);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.content = _t.first);\n    }\n  },\n  inputs: {\n    editable: \"editable\",\n    optional: \"optional\",\n    completed: \"completed\",\n    hasError: \"hasError\",\n    stepControl: \"stepControl\",\n    label: \"label\",\n    errorMessage: \"errorMessage\",\n    ariaLabel: [\"aria-label\", \"ariaLabel\"],\n    ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"],\n    state: \"state\"\n  },\n  exportAs: [\"cdkStep\"],\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function CdkStep_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵtemplate(0, CdkStep_ng_template_0_Template, 1, 0, \"ng-template\");\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nCdkStep.ctorParameters = function () {\n  return [{\n    type: CdkStepper,\n    decorators: [{\n      type: Inject,\n      args: [forwardRef(function () {\n        return CdkStepper;\n      })]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [STEPPER_GLOBAL_OPTIONS]\n    }]\n  }];\n};\n\nCdkStep.propDecorators = {\n  stepLabel: [{\n    type: ContentChild,\n    args: [CdkStepLabel]\n  }],\n  content: [{\n    type: ViewChild,\n    args: [TemplateRef, {\n      static: true\n    }]\n  }],\n  stepControl: [{\n    type: Input\n  }],\n  label: [{\n    type: Input\n  }],\n  errorMessage: [{\n    type: Input\n  }],\n  ariaLabel: [{\n    type: Input,\n    args: ['aria-label']\n  }],\n  ariaLabelledby: [{\n    type: Input,\n    args: ['aria-labelledby']\n  }],\n  state: [{\n    type: Input\n  }],\n  editable: [{\n    type: Input\n  }],\n  optional: [{\n    type: Input\n  }],\n  completed: [{\n    type: Input\n  }],\n  hasError: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkStep, [{\n    type: Component,\n    args: [{\n      selector: 'cdk-step',\n      exportAs: 'cdkStep',\n      template: '<ng-template><ng-content></ng-content></ng-template>',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: CdkStepper,\n      decorators: [{\n        type: Inject,\n        args: [forwardRef(function () {\n          return CdkStepper;\n        })]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [STEPPER_GLOBAL_OPTIONS]\n      }]\n    }];\n  }, {\n    editable: [{\n      type: Input\n    }],\n    optional: [{\n      type: Input\n    }],\n    completed: [{\n      type: Input\n    }],\n    hasError: [{\n      type: Input\n    }],\n    stepLabel: [{\n      type: ContentChild,\n      args: [CdkStepLabel]\n    }],\n    content: [{\n      type: ViewChild,\n      args: [TemplateRef, {\n        static: true\n      }]\n    }],\n    stepControl: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    errorMessage: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input,\n      args: ['aria-label']\n    }],\n    ariaLabelledby: [{\n      type: Input,\n      args: ['aria-labelledby']\n    }],\n    state: [{\n      type: Input\n    }]\n  });\n})();\n\nvar CdkStepper = /*#__PURE__*/function () {\n  function CdkStepper(_dir, _changeDetectorRef, // @breaking-change 8.0.0 `_elementRef` and `_document` parameters to become required.\n  _elementRef, _document) {\n    _classCallCheck(this, CdkStepper);\n\n    this._dir = _dir;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._elementRef = _elementRef;\n    /** Emits when the component is destroyed. */\n\n    this._destroyed = new Subject();\n    /** Steps that belong to the current stepper, excluding ones from nested steppers. */\n\n    this.steps = new QueryList();\n    this._linear = false;\n    this._selectedIndex = 0;\n    /** Event emitted when the selected step has changed. */\n\n    this.selectionChange = new EventEmitter();\n    this._orientation = 'horizontal';\n    this._groupId = nextId++;\n    this._document = _document;\n  }\n  /** Whether the validity of previous steps should be checked or not. */\n\n\n  _createClass(CdkStepper, [{\n    key: \"linear\",\n    get: function get() {\n      return this._linear;\n    },\n    set: function set(value) {\n      this._linear = coerceBooleanProperty(value);\n    }\n    /** The index of the selected step. */\n\n  }, {\n    key: \"selectedIndex\",\n    get: function get() {\n      return this._selectedIndex;\n    },\n    set: function set(index) {\n      var newIndex = coerceNumberProperty(index);\n\n      if (this.steps && this._steps) {\n        // Ensure that the index can't be out of bounds.\n        if (!this._isValidIndex(index) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n          throw Error('cdkStepper: Cannot assign out-of-bounds value to `selectedIndex`.');\n        }\n\n        var selectedStep = this.selected;\n\n        if (selectedStep) {\n          // TODO: this should really be called something like `visited` instead. Just because\n          // the user has seen the step doesn't guarantee that they've interacted with it.\n          selectedStep.interacted = true;\n        }\n\n        if (this._selectedIndex !== newIndex && !this._anyControlsInvalidOrPending(newIndex) && (newIndex >= this._selectedIndex || this.steps.toArray()[newIndex].editable)) {\n          this._updateSelectedItemIndex(index);\n        }\n      } else {\n        this._selectedIndex = newIndex;\n      }\n    }\n    /** The step that is selected. */\n\n  }, {\n    key: \"selected\",\n    get: function get() {\n      // @breaking-change 8.0.0 Change return type to `CdkStep | undefined`.\n      return this.steps ? this.steps.toArray()[this.selectedIndex] : undefined;\n    },\n    set: function set(step) {\n      this.selectedIndex = this.steps ? this.steps.toArray().indexOf(step) : -1;\n    }\n  }, {\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      var _this = this;\n\n      this._steps.changes.pipe(startWith(this._steps), takeUntil(this._destroyed)).subscribe(function (steps) {\n        _this.steps.reset(steps.filter(function (step) {\n          return step._stepper === _this;\n        }));\n\n        _this.steps.notifyOnChanges();\n      });\n    }\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      var _this2 = this;\n\n      // Note that while the step headers are content children by default, any components that\n      // extend this one might have them as view children. We initialize the keyboard handling in\n      // AfterViewInit so we're guaranteed for both view and content children to be defined.\n      this._keyManager = new FocusKeyManager(this._stepHeader).withWrap().withHomeAndEnd().withVerticalOrientation(this._orientation === 'vertical');\n      (this._dir ? this._dir.change : of()).pipe(startWith(this._layoutDirection()), takeUntil(this._destroyed)).subscribe(function (direction) {\n        return _this2._keyManager.withHorizontalOrientation(direction);\n      });\n\n      this._keyManager.updateActiveItem(this._selectedIndex); // No need to `takeUntil` here, because we're the ones destroying `steps`.\n\n\n      this.steps.changes.subscribe(function () {\n        if (!_this2.selected) {\n          _this2._selectedIndex = Math.max(_this2._selectedIndex - 1, 0);\n        }\n      }); // The logic which asserts that the selected index is within bounds doesn't run before the\n      // steps are initialized, because we don't how many steps there are yet so we may have an\n      // invalid index on init. If that's the case, auto-correct to the default so we don't throw.\n\n      if (!this._isValidIndex(this._selectedIndex)) {\n        this._selectedIndex = 0;\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.steps.destroy();\n\n      this._destroyed.next();\n\n      this._destroyed.complete();\n    }\n    /** Selects and focuses the next step in list. */\n\n  }, {\n    key: \"next\",\n    value: function next() {\n      this.selectedIndex = Math.min(this._selectedIndex + 1, this.steps.length - 1);\n    }\n    /** Selects and focuses the previous step in list. */\n\n  }, {\n    key: \"previous\",\n    value: function previous() {\n      this.selectedIndex = Math.max(this._selectedIndex - 1, 0);\n    }\n    /** Resets the stepper to its initial state. Note that this includes clearing form data. */\n\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this._updateSelectedItemIndex(0);\n\n      this.steps.forEach(function (step) {\n        return step.reset();\n      });\n\n      this._stateChanged();\n    }\n    /** Returns a unique id for each step label element. */\n\n  }, {\n    key: \"_getStepLabelId\",\n    value: function _getStepLabelId(i) {\n      return \"cdk-step-label-\".concat(this._groupId, \"-\").concat(i);\n    }\n    /** Returns unique id for each step content element. */\n\n  }, {\n    key: \"_getStepContentId\",\n    value: function _getStepContentId(i) {\n      return \"cdk-step-content-\".concat(this._groupId, \"-\").concat(i);\n    }\n    /** Marks the component to be change detected. */\n\n  }, {\n    key: \"_stateChanged\",\n    value: function _stateChanged() {\n      this._changeDetectorRef.markForCheck();\n    }\n    /** Returns position state of the step with the given index. */\n\n  }, {\n    key: \"_getAnimationDirection\",\n    value: function _getAnimationDirection(index) {\n      var position = index - this._selectedIndex;\n\n      if (position < 0) {\n        return this._layoutDirection() === 'rtl' ? 'next' : 'previous';\n      } else if (position > 0) {\n        return this._layoutDirection() === 'rtl' ? 'previous' : 'next';\n      }\n\n      return 'current';\n    }\n    /** Returns the type of icon to be displayed. */\n\n  }, {\n    key: \"_getIndicatorType\",\n    value: function _getIndicatorType(index) {\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : STEP_STATE.NUMBER;\n      var step = this.steps.toArray()[index];\n\n      var isCurrentStep = this._isCurrentStep(index);\n\n      return step._displayDefaultIndicatorType ? this._getDefaultIndicatorLogic(step, isCurrentStep) : this._getGuidelineLogic(step, isCurrentStep, state);\n    }\n  }, {\n    key: \"_getDefaultIndicatorLogic\",\n    value: function _getDefaultIndicatorLogic(step, isCurrentStep) {\n      if (step._showError && step.hasError && !isCurrentStep) {\n        return STEP_STATE.ERROR;\n      } else if (!step.completed || isCurrentStep) {\n        return STEP_STATE.NUMBER;\n      } else {\n        return step.editable ? STEP_STATE.EDIT : STEP_STATE.DONE;\n      }\n    }\n  }, {\n    key: \"_getGuidelineLogic\",\n    value: function _getGuidelineLogic(step, isCurrentStep) {\n      var state = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : STEP_STATE.NUMBER;\n\n      if (step._showError && step.hasError && !isCurrentStep) {\n        return STEP_STATE.ERROR;\n      } else if (step.completed && !isCurrentStep) {\n        return STEP_STATE.DONE;\n      } else if (step.completed && isCurrentStep) {\n        return state;\n      } else if (step.editable && isCurrentStep) {\n        return STEP_STATE.EDIT;\n      } else {\n        return state;\n      }\n    }\n  }, {\n    key: \"_isCurrentStep\",\n    value: function _isCurrentStep(index) {\n      return this._selectedIndex === index;\n    }\n    /** Returns the index of the currently-focused step header. */\n\n  }, {\n    key: \"_getFocusIndex\",\n    value: function _getFocusIndex() {\n      return this._keyManager ? this._keyManager.activeItemIndex : this._selectedIndex;\n    }\n  }, {\n    key: \"_updateSelectedItemIndex\",\n    value: function _updateSelectedItemIndex(newIndex) {\n      var stepsArray = this.steps.toArray();\n      this.selectionChange.emit({\n        selectedIndex: newIndex,\n        previouslySelectedIndex: this._selectedIndex,\n        selectedStep: stepsArray[newIndex],\n        previouslySelectedStep: stepsArray[this._selectedIndex]\n      }); // If focus is inside the stepper, move it to the next header, otherwise it may become\n      // lost when the active step content is hidden. We can't be more granular with the check\n      // (e.g. checking whether focus is inside the active step), because we don't have a\n      // reference to the elements that are rendering out the content.\n\n      this._containsFocus() ? this._keyManager.setActiveItem(newIndex) : this._keyManager.updateActiveItem(newIndex);\n      this._selectedIndex = newIndex;\n\n      this._stateChanged();\n    }\n  }, {\n    key: \"_onKeydown\",\n    value: function _onKeydown(event) {\n      var hasModifier = hasModifierKey(event);\n      var keyCode = event.keyCode;\n      var manager = this._keyManager;\n\n      if (manager.activeItemIndex != null && !hasModifier && (keyCode === SPACE || keyCode === ENTER)) {\n        this.selectedIndex = manager.activeItemIndex;\n        event.preventDefault();\n      } else {\n        manager.onKeydown(event);\n      }\n    }\n  }, {\n    key: \"_anyControlsInvalidOrPending\",\n    value: function _anyControlsInvalidOrPending(index) {\n      if (this._linear && index >= 0) {\n        return this.steps.toArray().slice(0, index).some(function (step) {\n          var control = step.stepControl;\n          var isIncomplete = control ? control.invalid || control.pending || !step.interacted : !step.completed;\n          return isIncomplete && !step.optional && !step._completedOverride;\n        });\n      }\n\n      return false;\n    }\n  }, {\n    key: \"_layoutDirection\",\n    value: function _layoutDirection() {\n      return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Checks whether the stepper contains the focused element. */\n\n  }, {\n    key: \"_containsFocus\",\n    value: function _containsFocus() {\n      if (!this._document || !this._elementRef) {\n        return false;\n      }\n\n      var stepperElement = this._elementRef.nativeElement;\n      var focusedElement = this._document.activeElement;\n      return stepperElement === focusedElement || stepperElement.contains(focusedElement);\n    }\n    /** Checks whether the passed-in index is a valid step index. */\n\n  }, {\n    key: \"_isValidIndex\",\n    value: function _isValidIndex(index) {\n      return index > -1 && (!this.steps || index < this.steps.length);\n    }\n  }]);\n\n  return CdkStepper;\n}();\n\nCdkStepper.ɵfac = function CdkStepper_Factory(t) {\n  return new (t || CdkStepper)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT));\n};\n\nCdkStepper.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: CdkStepper,\n  selectors: [[\"\", \"cdkStepper\", \"\"]],\n  contentQueries: function CdkStepper_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, CdkStep, 1);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, CdkStepHeader, 1);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._steps = _t);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._stepHeader = _t);\n    }\n  },\n  inputs: {\n    linear: \"linear\",\n    selectedIndex: \"selectedIndex\",\n    selected: \"selected\"\n  },\n  outputs: {\n    selectionChange: \"selectionChange\"\n  },\n  exportAs: [\"cdkStepper\"]\n});\n\nCdkStepper.ctorParameters = function () {\n  return [{\n    type: Directionality,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: ElementRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }];\n};\n\nCdkStepper.propDecorators = {\n  _steps: [{\n    type: ContentChildren,\n    args: [CdkStep, {\n      descendants: true\n    }]\n  }],\n  _stepHeader: [{\n    type: ContentChildren,\n    args: [CdkStepHeader, {\n      descendants: true\n    }]\n  }],\n  linear: [{\n    type: Input\n  }],\n  selectedIndex: [{\n    type: Input\n  }],\n  selected: [{\n    type: Input\n  }],\n  selectionChange: [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkStepper, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkStepper]',\n      exportAs: 'cdkStepper'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc1.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, {\n    selectionChange: [{\n      type: Output\n    }],\n    linear: [{\n      type: Input\n    }],\n    selectedIndex: [{\n      type: Input\n    }],\n    selected: [{\n      type: Input\n    }],\n    _steps: [{\n      type: ContentChildren,\n      args: [CdkStep, {\n        descendants: true\n      }]\n    }],\n    _stepHeader: [{\n      type: ContentChildren,\n      args: [CdkStepHeader, {\n        descendants: true\n      }]\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Button that moves to the next step in a stepper workflow. */\n\n\nvar CdkStepperNext = /*#__PURE__*/function () {\n  function CdkStepperNext(_stepper) {\n    _classCallCheck(this, CdkStepperNext);\n\n    this._stepper = _stepper;\n    /** Type of the next button. Defaults to \"submit\" if not specified. */\n\n    this.type = 'submit';\n  } // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n  // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n  // ViewEngine they're overwritten.\n  // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n  // tslint:disable-next-line:no-host-decorator-in-concrete\n\n\n  _createClass(CdkStepperNext, [{\n    key: \"_handleClick\",\n    value: function _handleClick() {\n      this._stepper.next();\n    }\n  }]);\n\n  return CdkStepperNext;\n}();\n\nCdkStepperNext.ɵfac = function CdkStepperNext_Factory(t) {\n  return new (t || CdkStepperNext)(ɵngcc0.ɵɵdirectiveInject(CdkStepper));\n};\n\nCdkStepperNext.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: CdkStepperNext,\n  selectors: [[\"button\", \"cdkStepperNext\", \"\"]],\n  hostVars: 1,\n  hostBindings: function CdkStepperNext_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function CdkStepperNext_click_HostBindingHandler() {\n        return ctx._handleClick();\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"type\", ctx.type);\n    }\n  },\n  inputs: {\n    type: \"type\"\n  }\n});\n\nCdkStepperNext.ctorParameters = function () {\n  return [{\n    type: CdkStepper\n  }];\n};\n\nCdkStepperNext.propDecorators = {\n  type: [{\n    type: Input\n  }],\n  _handleClick: [{\n    type: HostListener,\n    args: ['click']\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkStepperNext, [{\n    type: Directive,\n    args: [{\n      selector: 'button[cdkStepperNext]',\n      host: {\n        '[type]': 'type'\n      }\n    }]\n  }], function () {\n    return [{\n      type: CdkStepper\n    }];\n  }, {\n    type: [{\n      type: Input\n    }],\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _handleClick: [{\n      type: HostListener,\n      args: ['click']\n    }]\n  });\n})();\n/** Button that moves to the previous step in a stepper workflow. */\n\n\nvar CdkStepperPrevious = /*#__PURE__*/function () {\n  function CdkStepperPrevious(_stepper) {\n    _classCallCheck(this, CdkStepperPrevious);\n\n    this._stepper = _stepper;\n    /** Type of the previous button. Defaults to \"button\" if not specified. */\n\n    this.type = 'button';\n  } // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n  // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n  // ViewEngine they're overwritten.\n  // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n  // tslint:disable-next-line:no-host-decorator-in-concrete\n\n\n  _createClass(CdkStepperPrevious, [{\n    key: \"_handleClick\",\n    value: function _handleClick() {\n      this._stepper.previous();\n    }\n  }]);\n\n  return CdkStepperPrevious;\n}();\n\nCdkStepperPrevious.ɵfac = function CdkStepperPrevious_Factory(t) {\n  return new (t || CdkStepperPrevious)(ɵngcc0.ɵɵdirectiveInject(CdkStepper));\n};\n\nCdkStepperPrevious.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: CdkStepperPrevious,\n  selectors: [[\"button\", \"cdkStepperPrevious\", \"\"]],\n  hostVars: 1,\n  hostBindings: function CdkStepperPrevious_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function CdkStepperPrevious_click_HostBindingHandler() {\n        return ctx._handleClick();\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"type\", ctx.type);\n    }\n  },\n  inputs: {\n    type: \"type\"\n  }\n});\n\nCdkStepperPrevious.ctorParameters = function () {\n  return [{\n    type: CdkStepper\n  }];\n};\n\nCdkStepperPrevious.propDecorators = {\n  type: [{\n    type: Input\n  }],\n  _handleClick: [{\n    type: HostListener,\n    args: ['click']\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkStepperPrevious, [{\n    type: Directive,\n    args: [{\n      selector: 'button[cdkStepperPrevious]',\n      host: {\n        '[type]': 'type'\n      }\n    }]\n  }], function () {\n    return [{\n      type: CdkStepper\n    }];\n  }, {\n    type: [{\n      type: Input\n    }],\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _handleClick: [{\n      type: HostListener,\n      args: ['click']\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar CdkStepperModule = /*#__PURE__*/_createClass(function CdkStepperModule() {\n  _classCallCheck(this, CdkStepperModule);\n});\n\nCdkStepperModule.ɵfac = function CdkStepperModule_Factory(t) {\n  return new (t || CdkStepperModule)();\n};\n\nCdkStepperModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: CdkStepperModule\n});\nCdkStepperModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  imports: [[BidiModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkStepperModule, {\n    declarations: function declarations() {\n      return [CdkStep, CdkStepper, CdkStepHeader, CdkStepLabel, CdkStepperNext, CdkStepperPrevious];\n    },\n    imports: function imports() {\n      return [BidiModule];\n    },\n    exports: function exports() {\n      return [CdkStep, CdkStepper, CdkStepHeader, CdkStepLabel, CdkStepperNext, CdkStepperPrevious];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkStepperModule, [{\n    type: NgModule,\n    args: [{\n      imports: [BidiModule],\n      exports: [CdkStep, CdkStepper, CdkStepHeader, CdkStepLabel, CdkStepperNext, CdkStepperPrevious],\n      declarations: [CdkStep, CdkStepper, CdkStepHeader, CdkStepLabel, CdkStepperNext, CdkStepperPrevious]\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { CdkStep, CdkStepHeader, CdkStepLabel, CdkStepper, CdkStepperModule, CdkStepperNext, CdkStepperPrevious, MAT_STEPPER_GLOBAL_OPTIONS, STEPPER_GLOBAL_OPTIONS, STEP_STATE, StepperSelectionEvent }; //# sourceMappingURL=stepper.js.map","map":{"version":3,"sources":["/Users/volodymyrmaliarov/Projects/ngRxIntro/ngrx-store-intro/node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/stepper.js"],"names":["FocusKeyManager","Directionality","BidiModule","coerceBooleanProperty","coerceNumberProperty","hasModifierKey","SPACE","ENTER","DOCUMENT","Directive","ElementRef","TemplateRef","InjectionToken","Component","ViewEncapsulation","ChangeDetectionStrategy","Inject","forwardRef","Optional","ContentChild","ViewChild","Input","QueryList","EventEmitter","ChangeDetectorRef","ContentChildren","Output","HostListener","NgModule","Subject","of","startWith","takeUntil","ɵngcc0","ɵngcc1","CdkStep_ng_template_0_Template","rf","ctx","ɵɵprojection","_c0","CdkStepHeader","_elementRef","nativeElement","focus","ɵfac","CdkStepHeader_Factory","t","ɵɵdirectiveInject","ɵdir","ɵɵdefineDirective","type","selectors","hostAttrs","ctorParameters","ngDevMode","ɵsetClassMetadata","args","selector","host","CdkStepLabel","template","CdkStepLabel_Factory","nextId","StepperSelectionEvent","STEP_STATE","NUMBER","EDIT","DONE","ERROR","STEPPER_GLOBAL_OPTIONS","MAT_STEPPER_GLOBAL_OPTIONS","CdkStep","_stepper","stepperOptions","interacted","_editable","_optional","_completedOverride","_customError","_stepperOptions","_displayDefaultIndicatorType","displayDefaultIndicatorType","_showError","showError","value","_getDefaultCompleted","stepControl","valid","_getDefaultError","invalid","selected","reset","_stateChanged","CdkStep_Factory","CdkStepper","ɵcmp","ɵɵdefineComponent","contentQueries","CdkStep_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","stepLabel","first","viewQuery","CdkStep_Query","ɵɵviewQuery","content","inputs","editable","optional","completed","hasError","label","errorMessage","ariaLabel","ariaLabelledby","state","exportAs","features","ɵɵNgOnChangesFeature","ngContentSelectors","decls","vars","CdkStep_Template","ɵɵprojectionDef","ɵɵtemplate","encapsulation","changeDetection","decorators","undefined","propDecorators","static","None","OnPush","_dir","_changeDetectorRef","_document","_destroyed","steps","_linear","_selectedIndex","selectionChange","_orientation","_groupId","index","newIndex","_steps","_isValidIndex","Error","selectedStep","_anyControlsInvalidOrPending","toArray","_updateSelectedItemIndex","selectedIndex","step","indexOf","changes","pipe","subscribe","filter","notifyOnChanges","_keyManager","_stepHeader","withWrap","withHomeAndEnd","withVerticalOrientation","change","_layoutDirection","direction","withHorizontalOrientation","updateActiveItem","Math","max","destroy","next","complete","min","length","forEach","i","markForCheck","position","isCurrentStep","_isCurrentStep","_getDefaultIndicatorLogic","_getGuidelineLogic","activeItemIndex","stepsArray","emit","previouslySelectedIndex","previouslySelectedStep","_containsFocus","setActiveItem","event","hasModifier","keyCode","manager","preventDefault","onKeydown","slice","some","control","isIncomplete","pending","stepperElement","focusedElement","activeElement","contains","CdkStepper_Factory","CdkStepper_ContentQueries","linear","outputs","descendants","CdkStepperNext","CdkStepperNext_Factory","hostVars","hostBindings","CdkStepperNext_HostBindings","ɵɵlistener","CdkStepperNext_click_HostBindingHandler","_handleClick","ɵɵhostProperty","CdkStepperPrevious","previous","CdkStepperPrevious_Factory","CdkStepperPrevious_HostBindings","CdkStepperPrevious_click_HostBindingHandler","CdkStepperModule","CdkStepperModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","ngJitMode","ɵɵsetNgModuleScope","declarations","exports"],"mappings":"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","sourcesContent":["import { FocusKeyManager } from '@angular/cdk/a11y';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { hasModifierKey, SPACE, ENTER } from '@angular/cdk/keycodes';\nimport { DOCUMENT } from '@angular/common';\nimport { Directive, ElementRef, TemplateRef, InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, forwardRef, Optional, ContentChild, ViewChild, Input, QueryList, EventEmitter, ChangeDetectorRef, ContentChildren, Output, HostListener, NgModule } from '@angular/core';\nimport { Subject, of } from 'rxjs';\nimport { startWith, takeUntil } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\n\nfunction CdkStep_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0);\n} }\nconst _c0 = [\"*\"];\nclass CdkStepHeader {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n    /** Focuses the step header. */\n    focus() {\n        this._elementRef.nativeElement.focus();\n    }\n}\nCdkStepHeader.ɵfac = function CdkStepHeader_Factory(t) { return new (t || CdkStepHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkStepHeader.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkStepHeader, selectors: [[\"\", \"cdkStepHeader\", \"\"]], hostAttrs: [\"role\", \"tab\"] });\nCdkStepHeader.ctorParameters = () => [\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkStepHeader, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkStepHeader]',\n                host: {\n                    'role': 'tab'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass CdkStepLabel {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkStepLabel.ɵfac = function CdkStepLabel_Factory(t) { return new (t || CdkStepLabel)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkStepLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkStepLabel, selectors: [[\"\", \"cdkStepLabel\", \"\"]] });\nCdkStepLabel.ctorParameters = () => [\n    { type: TemplateRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkStepLabel, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkStepLabel]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate unique ID for each stepper component. */\nlet nextId = 0;\n/** Change event emitted on selection changes. */\nclass StepperSelectionEvent {\n}\n/** Enum to represent the different states of the steps. */\nconst STEP_STATE = {\n    NUMBER: 'number',\n    EDIT: 'edit',\n    DONE: 'done',\n    ERROR: 'error'\n};\n/** InjectionToken that can be used to specify the global stepper options. */\nconst STEPPER_GLOBAL_OPTIONS = new InjectionToken('STEPPER_GLOBAL_OPTIONS');\n/**\n * InjectionToken that can be used to specify the global stepper options.\n * @deprecated Use `STEPPER_GLOBAL_OPTIONS` instead.\n * @breaking-change 8.0.0.\n */\nconst MAT_STEPPER_GLOBAL_OPTIONS = STEPPER_GLOBAL_OPTIONS;\nclass CdkStep {\n    /** @breaking-change 8.0.0 remove the `?` after `stepperOptions` */\n    constructor(_stepper, stepperOptions) {\n        this._stepper = _stepper;\n        /** Whether user has seen the expanded step content or not. */\n        this.interacted = false;\n        this._editable = true;\n        this._optional = false;\n        this._completedOverride = null;\n        this._customError = null;\n        this._stepperOptions = stepperOptions ? stepperOptions : {};\n        this._displayDefaultIndicatorType = this._stepperOptions.displayDefaultIndicatorType !== false;\n        this._showError = !!this._stepperOptions.showError;\n    }\n    /** Whether the user can return to this step once it has been marked as completed. */\n    get editable() {\n        return this._editable;\n    }\n    set editable(value) {\n        this._editable = coerceBooleanProperty(value);\n    }\n    /** Whether the completion of step is optional. */\n    get optional() {\n        return this._optional;\n    }\n    set optional(value) {\n        this._optional = coerceBooleanProperty(value);\n    }\n    /** Whether step is marked as completed. */\n    get completed() {\n        return this._completedOverride == null ? this._getDefaultCompleted() : this._completedOverride;\n    }\n    set completed(value) {\n        this._completedOverride = coerceBooleanProperty(value);\n    }\n    _getDefaultCompleted() {\n        return this.stepControl ? this.stepControl.valid && this.interacted : this.interacted;\n    }\n    /** Whether step has an error. */\n    get hasError() {\n        return this._customError == null ? this._getDefaultError() : this._customError;\n    }\n    set hasError(value) {\n        this._customError = coerceBooleanProperty(value);\n    }\n    _getDefaultError() {\n        return this.stepControl && this.stepControl.invalid && this.interacted;\n    }\n    /** Selects this step component. */\n    select() {\n        this._stepper.selected = this;\n    }\n    /** Resets the step to its initial state. Note that this includes resetting form data. */\n    reset() {\n        this.interacted = false;\n        if (this._completedOverride != null) {\n            this._completedOverride = false;\n        }\n        if (this._customError != null) {\n            this._customError = false;\n        }\n        if (this.stepControl) {\n            this.stepControl.reset();\n        }\n    }\n    ngOnChanges() {\n        // Since basically all inputs of the MatStep get proxied through the view down to the\n        // underlying MatStepHeader, we have to make sure that change detection runs correctly.\n        this._stepper._stateChanged();\n    }\n}\nCdkStep.ɵfac = function CdkStep_Factory(t) { return new (t || CdkStep)(ɵngcc0.ɵɵdirectiveInject(forwardRef(() => CdkStepper)), ɵngcc0.ɵɵdirectiveInject(STEPPER_GLOBAL_OPTIONS, 8)); };\nCdkStep.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkStep, selectors: [[\"cdk-step\"]], contentQueries: function CdkStep_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkStepLabel, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.stepLabel = _t.first);\n    } }, viewQuery: function CdkStep_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(TemplateRef, 3);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.content = _t.first);\n    } }, inputs: { editable: \"editable\", optional: \"optional\", completed: \"completed\", hasError: \"hasError\", stepControl: \"stepControl\", label: \"label\", errorMessage: \"errorMessage\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], state: \"state\" }, exportAs: [\"cdkStep\"], features: [ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function CdkStep_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, CdkStep_ng_template_0_Template, 1, 0, \"ng-template\");\n    } }, encapsulation: 2, changeDetection: 0 });\nCdkStep.ctorParameters = () => [\n    { type: CdkStepper, decorators: [{ type: Inject, args: [forwardRef(() => CdkStepper),] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [STEPPER_GLOBAL_OPTIONS,] }] }\n];\nCdkStep.propDecorators = {\n    stepLabel: [{ type: ContentChild, args: [CdkStepLabel,] }],\n    content: [{ type: ViewChild, args: [TemplateRef, { static: true },] }],\n    stepControl: [{ type: Input }],\n    label: [{ type: Input }],\n    errorMessage: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    state: [{ type: Input }],\n    editable: [{ type: Input }],\n    optional: [{ type: Input }],\n    completed: [{ type: Input }],\n    hasError: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkStep, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-step',\n                exportAs: 'cdkStep',\n                template: '<ng-template><ng-content></ng-content></ng-template>',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: CdkStepper, decorators: [{\n                type: Inject,\n                args: [forwardRef(() => CdkStepper)]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [STEPPER_GLOBAL_OPTIONS]\n            }] }]; }, { editable: [{\n            type: Input\n        }], optional: [{\n            type: Input\n        }], completed: [{\n            type: Input\n        }], hasError: [{\n            type: Input\n        }], stepLabel: [{\n            type: ContentChild,\n            args: [CdkStepLabel]\n        }], content: [{\n            type: ViewChild,\n            args: [TemplateRef, { static: true }]\n        }], stepControl: [{\n            type: Input\n        }], label: [{\n            type: Input\n        }], errorMessage: [{\n            type: Input\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], state: [{\n            type: Input\n        }] }); })();\nclass CdkStepper {\n    constructor(_dir, _changeDetectorRef, \n    // @breaking-change 8.0.0 `_elementRef` and `_document` parameters to become required.\n    _elementRef, _document) {\n        this._dir = _dir;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Steps that belong to the current stepper, excluding ones from nested steppers. */\n        this.steps = new QueryList();\n        this._linear = false;\n        this._selectedIndex = 0;\n        /** Event emitted when the selected step has changed. */\n        this.selectionChange = new EventEmitter();\n        this._orientation = 'horizontal';\n        this._groupId = nextId++;\n        this._document = _document;\n    }\n    /** Whether the validity of previous steps should be checked or not. */\n    get linear() {\n        return this._linear;\n    }\n    set linear(value) {\n        this._linear = coerceBooleanProperty(value);\n    }\n    /** The index of the selected step. */\n    get selectedIndex() {\n        return this._selectedIndex;\n    }\n    set selectedIndex(index) {\n        const newIndex = coerceNumberProperty(index);\n        if (this.steps && this._steps) {\n            // Ensure that the index can't be out of bounds.\n            if (!this._isValidIndex(index) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('cdkStepper: Cannot assign out-of-bounds value to `selectedIndex`.');\n            }\n            const selectedStep = this.selected;\n            if (selectedStep) {\n                // TODO: this should really be called something like `visited` instead. Just because\n                // the user has seen the step doesn't guarantee that they've interacted with it.\n                selectedStep.interacted = true;\n            }\n            if (this._selectedIndex !== newIndex && !this._anyControlsInvalidOrPending(newIndex) &&\n                (newIndex >= this._selectedIndex || this.steps.toArray()[newIndex].editable)) {\n                this._updateSelectedItemIndex(index);\n            }\n        }\n        else {\n            this._selectedIndex = newIndex;\n        }\n    }\n    /** The step that is selected. */\n    get selected() {\n        // @breaking-change 8.0.0 Change return type to `CdkStep | undefined`.\n        return this.steps ? this.steps.toArray()[this.selectedIndex] : undefined;\n    }\n    set selected(step) {\n        this.selectedIndex = this.steps ? this.steps.toArray().indexOf(step) : -1;\n    }\n    ngAfterContentInit() {\n        this._steps.changes\n            .pipe(startWith(this._steps), takeUntil(this._destroyed))\n            .subscribe((steps) => {\n            this.steps.reset(steps.filter(step => step._stepper === this));\n            this.steps.notifyOnChanges();\n        });\n    }\n    ngAfterViewInit() {\n        // Note that while the step headers are content children by default, any components that\n        // extend this one might have them as view children. We initialize the keyboard handling in\n        // AfterViewInit so we're guaranteed for both view and content children to be defined.\n        this._keyManager = new FocusKeyManager(this._stepHeader)\n            .withWrap()\n            .withHomeAndEnd()\n            .withVerticalOrientation(this._orientation === 'vertical');\n        (this._dir ? this._dir.change : of())\n            .pipe(startWith(this._layoutDirection()), takeUntil(this._destroyed))\n            .subscribe(direction => this._keyManager.withHorizontalOrientation(direction));\n        this._keyManager.updateActiveItem(this._selectedIndex);\n        // No need to `takeUntil` here, because we're the ones destroying `steps`.\n        this.steps.changes.subscribe(() => {\n            if (!this.selected) {\n                this._selectedIndex = Math.max(this._selectedIndex - 1, 0);\n            }\n        });\n        // The logic which asserts that the selected index is within bounds doesn't run before the\n        // steps are initialized, because we don't how many steps there are yet so we may have an\n        // invalid index on init. If that's the case, auto-correct to the default so we don't throw.\n        if (!this._isValidIndex(this._selectedIndex)) {\n            this._selectedIndex = 0;\n        }\n    }\n    ngOnDestroy() {\n        this.steps.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Selects and focuses the next step in list. */\n    next() {\n        this.selectedIndex = Math.min(this._selectedIndex + 1, this.steps.length - 1);\n    }\n    /** Selects and focuses the previous step in list. */\n    previous() {\n        this.selectedIndex = Math.max(this._selectedIndex - 1, 0);\n    }\n    /** Resets the stepper to its initial state. Note that this includes clearing form data. */\n    reset() {\n        this._updateSelectedItemIndex(0);\n        this.steps.forEach(step => step.reset());\n        this._stateChanged();\n    }\n    /** Returns a unique id for each step label element. */\n    _getStepLabelId(i) {\n        return `cdk-step-label-${this._groupId}-${i}`;\n    }\n    /** Returns unique id for each step content element. */\n    _getStepContentId(i) {\n        return `cdk-step-content-${this._groupId}-${i}`;\n    }\n    /** Marks the component to be change detected. */\n    _stateChanged() {\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Returns position state of the step with the given index. */\n    _getAnimationDirection(index) {\n        const position = index - this._selectedIndex;\n        if (position < 0) {\n            return this._layoutDirection() === 'rtl' ? 'next' : 'previous';\n        }\n        else if (position > 0) {\n            return this._layoutDirection() === 'rtl' ? 'previous' : 'next';\n        }\n        return 'current';\n    }\n    /** Returns the type of icon to be displayed. */\n    _getIndicatorType(index, state = STEP_STATE.NUMBER) {\n        const step = this.steps.toArray()[index];\n        const isCurrentStep = this._isCurrentStep(index);\n        return step._displayDefaultIndicatorType ? this._getDefaultIndicatorLogic(step, isCurrentStep) :\n            this._getGuidelineLogic(step, isCurrentStep, state);\n    }\n    _getDefaultIndicatorLogic(step, isCurrentStep) {\n        if (step._showError && step.hasError && !isCurrentStep) {\n            return STEP_STATE.ERROR;\n        }\n        else if (!step.completed || isCurrentStep) {\n            return STEP_STATE.NUMBER;\n        }\n        else {\n            return step.editable ? STEP_STATE.EDIT : STEP_STATE.DONE;\n        }\n    }\n    _getGuidelineLogic(step, isCurrentStep, state = STEP_STATE.NUMBER) {\n        if (step._showError && step.hasError && !isCurrentStep) {\n            return STEP_STATE.ERROR;\n        }\n        else if (step.completed && !isCurrentStep) {\n            return STEP_STATE.DONE;\n        }\n        else if (step.completed && isCurrentStep) {\n            return state;\n        }\n        else if (step.editable && isCurrentStep) {\n            return STEP_STATE.EDIT;\n        }\n        else {\n            return state;\n        }\n    }\n    _isCurrentStep(index) {\n        return this._selectedIndex === index;\n    }\n    /** Returns the index of the currently-focused step header. */\n    _getFocusIndex() {\n        return this._keyManager ? this._keyManager.activeItemIndex : this._selectedIndex;\n    }\n    _updateSelectedItemIndex(newIndex) {\n        const stepsArray = this.steps.toArray();\n        this.selectionChange.emit({\n            selectedIndex: newIndex,\n            previouslySelectedIndex: this._selectedIndex,\n            selectedStep: stepsArray[newIndex],\n            previouslySelectedStep: stepsArray[this._selectedIndex],\n        });\n        // If focus is inside the stepper, move it to the next header, otherwise it may become\n        // lost when the active step content is hidden. We can't be more granular with the check\n        // (e.g. checking whether focus is inside the active step), because we don't have a\n        // reference to the elements that are rendering out the content.\n        this._containsFocus() ? this._keyManager.setActiveItem(newIndex) :\n            this._keyManager.updateActiveItem(newIndex);\n        this._selectedIndex = newIndex;\n        this._stateChanged();\n    }\n    _onKeydown(event) {\n        const hasModifier = hasModifierKey(event);\n        const keyCode = event.keyCode;\n        const manager = this._keyManager;\n        if (manager.activeItemIndex != null && !hasModifier &&\n            (keyCode === SPACE || keyCode === ENTER)) {\n            this.selectedIndex = manager.activeItemIndex;\n            event.preventDefault();\n        }\n        else {\n            manager.onKeydown(event);\n        }\n    }\n    _anyControlsInvalidOrPending(index) {\n        if (this._linear && index >= 0) {\n            return this.steps.toArray().slice(0, index).some(step => {\n                const control = step.stepControl;\n                const isIncomplete = control ? (control.invalid || control.pending || !step.interacted) : !step.completed;\n                return isIncomplete && !step.optional && !step._completedOverride;\n            });\n        }\n        return false;\n    }\n    _layoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Checks whether the stepper contains the focused element. */\n    _containsFocus() {\n        if (!this._document || !this._elementRef) {\n            return false;\n        }\n        const stepperElement = this._elementRef.nativeElement;\n        const focusedElement = this._document.activeElement;\n        return stepperElement === focusedElement || stepperElement.contains(focusedElement);\n    }\n    /** Checks whether the passed-in index is a valid step index. */\n    _isValidIndex(index) {\n        return index > -1 && (!this.steps || index < this.steps.length);\n    }\n}\nCdkStepper.ɵfac = function CdkStepper_Factory(t) { return new (t || CdkStepper)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nCdkStepper.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkStepper, selectors: [[\"\", \"cdkStepper\", \"\"]], contentQueries: function CdkStepper_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkStep, 1);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkStepHeader, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._steps = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._stepHeader = _t);\n    } }, inputs: { linear: \"linear\", selectedIndex: \"selectedIndex\", selected: \"selected\" }, outputs: { selectionChange: \"selectionChange\" }, exportAs: [\"cdkStepper\"] });\nCdkStepper.ctorParameters = () => [\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\nCdkStepper.propDecorators = {\n    _steps: [{ type: ContentChildren, args: [CdkStep, { descendants: true },] }],\n    _stepHeader: [{ type: ContentChildren, args: [CdkStepHeader, { descendants: true },] }],\n    linear: [{ type: Input }],\n    selectedIndex: [{ type: Input }],\n    selected: [{ type: Input }],\n    selectionChange: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkStepper, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkStepper]',\n                exportAs: 'cdkStepper'\n            }]\n    }], function () { return [{ type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { selectionChange: [{\n            type: Output\n        }], linear: [{\n            type: Input\n        }], selectedIndex: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], _steps: [{\n            type: ContentChildren,\n            args: [CdkStep, { descendants: true }]\n        }], _stepHeader: [{\n            type: ContentChildren,\n            args: [CdkStepHeader, { descendants: true }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Button that moves to the next step in a stepper workflow. */\nclass CdkStepperNext {\n    constructor(_stepper) {\n        this._stepper = _stepper;\n        /** Type of the next button. Defaults to \"submit\" if not specified. */\n        this.type = 'submit';\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _handleClick() {\n        this._stepper.next();\n    }\n}\nCdkStepperNext.ɵfac = function CdkStepperNext_Factory(t) { return new (t || CdkStepperNext)(ɵngcc0.ɵɵdirectiveInject(CdkStepper)); };\nCdkStepperNext.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkStepperNext, selectors: [[\"button\", \"cdkStepperNext\", \"\"]], hostVars: 1, hostBindings: function CdkStepperNext_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function CdkStepperNext_click_HostBindingHandler() { return ctx._handleClick(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"type\", ctx.type);\n    } }, inputs: { type: \"type\" } });\nCdkStepperNext.ctorParameters = () => [\n    { type: CdkStepper }\n];\nCdkStepperNext.propDecorators = {\n    type: [{ type: Input }],\n    _handleClick: [{ type: HostListener, args: ['click',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkStepperNext, [{\n        type: Directive,\n        args: [{\n                selector: 'button[cdkStepperNext]',\n                host: {\n                    '[type]': 'type'\n                }\n            }]\n    }], function () { return [{ type: CdkStepper }]; }, { type: [{\n            type: Input\n        }], \n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _handleClick: [{\n            type: HostListener,\n            args: ['click']\n        }] }); })();\n/** Button that moves to the previous step in a stepper workflow. */\nclass CdkStepperPrevious {\n    constructor(_stepper) {\n        this._stepper = _stepper;\n        /** Type of the previous button. Defaults to \"button\" if not specified. */\n        this.type = 'button';\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _handleClick() {\n        this._stepper.previous();\n    }\n}\nCdkStepperPrevious.ɵfac = function CdkStepperPrevious_Factory(t) { return new (t || CdkStepperPrevious)(ɵngcc0.ɵɵdirectiveInject(CdkStepper)); };\nCdkStepperPrevious.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkStepperPrevious, selectors: [[\"button\", \"cdkStepperPrevious\", \"\"]], hostVars: 1, hostBindings: function CdkStepperPrevious_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function CdkStepperPrevious_click_HostBindingHandler() { return ctx._handleClick(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"type\", ctx.type);\n    } }, inputs: { type: \"type\" } });\nCdkStepperPrevious.ctorParameters = () => [\n    { type: CdkStepper }\n];\nCdkStepperPrevious.propDecorators = {\n    type: [{ type: Input }],\n    _handleClick: [{ type: HostListener, args: ['click',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkStepperPrevious, [{\n        type: Directive,\n        args: [{\n                selector: 'button[cdkStepperPrevious]',\n                host: {\n                    '[type]': 'type'\n                }\n            }]\n    }], function () { return [{ type: CdkStepper }]; }, { type: [{\n            type: Input\n        }], \n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _handleClick: [{\n            type: HostListener,\n            args: ['click']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass CdkStepperModule {\n}\nCdkStepperModule.ɵfac = function CdkStepperModule_Factory(t) { return new (t || CdkStepperModule)(); };\nCdkStepperModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: CdkStepperModule });\nCdkStepperModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[BidiModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkStepperModule, { declarations: function () { return [CdkStep, CdkStepper, CdkStepHeader, CdkStepLabel, CdkStepperNext, CdkStepperPrevious]; }, imports: function () { return [BidiModule]; }, exports: function () { return [CdkStep, CdkStepper, CdkStepHeader, CdkStepLabel, CdkStepperNext, CdkStepperPrevious]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkStepperModule, [{\n        type: NgModule,\n        args: [{\n                imports: [BidiModule],\n                exports: [\n                    CdkStep,\n                    CdkStepper,\n                    CdkStepHeader,\n                    CdkStepLabel,\n                    CdkStepperNext,\n                    CdkStepperPrevious,\n                ],\n                declarations: [\n                    CdkStep,\n                    CdkStepper,\n                    CdkStepHeader,\n                    CdkStepLabel,\n                    CdkStepperNext,\n                    CdkStepperPrevious,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkStep, CdkStepHeader, CdkStepLabel, CdkStepper, CdkStepperModule, CdkStepperNext, CdkStepperPrevious, MAT_STEPPER_GLOBAL_OPTIONS, STEPPER_GLOBAL_OPTIONS, STEP_STATE, StepperSelectionEvent };\n\n//# sourceMappingURL=stepper.js.map"]},"metadata":{},"sourceType":"module"}