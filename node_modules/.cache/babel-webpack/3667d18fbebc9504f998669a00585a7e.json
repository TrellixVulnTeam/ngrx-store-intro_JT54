{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar mergeMap_1 = require(\"./mergeMap\");\n\nfunction mergeMapTo(innerObservable, resultSelector, concurrent) {\n  if (concurrent === void 0) {\n    concurrent = Number.POSITIVE_INFINITY;\n  }\n\n  if (typeof resultSelector === 'function') {\n    return mergeMap_1.mergeMap(function () {\n      return innerObservable;\n    }, resultSelector, concurrent);\n  }\n\n  if (typeof resultSelector === 'number') {\n    concurrent = resultSelector;\n  }\n\n  return mergeMap_1.mergeMap(function () {\n    return innerObservable;\n  }, concurrent);\n}\n\nexports.mergeMapTo = mergeMapTo; //# sourceMappingURL=mergeMapTo.js.map","map":{"version":3,"sources":["/Users/volodymyrmaliarov/Projects/ngRxIntro/ngrx-store-intro/node_modules/rxjs/internal/operators/mergeMapTo.js"],"names":["Object","defineProperty","exports","value","mergeMap_1","require","mergeMapTo","innerObservable","resultSelector","concurrent","Number","POSITIVE_INFINITY","mergeMap"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,UAAU,GAAGC,OAAO,CAAC,YAAD,CAAxB;;AACA,SAASC,UAAT,CAAoBC,eAApB,EAAqCC,cAArC,EAAqDC,UAArD,EAAiE;AAC7D,MAAIA,UAAU,KAAK,KAAK,CAAxB,EAA2B;AAAEA,IAAAA,UAAU,GAAGC,MAAM,CAACC,iBAApB;AAAwC;;AACrE,MAAI,OAAOH,cAAP,KAA0B,UAA9B,EAA0C;AACtC,WAAOJ,UAAU,CAACQ,QAAX,CAAoB,YAAY;AAAE,aAAOL,eAAP;AAAyB,KAA3D,EAA6DC,cAA7D,EAA6EC,UAA7E,CAAP;AACH;;AACD,MAAI,OAAOD,cAAP,KAA0B,QAA9B,EAAwC;AACpCC,IAAAA,UAAU,GAAGD,cAAb;AACH;;AACD,SAAOJ,UAAU,CAACQ,QAAX,CAAoB,YAAY;AAAE,WAAOL,eAAP;AAAyB,GAA3D,EAA6DE,UAA7D,CAAP;AACH;;AACDP,OAAO,CAACI,UAAR,GAAqBA,UAArB,C,CACA","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar mergeMap_1 = require(\"./mergeMap\");\nfunction mergeMapTo(innerObservable, resultSelector, concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    if (typeof resultSelector === 'function') {\n        return mergeMap_1.mergeMap(function () { return innerObservable; }, resultSelector, concurrent);\n    }\n    if (typeof resultSelector === 'number') {\n        concurrent = resultSelector;\n    }\n    return mergeMap_1.mergeMap(function () { return innerObservable; }, concurrent);\n}\nexports.mergeMapTo = mergeMapTo;\n//# sourceMappingURL=mergeMapTo.js.map"]},"metadata":{},"sourceType":"script"}