{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Subject_1 = require(\"../Subject\");\n\nvar Observable_1 = require(\"../Observable\");\n\nvar Subscriber_1 = require(\"../Subscriber\");\n\nvar Subscription_1 = require(\"../Subscription\");\n\nvar refCount_1 = require(\"../operators/refCount\");\n\nvar ConnectableObservable = function (_super) {\n  __extends(ConnectableObservable, _super);\n\n  function ConnectableObservable(source, subjectFactory) {\n    var _this = _super.call(this) || this;\n\n    _this.source = source;\n    _this.subjectFactory = subjectFactory;\n    _this._refCount = 0;\n    _this._isComplete = false;\n    return _this;\n  }\n\n  ConnectableObservable.prototype._subscribe = function (subscriber) {\n    return this.getSubject().subscribe(subscriber);\n  };\n\n  ConnectableObservable.prototype.getSubject = function () {\n    var subject = this._subject;\n\n    if (!subject || subject.isStopped) {\n      this._subject = this.subjectFactory();\n    }\n\n    return this._subject;\n  };\n\n  ConnectableObservable.prototype.connect = function () {\n    var connection = this._connection;\n\n    if (!connection) {\n      this._isComplete = false;\n      connection = this._connection = new Subscription_1.Subscription();\n      connection.add(this.source.subscribe(new ConnectableSubscriber(this.getSubject(), this)));\n\n      if (connection.closed) {\n        this._connection = null;\n        connection = Subscription_1.Subscription.EMPTY;\n      }\n    }\n\n    return connection;\n  };\n\n  ConnectableObservable.prototype.refCount = function () {\n    return refCount_1.refCount()(this);\n  };\n\n  return ConnectableObservable;\n}(Observable_1.Observable);\n\nexports.ConnectableObservable = ConnectableObservable;\n\nexports.connectableObservableDescriptor = function () {\n  var connectableProto = ConnectableObservable.prototype;\n  return {\n    operator: {\n      value: null\n    },\n    _refCount: {\n      value: 0,\n      writable: true\n    },\n    _subject: {\n      value: null,\n      writable: true\n    },\n    _connection: {\n      value: null,\n      writable: true\n    },\n    _subscribe: {\n      value: connectableProto._subscribe\n    },\n    _isComplete: {\n      value: connectableProto._isComplete,\n      writable: true\n    },\n    getSubject: {\n      value: connectableProto.getSubject\n    },\n    connect: {\n      value: connectableProto.connect\n    },\n    refCount: {\n      value: connectableProto.refCount\n    }\n  };\n}();\n\nvar ConnectableSubscriber = function (_super) {\n  __extends(ConnectableSubscriber, _super);\n\n  function ConnectableSubscriber(destination, connectable) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.connectable = connectable;\n    return _this;\n  }\n\n  ConnectableSubscriber.prototype._error = function (err) {\n    this._unsubscribe();\n\n    _super.prototype._error.call(this, err);\n  };\n\n  ConnectableSubscriber.prototype._complete = function () {\n    this.connectable._isComplete = true;\n\n    this._unsubscribe();\n\n    _super.prototype._complete.call(this);\n  };\n\n  ConnectableSubscriber.prototype._unsubscribe = function () {\n    var connectable = this.connectable;\n\n    if (connectable) {\n      this.connectable = null;\n      var connection = connectable._connection;\n      connectable._refCount = 0;\n      connectable._subject = null;\n      connectable._connection = null;\n\n      if (connection) {\n        connection.unsubscribe();\n      }\n    }\n  };\n\n  return ConnectableSubscriber;\n}(Subject_1.SubjectSubscriber);\n\nvar RefCountOperator = function () {\n  function RefCountOperator(connectable) {\n    this.connectable = connectable;\n  }\n\n  RefCountOperator.prototype.call = function (subscriber, source) {\n    var connectable = this.connectable;\n    connectable._refCount++;\n    var refCounter = new RefCountSubscriber(subscriber, connectable);\n    var subscription = source.subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      refCounter.connection = connectable.connect();\n    }\n\n    return subscription;\n  };\n\n  return RefCountOperator;\n}();\n\nvar RefCountSubscriber = function (_super) {\n  __extends(RefCountSubscriber, _super);\n\n  function RefCountSubscriber(destination, connectable) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.connectable = connectable;\n    return _this;\n  }\n\n  RefCountSubscriber.prototype._unsubscribe = function () {\n    var connectable = this.connectable;\n\n    if (!connectable) {\n      this.connection = null;\n      return;\n    }\n\n    this.connectable = null;\n    var refCount = connectable._refCount;\n\n    if (refCount <= 0) {\n      this.connection = null;\n      return;\n    }\n\n    connectable._refCount = refCount - 1;\n\n    if (refCount > 1) {\n      this.connection = null;\n      return;\n    }\n\n    var connection = this.connection;\n    var sharedConnection = connectable._connection;\n    this.connection = null;\n\n    if (sharedConnection && (!connection || sharedConnection === connection)) {\n      sharedConnection.unsubscribe();\n    }\n  };\n\n  return RefCountSubscriber;\n}(Subscriber_1.Subscriber); //# sourceMappingURL=ConnectableObservable.js.map","map":{"version":3,"sources":["/Users/volodymyrmaliarov/Projects/ngRxIntro/ngrx-store-intro/node_modules/rxjs/internal/observable/ConnectableObservable.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","defineProperty","exports","value","Subject_1","require","Observable_1","Subscriber_1","Subscription_1","refCount_1","ConnectableObservable","_super","source","subjectFactory","_this","call","_refCount","_isComplete","_subscribe","subscriber","getSubject","subscribe","subject","_subject","isStopped","connect","connection","_connection","Subscription","add","ConnectableSubscriber","closed","EMPTY","refCount","Observable","connectableObservableDescriptor","connectableProto","operator","writable","destination","connectable","_error","err","_unsubscribe","_complete","unsubscribe","SubjectSubscriber","RefCountOperator","refCounter","RefCountSubscriber","subscription","sharedConnection","Subscriber"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Subject_1 = require(\"../Subject\");\nvar Observable_1 = require(\"../Observable\");\nvar Subscriber_1 = require(\"../Subscriber\");\nvar Subscription_1 = require(\"../Subscription\");\nvar refCount_1 = require(\"../operators/refCount\");\nvar ConnectableObservable = (function (_super) {\n    __extends(ConnectableObservable, _super);\n    function ConnectableObservable(source, subjectFactory) {\n        var _this = _super.call(this) || this;\n        _this.source = source;\n        _this.subjectFactory = subjectFactory;\n        _this._refCount = 0;\n        _this._isComplete = false;\n        return _this;\n    }\n    ConnectableObservable.prototype._subscribe = function (subscriber) {\n        return this.getSubject().subscribe(subscriber);\n    };\n    ConnectableObservable.prototype.getSubject = function () {\n        var subject = this._subject;\n        if (!subject || subject.isStopped) {\n            this._subject = this.subjectFactory();\n        }\n        return this._subject;\n    };\n    ConnectableObservable.prototype.connect = function () {\n        var connection = this._connection;\n        if (!connection) {\n            this._isComplete = false;\n            connection = this._connection = new Subscription_1.Subscription();\n            connection.add(this.source\n                .subscribe(new ConnectableSubscriber(this.getSubject(), this)));\n            if (connection.closed) {\n                this._connection = null;\n                connection = Subscription_1.Subscription.EMPTY;\n            }\n        }\n        return connection;\n    };\n    ConnectableObservable.prototype.refCount = function () {\n        return refCount_1.refCount()(this);\n    };\n    return ConnectableObservable;\n}(Observable_1.Observable));\nexports.ConnectableObservable = ConnectableObservable;\nexports.connectableObservableDescriptor = (function () {\n    var connectableProto = ConnectableObservable.prototype;\n    return {\n        operator: { value: null },\n        _refCount: { value: 0, writable: true },\n        _subject: { value: null, writable: true },\n        _connection: { value: null, writable: true },\n        _subscribe: { value: connectableProto._subscribe },\n        _isComplete: { value: connectableProto._isComplete, writable: true },\n        getSubject: { value: connectableProto.getSubject },\n        connect: { value: connectableProto.connect },\n        refCount: { value: connectableProto.refCount }\n    };\n})();\nvar ConnectableSubscriber = (function (_super) {\n    __extends(ConnectableSubscriber, _super);\n    function ConnectableSubscriber(destination, connectable) {\n        var _this = _super.call(this, destination) || this;\n        _this.connectable = connectable;\n        return _this;\n    }\n    ConnectableSubscriber.prototype._error = function (err) {\n        this._unsubscribe();\n        _super.prototype._error.call(this, err);\n    };\n    ConnectableSubscriber.prototype._complete = function () {\n        this.connectable._isComplete = true;\n        this._unsubscribe();\n        _super.prototype._complete.call(this);\n    };\n    ConnectableSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (connectable) {\n            this.connectable = null;\n            var connection = connectable._connection;\n            connectable._refCount = 0;\n            connectable._subject = null;\n            connectable._connection = null;\n            if (connection) {\n                connection.unsubscribe();\n            }\n        }\n    };\n    return ConnectableSubscriber;\n}(Subject_1.SubjectSubscriber));\nvar RefCountOperator = (function () {\n    function RefCountOperator(connectable) {\n        this.connectable = connectable;\n    }\n    RefCountOperator.prototype.call = function (subscriber, source) {\n        var connectable = this.connectable;\n        connectable._refCount++;\n        var refCounter = new RefCountSubscriber(subscriber, connectable);\n        var subscription = source.subscribe(refCounter);\n        if (!refCounter.closed) {\n            refCounter.connection = connectable.connect();\n        }\n        return subscription;\n    };\n    return RefCountOperator;\n}());\nvar RefCountSubscriber = (function (_super) {\n    __extends(RefCountSubscriber, _super);\n    function RefCountSubscriber(destination, connectable) {\n        var _this = _super.call(this, destination) || this;\n        _this.connectable = connectable;\n        return _this;\n    }\n    RefCountSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (!connectable) {\n            this.connection = null;\n            return;\n        }\n        this.connectable = null;\n        var refCount = connectable._refCount;\n        if (refCount <= 0) {\n            this.connection = null;\n            return;\n        }\n        connectable._refCount = refCount - 1;\n        if (refCount > 1) {\n            this.connection = null;\n            return;\n        }\n        var connection = this.connection;\n        var sharedConnection = connectable._connection;\n        this.connection = null;\n        if (sharedConnection && (!connection || sharedConnection === connection)) {\n            sharedConnection.unsubscribe();\n        }\n    };\n    return RefCountSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=ConnectableObservable.js.map"]},"metadata":{},"sourceType":"script"}