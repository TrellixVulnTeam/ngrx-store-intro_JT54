{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Observable_1 = require(\"../Observable\");\n\nvar from_1 = require(\"./from\");\n\nvar empty_1 = require(\"./empty\");\n\nfunction defer(observableFactory) {\n  return new Observable_1.Observable(function (subscriber) {\n    var input;\n\n    try {\n      input = observableFactory();\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n\n    var source = input ? from_1.from(input) : empty_1.empty();\n    return source.subscribe(subscriber);\n  });\n}\n\nexports.defer = defer; //# sourceMappingURL=defer.js.map","map":{"version":3,"sources":["/Users/volodymyrmaliarov/Projects/ngRxIntro/ngrx-store-intro/node_modules/rxjs/internal/observable/defer.js"],"names":["Object","defineProperty","exports","value","Observable_1","require","from_1","empty_1","defer","observableFactory","Observable","subscriber","input","err","error","undefined","source","from","empty","subscribe"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,YAAY,GAAGC,OAAO,CAAC,eAAD,CAA1B;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAApB;;AACA,IAAIE,OAAO,GAAGF,OAAO,CAAC,SAAD,CAArB;;AACA,SAASG,KAAT,CAAeC,iBAAf,EAAkC;AAC9B,SAAO,IAAIL,YAAY,CAACM,UAAjB,CAA4B,UAAUC,UAAV,EAAsB;AACrD,QAAIC,KAAJ;;AACA,QAAI;AACAA,MAAAA,KAAK,GAAGH,iBAAiB,EAAzB;AACH,KAFD,CAGA,OAAOI,GAAP,EAAY;AACRF,MAAAA,UAAU,CAACG,KAAX,CAAiBD,GAAjB;AACA,aAAOE,SAAP;AACH;;AACD,QAAIC,MAAM,GAAGJ,KAAK,GAAGN,MAAM,CAACW,IAAP,CAAYL,KAAZ,CAAH,GAAwBL,OAAO,CAACW,KAAR,EAA1C;AACA,WAAOF,MAAM,CAACG,SAAP,CAAiBR,UAAjB,CAAP;AACH,GAXM,CAAP;AAYH;;AACDT,OAAO,CAACM,KAAR,GAAgBA,KAAhB,C,CACA","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"../Observable\");\nvar from_1 = require(\"./from\");\nvar empty_1 = require(\"./empty\");\nfunction defer(observableFactory) {\n    return new Observable_1.Observable(function (subscriber) {\n        var input;\n        try {\n            input = observableFactory();\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n        var source = input ? from_1.from(input) : empty_1.empty();\n        return source.subscribe(subscriber);\n    });\n}\nexports.defer = defer;\n//# sourceMappingURL=defer.js.map"]},"metadata":{},"sourceType":"script"}